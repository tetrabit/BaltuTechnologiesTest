<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.EKS</name>
    </assembly>
    <members>
        <member name="T:Amazon.EKS.AmazonEKSConfig">
            <summary>
            Configuration for accessing Amazon EKS service
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSException">
            <summary>
             Common exception for the EKS service.
             </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonEKSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Internal.AmazonEKSMetadata">
            <summary>
            Service metadata for  Amazon EKS service
            </summary>
        </member>
        <member name="P:Amazon.EKS.Internal.AmazonEKSMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Internal.AmazonEKSMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSRequest">
            <summary>
            Base class for EKS operation requests.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.BadRequestException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.Certificate">
            <summary>
            An object representing the <code>certificate-authority-data</code> for your cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Certificate.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The Base64-encoded certificate data required to communicate with your cluster. Add
            this to the <code>certificate-authority-data</code> section of the <code>kubeconfig</code>
            file for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ClientException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.Cluster">
            <summary>
            An object representing an Amazon EKS cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.CertificateAuthority">
            <summary>
            Gets and sets the property CertificateAuthority. 
            <para>
            The <code>certificate-authority-data</code> for your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the cluster was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The endpoint for your Kubernetes API server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity provider information for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            The logging configuration for your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.PlatformVersion">
            <summary>
            Gets and sets the property PlatformVersion. 
            <para>
            The platform version of your Amazon EKS cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html">Platform
            Versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig. 
            <para>
            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes
            control plane to make calls to AWS API operations on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata that you apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Cluster.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The Kubernetes server version for the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API
            server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique
            and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the worker nodes (for example, to support <code>kubectl exec</code>,
            <code>logs</code>, and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS worker nodes run in your AWS account and connect to your cluster's control
            plane via the Kubernetes API server endpoint and a certificate file that is created
            for your cluster.
            </para>
             
            <para>
            You can use the <code>endpointPublicAccess</code> and <code>endpointPrivateAccess</code>
            parameters to enable or disable public and private access to your cluster's Kubernetes
            API server endpoint. By default, public access is enabled, and private access is disabled.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             
            <para>
            You can use the <code>logging</code> parameter to enable or disable exporting the
            Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster
            control plane logs aren't exported to CloudWatch Logs. For more information, see <a
            href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            Cluster creation typically takes between 10 and 15 minutes. After you create an Amazon
            EKS cluster, you must configure your Kubernetes tooling to communicate with the API
            server and launch worker nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            Enable or disable exporting the Kubernetes control plane logs for your cluster to
            CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch
            Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The unique name to give to your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig. 
            <para>
            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify
            at least two subnets. You can specify up to five security groups, but we recommend
            that you use a dedicated security group for your cluster control plane.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that provides permissions for Amazon
            EKS to make calls to other AWS API operations on your behalf. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon
            EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The desired Kubernetes version for your cluster. If you don't specify a value here,
            the latest version available in Amazon EKS is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your new cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes the Amazon EKS cluster control plane. 
            
             <note> 
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeClusterRequest">
            <summary>
            Container for the parameters to the DescribeCluster operation.
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeClusterRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the cluster to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeClusterResponse">
            <summary>
            This is the response object from the DescribeCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your specified cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeUpdateRequest">
            <summary>
            Container for the parameters to the DescribeUpdate operation.
            Returns descriptive information about an update against your Amazon EKS cluster.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateRequest.UpdateId">
            <summary>
            Gets and sets the property UpdateId. 
            <para>
            The ID of the update to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.DescribeUpdateResponse">
            <summary>
            This is the response object from the DescribeUpdate operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.DescribeUpdateResponse.Update">
            <summary>
            Gets and sets the property Update. 
            <para>
            The full description of the specified update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ErrorDetail">
            <summary>
            An object representing an error when an asynchronous operation fails.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            A brief description of the error. 
            </para>
             <ul> <li> 
            <para>
             <b>SubnetNotFound</b>: We couldn't find one of the subnets associated with the cluster.
            </para>
             </li> <li> 
            <para>
             <b>SecurityGroupNotFound</b>: We couldn't find one of the security groups associated
            with the cluster.
            </para>
             </li> <li> 
            <para>
             <b>EniLimitReached</b>: You have reached the elastic network interface limit for
            your account.
            </para>
             </li> <li> 
            <para>
             <b>IpNotAvailable</b>: A subnet associated with the cluster doesn't have any free
            IP addresses.
            </para>
             </li> <li> 
            <para>
             <b>AccessDenied</b>: You don't have permissions to perform the specified operation.
            </para>
             </li> <li> 
            <para>
             <b>OperationNotPermitted</b>: The service role associated with the cluster doesn't
            have the required access permissions for Amazon EKS.
            </para>
             </li> <li> 
            <para>
             <b>VpcIdNotFound</b>: We couldn't find the VPC associated with the cluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            A more complete description of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ErrorDetail.ResourceIds">
            <summary>
            Gets and sets the property ResourceIds. 
            <para>
            An optional field that contains the resource IDs associated with the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Identity">
            <summary>
            An object representing an identity provider for authentication credentials.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Identity.Oidc">
            <summary>
            Gets and sets the property Oidc. 
            <para>
            The <a href="https://openid.net/connect/">OpenID Connect</a> identity provider information
            for the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller">
            <summary>
            Response Unmarshaller for Certificate Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Certificate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.EKS.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.EKS.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller">
            <summary>
            DescribeCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller">
            <summary>
            DescribeUpdate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Marshall(Amazon.EKS.Model.DescribeUpdateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeUpdate operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.DescribeUpdateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#ErrorDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller">
            <summary>
            Response Unmarshaller for Identity Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Identity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.IdentityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller">
            <summary>
            ListClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.EKS.Model.ListClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.EKS.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller">
            <summary>
            ListUpdates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Marshall(Amazon.EKS.Model.ListUpdatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUpdates operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.ListUpdatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller">
            <summary>
            Logging Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller.Marshall(Amazon.EKS.Model.Logging,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller">
            <summary>
            Response Unmarshaller for Logging Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Logging,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.LoggingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller">
            <summary>
            LogSetup Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller.Marshall(Amazon.EKS.Model.LogSetup,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller">
            <summary>
            Response Unmarshaller for LogSetup Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#LogSetup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.LogSetupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller">
            <summary>
            Response Unmarshaller for OIDC Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#OIDC,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.OIDCUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.EKS.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.EKS.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller">
            <summary>
            UpdateClusterConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateClusterConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller">
            <summary>
            UpdateClusterVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Marshall(Amazon.EKS.Model.UpdateClusterVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateClusterVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateClusterVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateParam Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#UpdateParam,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateParamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller">
            <summary>
            Response Unmarshaller for Update Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#Update,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.UpdateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller">
            <summary>
            VpcConfigRequest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller.Marshall(Amazon.EKS.Model.VpcConfigRequest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigRequestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VpcConfigResponse Object
            </summary>  
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#EKS#Model#VpcConfigResponse,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.EKS.Model.Internal.MarshallTransformations.VpcConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.EKS.Model.InvalidParameterException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.InvalidRequestException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.ListClustersRequest">
            <summary>
            Container for the parameters to the ListClusters operation.
            Lists the Amazon EKS clusters in your AWS account in the specified Region.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListClustersResponse">
            <summary>
            This is the response object from the ListClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            A list of all of the clusters for your account in the specified Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListClusters</code>
            request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List the tags for an Amazon EKS resource.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the supported resources are Amazon EKS clusters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListUpdatesRequest">
            <summary>
            Container for the parameters to the ListUpdates operation.
            Lists the updates associated with an Amazon EKS cluster in your AWS account, in the
            specified Region.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of update results returned by <code>ListUpdates</code> in paginated
            output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListUpdates</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to list updates for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ListUpdatesResponse">
            <summary>
            This is the response object from the ListUpdates operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListUpdates</code> request.
            When the results of a <code>ListUpdates</code> request exceed <code>maxResults</code>,
            you can use this value to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.ListUpdatesResponse.UpdateIds">
            <summary>
            Gets and sets the property UpdateIds. 
            <para>
            A list of all the updates for the specified cluster and Region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Logging">
            <summary>
            An object representing the logging configuration for resources in your cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Logging.ClusterLogging">
            <summary>
            Gets and sets the property ClusterLogging. 
            <para>
            The cluster control plane logging configuration for your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.LogSetup">
            <summary>
            An object representing the enabled or disabled Kubernetes control plane logs for your
            cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LogSetup.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            If a log type is enabled, that log type exports its control plane logs to CloudWatch
            Logs. If a log type isn't enabled, that log type doesn't export its control plane
            logs. Each individual log type can be enabled or disabled independently.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.LogSetup.Types">
            <summary>
            Gets and sets the property Types. 
            <para>
            The available cluster control plane log types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.NotFoundException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.OIDC">
            <summary>
            An object representing the <a href="https://openid.net/connect/">OpenID Connect</a>
            identity provider information for the cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.OIDC.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            The issuer URL for the OpenID Connect identity provider.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceInUseException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceLimitExceededException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.ResourceNotFoundException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.ServerException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.ServiceUnavailableException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the
            supported resources are Amazon EKS clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to add to the resource. A tag is an array of key-value pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            <summary>
             EKS exception
             </summary>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedAvailabilityZoneException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.EKS.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.EKS.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently,
            the supported resources are Amazon EKS clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The keys of the tags to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.Update">
            <summary>
            An object representing an asynchronous update.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix epoch timestamp in seconds for when the update was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Any errors associated with a <code>Failed</code> update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A UUID that is used to track the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Params">
            <summary>
            Gets and sets the property Params. 
            <para>
            A key-value map that contains the parameters associated with the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.Update.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterConfigRequest">
            <summary>
            Container for the parameters to the UpdateClusterConfig operation.
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            At this time, you can not update the subnets or security group IDs for an existing
            cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.Logging">
            <summary>
            Gets and sets the property Logging. 
            <para>
            Enable or disable exporting the Kubernetes control plane logs for your cluster to
            CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch
            Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigRequest.ResourcesVpcConfig">
            <summary>
            Gets and sets the property ResourcesVpcConfig.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterConfigResponse">
            <summary>
            This is the response object from the UpdateClusterConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterConfigResponse.Update">
            <summary>
            Gets and sets the property Update.
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterVersionRequest">
            <summary>
            Container for the parameters to the UpdateClusterVersion operation.
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Amazon EKS cluster to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The desired Kubernetes version following a successful update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateClusterVersionResponse">
            <summary>
            This is the response object from the UpdateClusterVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateClusterVersionResponse.Update">
            <summary>
            Gets and sets the property Update. 
            <para>
            The full description of the specified update
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.UpdateParam">
            <summary>
            An object representing the details of an update request.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateParam.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The keys associated with an update request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.UpdateParam.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the keys submitted as part of an update request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.VpcConfigRequest">
            <summary>
            An object representing the VPC configuration to use for an Amazon EKS cluster.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.EndpointPrivateAccess">
            <summary>
            Gets and sets the property EndpointPrivateAccess. 
            <para>
            Set this value to <code>true</code> to enable private access for your cluster's Kubernetes
            API server endpoint. If you enable private access, Kubernetes API requests from within
            your cluster's VPC use the private VPC endpoint. The default value for this parameter
            is <code>false</code>, which disables private access for your Kubernetes API server.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.EndpointPublicAccess">
            <summary>
            Gets and sets the property EndpointPublicAccess. 
            <para>
            Set this value to <code>false</code> to disable public access for your cluster's Kubernetes
            API server endpoint. If you disable public access, your cluster's Kubernetes API server
            can receive only requests from within the cluster VPC. The default value for this
            parameter is <code>true</code>, which enables public access for your Kubernetes API
            server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            Specify one or more security groups for the cross-account elastic network interfaces
            that Amazon EKS creates to use to allow communication between your worker nodes and
            the Kubernetes control plane. If you don't specify a security group, the default security
            group for your VPC is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            Specify subnets for your Amazon EKS worker nodes. Amazon EKS creates cross-account
            elastic network interfaces in these subnets to allow communication between your worker
            nodes and the Kubernetes control plane.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.Model.VpcConfigResponse">
            <summary>
            An object representing an Amazon EKS cluster VPC configuration response.
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.EndpointPrivateAccess">
            <summary>
            Gets and sets the property EndpointPrivateAccess. 
            <para>
            This parameter indicates whether the Amazon EKS private API server endpoint is enabled.
            If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests
            that originate from within your cluster's VPC use the private VPC endpoint instead
            of traversing the internet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.EndpointPublicAccess">
            <summary>
            Gets and sets the property EndpointPublicAccess. 
            <para>
            This parameter indicates whether the Amazon EKS public API server endpoint is enabled.
            If the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes
            API server can receive only requests that originate from within the cluster VPC. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The security groups associated with the cross-account elastic network interfaces that
            are used to allow communication between your worker nodes and the Kubernetes control
            plane.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The subnets associated with your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EKS.Model.VpcConfigResponse.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The VPC associated with your cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EKS.ClusterStatus">
            <summary>
            Constants used for properties of type ClusterStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.CREATING">
            <summary>
            Constant CREATING for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.DELETING">
            <summary>
            Constant DELETING for ClusterStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.ClusterStatus.FAILED">
            <summary>
            Constant FAILED for ClusterStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ClusterStatus.op_Implicit(System.String)~Amazon.EKS.ClusterStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.ErrorCode">
            <summary>
            Constants used for properties of type ErrorCode.
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.AccessDenied">
            <summary>
            Constant AccessDenied for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.EniLimitReached">
            <summary>
            Constant EniLimitReached for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.IpNotAvailable">
            <summary>
            Constant IpNotAvailable for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.OperationNotPermitted">
            <summary>
            Constant OperationNotPermitted for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.SecurityGroupNotFound">
            <summary>
            Constant SecurityGroupNotFound for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.SubnetNotFound">
            <summary>
            Constant SubnetNotFound for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.Unknown">
            <summary>
            Constant Unknown for ErrorCode
            </summary>
        </member>
        <member name="F:Amazon.EKS.ErrorCode.VpcIdNotFound">
            <summary>
            Constant VpcIdNotFound for ErrorCode
            </summary>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.ErrorCode.op_Implicit(System.String)~Amazon.EKS.ErrorCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.LogType">
            <summary>
            Constants used for properties of type LogType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Api">
            <summary>
            Constant Api for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Audit">
            <summary>
            Constant Audit for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Authenticator">
            <summary>
            Constant Authenticator for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.ControllerManager">
            <summary>
            Constant ControllerManager for LogType
            </summary>
        </member>
        <member name="F:Amazon.EKS.LogType.Scheduler">
            <summary>
            Constant Scheduler for LogType
            </summary>
        </member>
        <member name="M:Amazon.EKS.LogType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.LogType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.LogType.op_Implicit(System.String)~Amazon.EKS.LogType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateParamType">
            <summary>
            Constants used for properties of type UpdateParamType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.ClusterLogging">
            <summary>
            Constant ClusterLogging for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.EndpointPrivateAccess">
            <summary>
            Constant EndpointPrivateAccess for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.EndpointPublicAccess">
            <summary>
            Constant EndpointPublicAccess for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.PlatformVersion">
            <summary>
            Constant PlatformVersion for UpdateParamType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateParamType.Version">
            <summary>
            Constant Version for UpdateParamType
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateParamType.op_Implicit(System.String)~Amazon.EKS.UpdateParamType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateStatus">
            <summary>
            Constants used for properties of type UpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Cancelled">
            <summary>
            Constant Cancelled for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Failed">
            <summary>
            Constant Failed for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.InProgress">
            <summary>
            Constant InProgress for UpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateStatus.Successful">
            <summary>
            Constant Successful for UpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateStatus.op_Implicit(System.String)~Amazon.EKS.UpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.UpdateType">
            <summary>
            Constants used for properties of type UpdateType.
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.EndpointAccessUpdate">
            <summary>
            Constant EndpointAccessUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.LoggingUpdate">
            <summary>
            Constant LoggingUpdate for UpdateType
            </summary>
        </member>
        <member name="F:Amazon.EKS.UpdateType.VersionUpdate">
            <summary>
            Constant VersionUpdate for UpdateType
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.EKS.UpdateType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.EKS.UpdateType.op_Implicit(System.String)~Amazon.EKS.UpdateType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.EKS.AmazonEKSClient">
             <summary>
             Implementation for accessing EKS
            
             Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it
             easy for you to run Kubernetes on AWS without needing to stand up or maintain your
             own Kubernetes control plane. Kubernetes is an open-source system for automating the
             deployment, scaling, and management of containerized applications. 
             
              
             <para>
             Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you
             can use all the existing plugins and tooling from the Kubernetes community. Applications
             running on Amazon EKS are fully compatible with applications running on any standard
             Kubernetes environment, whether running in on-premises data centers or public clouds.
             This means that you can easily migrate any standard Kubernetes application to Amazon
             EKS without any code modification required.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.EKS.AmazonEKSConfig)">
             <summary>
             Constructs AmazonEKSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Credentials and an
            AmazonEKSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEKSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.#ctor(System.String,System.String,System.String,Amazon.EKS.AmazonEKSConfig)">
            <summary>
            Constructs AmazonEKSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonEKSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEKSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.EKS.AmazonEKSClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.CreateClusterAsync(Amazon.EKS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API
            server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique
            and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the worker nodes (for example, to support <code>kubectl exec</code>,
            <code>logs</code>, and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS worker nodes run in your AWS account and connect to your cluster's control
            plane via the Kubernetes API server endpoint and a certificate file that is created
            for your cluster.
            </para>
             
            <para>
            You can use the <code>endpointPublicAccess</code> and <code>endpointPrivateAccess</code>
            parameters to enable or disable public and private access to your cluster's Kubernetes
            API server endpoint. By default, public access is enabled, and private access is disabled.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             
            <para>
            You can use the <code>logging</code> parameter to enable or disable exporting the
            Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster
            control plane logs aren't exported to CloudWatch Logs. For more information, see <a
            href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            Cluster creation typically takes between 10 and 15 minutes. After you create an Amazon
            EKS cluster, you must configure your Kubernetes tooling to communicate with the API
            server and launch worker nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DeleteClusterAsync(Amazon.EKS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon EKS cluster control plane. 
            
             <note> 
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeClusterAsync(Amazon.EKS.Model.DescribeClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.DescribeUpdateAsync(Amazon.EKS.Model.DescribeUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListClustersAsync(Amazon.EKS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS clusters in your AWS account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListTagsForResourceAsync(Amazon.EKS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.ListUpdatesAsync(Amazon.EKS.Model.ListUpdatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster in your AWS account, in the
            specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.TagResourceAsync(Amazon.EKS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UntagResourceAsync(Amazon.EKS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterConfigAsync(Amazon.EKS.Model.UpdateClusterConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            At this time, you can not update the subnets or security group IDs for an existing
            cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.AmazonEKSClient.UpdateClusterVersionAsync(Amazon.EKS.Model.UpdateClusterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
        <member name="T:Amazon.EKS.IAmazonEKS">
             <summary>
             Interface for accessing EKS
            
             Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it
             easy for you to run Kubernetes on AWS without needing to stand up or maintain your
             own Kubernetes control plane. Kubernetes is an open-source system for automating the
             deployment, scaling, and management of containerized applications. 
             
              
             <para>
             Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you
             can use all the existing plugins and tooling from the Kubernetes community. Applications
             running on Amazon EKS are fully compatible with applications running on any standard
             Kubernetes environment, whether running in on-premises data centers or public clouds.
             This means that you can easily migrate any standard Kubernetes application to Amazon
             EKS without any code modification required.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.CreateClusterAsync(Amazon.EKS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API
            server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique
            and runs on its own set of Amazon EC2 instances.
            </para>
             
            <para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the worker nodes (for example, to support <code>kubectl exec</code>,
            <code>logs</code>, and <code>proxy</code> data flows).
            </para>
             
            <para>
            Amazon EKS worker nodes run in your AWS account and connect to your cluster's control
            plane via the Kubernetes API server endpoint and a certificate file that is created
            for your cluster.
            </para>
             
            <para>
            You can use the <code>endpointPublicAccess</code> and <code>endpointPrivateAccess</code>
            parameters to enable or disable public and private access to your cluster's Kubernetes
            API server endpoint. By default, public access is enabled, and private access is disabled.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             
            <para>
            You can use the <code>logging</code> parameter to enable or disable exporting the
            Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster
            control plane logs aren't exported to CloudWatch Logs. For more information, see <a
            href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            Cluster creation typically takes between 10 and 15 minutes. After you create an Amazon
            EKS cluster, you must configure your Kubernetes tooling to communicate with the API
            server and launch worker nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS Worker Nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceLimitExceededException">
            You have encountered a service limit on the specified resource.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <exception cref="T:Amazon.EKS.Model.UnsupportedAvailabilityZoneException">
            At least one of your specified cluster subnets is in an Availability Zone that does
            not support Amazon EKS. The exception output specifies the supported Availability
            Zones for your account, from which you can choose subnets for your cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DeleteClusterAsync(Amazon.EKS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the Amazon EKS cluster control plane. 
            
             <note> 
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeClusterAsync(Amazon.EKS.Model.DescribeClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para>
             <note> 
            <para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCluster service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster">REST API Reference for DescribeCluster Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.DescribeUpdateAsync(Amazon.EKS.Model.DescribeUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeUpdate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeUpdate service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate">REST API Reference for DescribeUpdate Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListClustersAsync(Amazon.EKS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the Amazon EKS clusters in your AWS account in the specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClusters service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServiceUnavailableException">
            The service is unavailable. Back off and retry the operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListTagsForResourceAsync(Amazon.EKS.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.ListUpdatesAsync(Amazon.EKS.Model.ListUpdatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the updates associated with an Amazon EKS cluster in your AWS account, in the
            specified Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUpdates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListUpdates service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates">REST API Reference for ListUpdates Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.TagResourceAsync(Amazon.EKS.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UntagResourceAsync(Amazon.EKS.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes specified tags from a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.BadRequestException">
            This exception is thrown if the request contains a semantic error. The precise meaning
            will depend on the API, and will be documented in the error message.
            </exception>
            <exception cref="T:Amazon.EKS.Model.NotFoundException">
            A service resource associated with the request could not be found. Clients should
            not retry such requests.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterConfigAsync(Amazon.EKS.Model.UpdateClusterConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            </para>
             <note> 
            <para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
            CloudWatch Pricing</a>.
            </para>
             </note> 
            <para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS Cluster Endpoint Access Control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
            
            </para>
             <important> 
            <para>
            At this time, you can not update the subnets or security group IDs for an existing
            cluster.
            </para>
             </important> 
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterConfig service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig">REST API Reference for UpdateClusterConfig Operation</seealso>
        </member>
        <member name="M:Amazon.EKS.IAmazonEKS.UpdateClusterVersionAsync(Amazon.EKS.Model.UpdateClusterVersionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateClusterVersion service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateClusterVersion service method, as returned by EKS.</returns>
            <exception cref="T:Amazon.EKS.Model.ClientException">
            These errors are usually caused by a client action. Actions can include using an action
            or resource on behalf of a user that doesn't have permissions to use the action or
            resource or specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.EKS.Model.InvalidRequestException">
            The request is invalid given the state of the cluster. Check the state of the cluster
            and the associated operations.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceInUseException">
            The specified resource is in use.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ResourceNotFoundException">
            The specified resource could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon EKS clusters are Region-specific.
            </exception>
            <exception cref="T:Amazon.EKS.Model.ServerException">
            These errors are usually caused by a server-side issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion">REST API Reference for UpdateClusterVersion Operation</seealso>
        </member>
    </members>
</doc>
