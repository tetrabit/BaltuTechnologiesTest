<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Batch</name>
    </assembly>
    <members>
        <member name="T:Amazon.Batch.AmazonBatchConfig">
            <summary>
            Configuration for accessing Amazon Batch service
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchException">
            <summary>
             Common exception for the Batch service.
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonBatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Internal.AmazonBatchMetadata">
            <summary>
            Service metadata for  Amazon Batch service
            </summary>
        </member>
        <member name="P:Amazon.Batch.Internal.AmazonBatchMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Internal.AmazonBatchMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchRequest">
            <summary>
            Base class for Batch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayProperties">
            <summary>
            An object representing an AWS Batch array job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayProperties.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayPropertiesDetail">
            <summary>
            An object representing the array properties of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The job index within the array that is associated with this job. This parameter is
            returned for array job children.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job. This parameter is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesDetail.StatusSummary">
            <summary>
            Gets and sets the property StatusSummary. 
            <para>
            A summary of the number of array job children in each available job status. This parameter
            is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ArrayPropertiesSummary">
            <summary>
            An object representing the array properties of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesSummary.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The job index within the array that is associated with this job. This parameter is
            returned for children of array jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ArrayPropertiesSummary.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the array job. This parameter is returned for parent array jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptContainerDetail">
            <summary>
            An object representing the details of a container that is part of a job attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS container instance that hosts the
            job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code for the job attempt. A non-zero exit code is considered a failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the CloudWatch Logs log stream associated with the container. The log
            group for AWS Batch jobs is <code>/aws/batch/job</code>. Each container attempt receives
            a log stream name when they reach the <code>RUNNING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces associated with the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptContainerDetail.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS task that is associated with the
            job attempt. Each container attempt receives a task ARN when they reach the <code>STARTING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.AttemptDetail">
            <summary>
            An object representing a job attempt.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            Details about the container in this job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp (in seconds and milliseconds) for when the attempt was started
            (when the attempt transitioned from the <code>STARTING</code> state to the <code>RUNNING</code>
            state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details about the current status
            of the job attempt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.AttemptDetail.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp (in seconds and milliseconds) for when the attempt was stopped
            (when the attempt transitioned from the <code>RUNNING</code> state to a terminal state,
            such as <code>SUCCEEDED</code> or <code>FAILED</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CancelJobRequest">
            <summary>
            Container for the parameters to the CancelJob operation.
            Cancels a job in an AWS Batch job queue. Jobs that are in the <code>SUBMITTED</code>,
            <code>PENDING</code>, or <code>RUNNABLE</code> state are cancelled. Jobs that have
            progressed to <code>STARTING</code> or <code>RUNNING</code> are not cancelled (but
            the API operation still succeeds, even if no job is cancelled); these jobs must be
            terminated with the <a>TerminateJob</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CancelJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The AWS Batch job ID of the job to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CancelJobRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A message to attach to the job that explains the reason for canceling it. This message
            is returned by future <a>DescribeJobs</a> operations on the job. This message is also
            recorded in the AWS Batch activity logs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CancelJobResponse">
            <summary>
            This is the response object from the CancelJob operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ClientException">
            <summary>
             Batch exception
             </summary>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeEnvironmentDetail">
            <summary>
            An object representing an AWS Batch compute environment.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            The compute resources defined for the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.EcsClusterArn">
            <summary>
            Gets and sets the property EcsClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute
            environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The service role associated with the compute environment that allows AWS Batch to
            make calls to AWS API operations on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. The valid values are <code>ENABLED</code> or
            <code>DISABLED</code>. 
            </para>
             
            <para>
            If the state is <code>ENABLED</code>, then the AWS Batch scheduler can attempt to
            place jobs from an associated job queue on the compute resources within the environment.
            If the compute environment is managed, then it can scale its instances out or in automatically,
            based on the job queue demand.
            </para>
             
            <para>
            If the state is <code>DISABLED</code>, then the AWS Batch scheduler does not attempt
            to place jobs within the environment. Jobs in a <code>STARTING</code> or <code>RUNNING</code>
            state continue to progress normally. Managed compute environments in the <code>DISABLED</code>
            state do not scale out. However, they scale in to <code>minvCpus</code> value after
            instances become idle.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the compute environment (for example, <code>CREATING</code>
            or <code>VALID</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details about the current status
            of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentDetail.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the compute environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeEnvironmentOrder">
            <summary>
            The order in which compute environments are tried for job placement within a queue.
            Compute environments are tried in ascending order. For example, if two compute environments
            are associated with a job queue, the compute environment with a lower order integer
            value is tried for job placement first.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentOrder.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeEnvironmentOrder.Order">
            <summary>
            Gets and sets the property Order. 
            <para>
            The order of the compute environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeResource">
            <summary>
            An object representing an AWS Batch compute resource.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.BidPercentage">
            <summary>
            Gets and sets the property BidPercentage. 
            <para>
            The maximum percentage that a Spot Instance price can be when compared with the On-Demand
            price for that instance type before instances are launched. For example, if your maximum
            percentage is 20%, then the Spot price must be below 20% of the current On-Demand
            price for that EC2 instance. You always pay the lowest (market) price and never more
            than your maximum percentage. If you leave this field empty, the default value is
            100% of the On-Demand price.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.DesiredvCpus">
            <summary>
            Gets and sets the property DesiredvCpus. 
            <para>
            The desired number of EC2 vCPUS in the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Ec2KeyPair">
            <summary>
            Gets and sets the property Ec2KeyPair. 
            <para>
            The EC2 key pair that is used for instances launched in the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The Amazon Machine Image (AMI) ID used for instances launched in the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.InstanceRole">
            <summary>
            Gets and sets the property InstanceRole. 
            <para>
            The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment.
            You can specify the short name or full Amazon Resource Name (ARN) of an instance profile.
            For example, <code> <i>ecsInstanceRole</i> </code> or <code>arn:aws:iam::<i>&lt;aws_account_id&gt;</i>:instance-profile/<i>ecsInstanceRole</i>
            </code>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon
            ECS Instance Role</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            The instances types that may be launched. You can specify instance families to launch
            any instance type within those families (for example, <code>c4</code> or <code>p3</code>),
            or you can specify specific sizes within a family (such as <code>c4.8xlarge</code>).
            You can also choose <code>optimal</code> to pick instance types (from the C, M, and
            R instance families) on the fly that match the demand of your job queues.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.LaunchTemplate">
            <summary>
            Gets and sets the property LaunchTemplate. 
            <para>
            The launch template to use for your compute resources. Any other compute resource
            parameters that you specify in a <a>CreateComputeEnvironment</a> API operation override
            the same parameters in the launch template. You must specify either the launch template
            ID or launch template name in the request, but not both. For more information, see
            <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Launch
            Template Support</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.MaxvCpus">
            <summary>
            Gets and sets the property MaxvCpus. 
            <para>
            The maximum number of EC2 vCPUs that an environment can reach. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.MinvCpus">
            <summary>
            Gets and sets the property MinvCpus. 
            <para>
            The minimum number of EC2 vCPUs that an environment should maintain (even if the compute
            environment is <code>DISABLED</code>). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
            The Amazon EC2 placement group to associate with your compute resources. If you intend
            to submit multi-node parallel jobs to your compute environment, you should consider
            creating a cluster placement group and associate it with your compute resources. This
            keeps your multi-node parallel job on a logical grouping of instances within a single
            Availability Zone with high network flow potential. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            Groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The EC2 security group that is associated with instances launched in the compute environment.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.SpotIamFleetRole">
            <summary>
            Gets and sets the property SpotIamFleetRole. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a
            <code>SPOT</code> compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html">Amazon
            EC2 Spot Fleet Role</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            The VPC subnets into which the compute resources are launched. For more information,
            see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">VPCs
            and Subnets</a> in the <i>Amazon VPC User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pair tags to be applied to resources that are launched in the compute environment.
            For AWS Batch, these take the form of "String1": "String2", where String1 is the tag
            key and String2 is the tag value—for example, { "Name": "AWS Batch Instance - C4OnDemand"
            }.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of compute environment: EC2 or SPOT.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ComputeResourceUpdate">
            <summary>
            An object representing the attributes of a compute environment that can be updated.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.DesiredvCpus">
            <summary>
            Gets and sets the property DesiredvCpus. 
            <para>
            The desired number of EC2 vCPUS in the compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.MaxvCpus">
            <summary>
            Gets and sets the property MaxvCpus. 
            <para>
            The maximum number of EC2 vCPUs that an environment can reach.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ComputeResourceUpdate.MinvCpus">
            <summary>
            Gets and sets the property MinvCpus. 
            <para>
            The minimum number of EC2 vCPUs that an environment should maintain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerDetail">
            <summary>
            An object representing the details of a container that is part of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that is passed to the container. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance on which the container is
            running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container.
            </para>
             <note> 
            <para>
            Environment variables must not start with <code>AWS_BATCH</code>; this naming convention
            is reserved for variables that are set by the AWS Batch service.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code to return upon completion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type of the underlying host infrastructure of a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.JobRoleArn">
            <summary>
            Gets and sets the property JobRoleArn. 
            <para>
            The Amazon Resource Name (ARN) associated with the job upon execution. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the CloudWatch Logs log stream associated with the container. The log
            group for AWS Batch jobs is <code>/aws/batch/job</code>. Each container attempt receives
            a log stream name when they reach the <code>RUNNING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The number of MiB of memory reserved for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            The network interfaces associated with the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated privileges on the host
            container instance (similar to the <code>root</code> user).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. Currently, the only supported
            resource is <code>GPU</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon ECS task that is associated with the
            container job. Each container attempt receives a task ARN when they reach the <code>STARTING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <code>ulimit</code> values to set in the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user name to use inside the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            The number of VCPUs allocated for the job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerDetail.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volumes associated with the job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerOverrides">
            <summary>
            The overrides that should be sent to a container.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the job definition.
            </para>
             <note> 
            <para>
            Environment variables must not start with <code>AWS_BATCH</code>; this naming convention
            is reserved for variables that are set by the AWS Batch service.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type to use for a multi-node parallel job. This parameter is not valid
            for single-node container jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The number of MiB of memory reserved for the job. This value overrides the value set
            in the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. This value overrides the
            value set in the job definition. Currently, the only supported resource is <code>GPU</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerOverrides.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            The number of vCPUs to reserve for the container. This value overrides the value set
            in the job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerProperties">
            <summary>
            Container properties are used in job definitions to describe the container that is
            launched as part of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that is passed to the container. This parameter maps to <code>Cmd</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <code>Env</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <important> 
            <para>
            We do not recommend using plaintext environment variables for sensitive information,
            such as credential data.
            </para>
             </important> <note> 
            <para>
            Environment variables must not start with <code>AWS_BATCH</code>; this naming convention
            is reserved for variables that are set by the AWS Batch service.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. Images in the Docker Hub registry are available by default. Other repositories
            are specified with <code> <i>repository-url</i>/<i>image</i>:<i>tag</i> </code>. Up
            to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods,
            forward slashes, and number signs are allowed. This parameter maps to <code>Image</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <ul> <li> 
            <para>
            Images in Amazon ECR repositories use the full registry and repository URI (for example,
            <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</code>).
            </para>
             </li> <li> 
            <para>
            Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code>
            or <code>mongo</code>).
            </para>
             </li> <li> 
            <para>
            Images in other repositories on Docker Hub are qualified with an organization name
            (for example, <code>amazon/amazon-ecs-agent</code>).
            </para>
             </li> <li> 
            <para>
            Images in other online repositories are qualified further by a domain name (for example,
            <code>quay.io/assemblyline/ubuntu</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type to use for a multi-node parallel job. Currently all node groups
            in a multi-node parallel job must use the same instance type. This parameter is not
            valid for single-node container jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.JobRoleArn">
            <summary>
            Gets and sets the property JobRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that the container can assume for AWS
            permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.LinuxParameters">
            <summary>
            Gets and sets the property LinuxParameters. 
            <para>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory to present to the container. If your container attempts
            to exceed the memory specified here, the container is killed. This parameter maps
            to <code>Memory</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. You must specify at least 4 MiB of memory for a job.
            </para>
             <note> 
            <para>
            If you are trying to maximize your resource utilization by providing your jobs as
            much memory as possible for a particular instance type, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory
            Management</a> in the <i>AWS Batch User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container. This parameter maps to <code>Volumes</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated privileges on the host
            container instance (similar to the <code>root</code> user). This parameter maps to
            <code>Privileged</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--privileged</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--read-only</code> option to <code>docker run</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.ResourceRequirements">
            <summary>
            Gets and sets the property ResourceRequirements. 
            <para>
            The type and amount of a resource to assign to a container. Currently, the only supported
            resource is <code>GPU</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <code>ulimits</code> to set in the container. This parameter maps to <code>Ulimits</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user name to use inside the container. This parameter maps to <code>User</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Vcpus">
            <summary>
            Gets and sets the property Vcpus. 
            <para>
            The number of vCPUs reserved for the container. This parameter maps to <code>CpuShares</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. Each vCPU is equivalent to 1,024 CPU shares. You must specify at least one
            vCPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerProperties.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of data volumes used in a job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ContainerSummary">
            <summary>
            An object representing summary details of a container within a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerSummary.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code to return upon completion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ContainerSummary.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the CreateComputeEnvironment operation.
            Creates an AWS Batch compute environment. You can create <code>MANAGED</code> or <code>UNMANAGED</code>
            compute environments.
            
             
            <para>
            In a managed compute environment, AWS Batch manages the capacity and instance types
            of the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. You can choose
            to use Amazon EC2 On-Demand Instances or Spot Instances in your managed compute environment.
            You can optionally set a maximum price so that Spot Instances only launch when the
            Spot Instance price is below a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs are not supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own compute resources. This
            provides more compute resource configuration options, such as using a custom AMI,
            but you must ensure that your AMI meets the Amazon ECS container instance AMI specification.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">Container
            Instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you have created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that is associated with it. Then, manually
            launch your container instances into that Amazon ECS cluster. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS Container Instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            AWS Batch does not upgrade the AMIs in a compute environment after it is created (for
            example, when a newer version of the Amazon ECS-optimized AMI is available). You are
            responsible for the management of the guest operating system (including updates and
            security patches) and any additional application software or utilities that you install
            on the compute resources. To use a new AMI for your AWS Batch jobs:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the old compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the old compute environment.
            </para>
             </li> </ol> </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name for your compute environment. Up to 128 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            Details of the compute resources managed by the compute environment. This parameter
            is required for managed compute environments. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            Environments</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make
            calls to other AWS services on your behalf.
            </para>
             
            <para>
            If your specified role has a path other than <code>/</code>, then you must either
            specify the full role ARN (this is recommended) or prefix the role name with the path.
            </para>
             <note> 
            <para>
            Depending on how you created your AWS Batch service role, its ARN may contain the
            <code>service-role</code> path prefix. When you only specify the name of the service
            role, AWS Batch assumes that your ARN does not use the <code>service-role</code> path
            prefix. Because of this, we recommend that you specify the full ARN of your service
            role when you create compute environments.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. If the state is <code>ENABLED</code>, then the
            compute environment accepts jobs from a queue and can scale out automatically based
            on queues.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the compute environment. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html">Compute
            Environments</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateComputeEnvironmentResponse">
            <summary>
            This is the response object from the CreateComputeEnvironment operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentResponse.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateComputeEnvironmentResponse.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateJobQueueRequest">
            <summary>
            Container for the parameters to the CreateJobQueue operation.
            Creates an AWS Batch job queue. When you create a job queue, you associate one or
            more compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order in which the AWS
            Batch scheduler places jobs onto its associated compute environments. For example,
            if a compute environment is associated with more than one job queue, the job queue
            with a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            The set of compute environments mapped to a job queue and their order relative to
            each other. The job scheduler uses this parameter to determine which compute environment
            should execute a given job. Compute environments must be in the <code>VALID</code>
            state before you can associate them with a job queue. You can associate up to three
            compute environments with a job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. Job queues with a higher priority (or a higher integer
            value for the <code>priority</code> parameter) are evaluated first when associated
            with the same compute environment. Priority is determined in descending order, for
            example, a job queue with a priority value of <code>10</code> is given scheduling
            preference over a job queue with a priority value of <code>1</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the job queue. If the job queue state is <code>ENABLED</code>, it is
            able to accept jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.CreateJobQueueResponse">
            <summary>
            This is the response object from the CreateJobQueue operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueResponse.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.CreateJobQueueResponse.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the DeleteComputeEnvironment operation.
            Deletes an AWS Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <code>DISABLED</code>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeleteComputeEnvironmentRequest.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The name or Amazon Resource Name (ARN) of the compute environment to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteComputeEnvironmentResponse">
            <summary>
            This is the response object from the DeleteComputeEnvironment operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteJobQueueRequest">
            <summary>
            Container for the parameters to the DeleteJobQueue operation.
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are terminated when you
            delete a job queue.
            
             
            <para>
            It is not necessary to disassociate compute environments from a queue before submitting
            a <code>DeleteJobQueue</code> request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeleteJobQueueRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the queue to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeleteJobQueueResponse">
            <summary>
            This is the response object from the DeleteJobQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeregisterJobDefinitionRequest">
            <summary>
            Container for the parameters to the DeregisterJobDefinition operation.
            Deregisters an AWS Batch job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DeregisterJobDefinitionRequest.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The name and revision (<code>name:revision</code>) or full Amazon Resource Name (ARN)
            of the job definition to deregister. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DeregisterJobDefinitionResponse">
            <summary>
            This is the response object from the DeregisterJobDefinition operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest">
            <summary>
            Container for the parameters to the DescribeComputeEnvironments operation.
            Describes one or more of your compute environments.
            
             
            <para>
            If you are using an unmanaged compute environment, you can use the <code>DescribeComputeEnvironment</code>
            operation to determine the <code>ecsClusterArn</code> that you should launch your
            Amazon ECS container instances into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.ComputeEnvironments">
            <summary>
            Gets and sets the property ComputeEnvironments. 
            <para>
            A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>DescribeComputeEnvironments</code>
            in paginated output. When this parameter is used, <code>DescribeComputeEnvironments</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeComputeEnvironments</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeComputeEnvironments</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeComputeEnvironments</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse">
            <summary>
            This is the response object from the DescribeComputeEnvironments operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse.ComputeEnvironments">
            <summary>
            Gets and sets the property ComputeEnvironments. 
            <para>
            The list of compute environments.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeComputeEnvironmentsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeComputeEnvironments</code>
            request. When the results of a <code>DescribeJobDefinitions</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobDefinitionsRequest">
            <summary>
            Container for the parameters to the DescribeJobDefinitions operation.
            Describes a list of job definitions. You can specify a <code>status</code> (such as
            <code>ACTIVE</code>) to only return job definitions that match that status.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.JobDefinitions">
            <summary>
            Gets and sets the property JobDefinitions. 
            <para>
            A list of up to 100 job definition names or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <code>DescribeJobDefinitions</code> in paginated
            output. When this parameter is used, <code>DescribeJobDefinitions</code> only returns
            <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>DescribeJobDefinitions</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeJobDefinitions</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobDefinitions</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status with which to filter job definitions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobDefinitionsResponse">
            <summary>
            This is the response object from the DescribeJobDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsResponse.JobDefinitions">
            <summary>
            Gets and sets the property JobDefinitions. 
            <para>
            The list of job definitions. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeJobDefinitions</code>
            request. When the results of a <code>DescribeJobDefinitions</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobQueuesRequest">
            <summary>
            Container for the parameters to the DescribeJobQueues operation.
            Describes one or more of your job queues.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.JobQueues">
            <summary>
            Gets and sets the property JobQueues. 
            <para>
            A list of up to 100 queue names or full queue Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <code>DescribeJobQueues</code> in paginated
            output. When this parameter is used, <code>DescribeJobQueues</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>DescribeJobQueues</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>DescribeJobQueues</code> returns
            up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobQueues</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobQueuesResponse">
            <summary>
            This is the response object from the DescribeJobQueues operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesResponse.JobQueues">
            <summary>
            Gets and sets the property JobQueues. 
            <para>
            The list of job queues. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobQueuesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>DescribeJobQueues</code>
            request. When the results of a <code>DescribeJobQueues</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobsRequest">
            <summary>
            Container for the parameters to the DescribeJobs operation.
            Describes a list of AWS Batch jobs.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobsRequest.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            A list of up to 100 job IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.DescribeJobsResponse">
            <summary>
            This is the response object from the DescribeJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.DescribeJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            The list of jobs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Device">
            <summary>
            An object representing a container instance host device.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path inside the container at which to expose the host device. By default the <code>hostPath</code>
            value is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.HostPath">
            <summary>
            Gets and sets the property HostPath. 
            <para>
            The path for the device on the host container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Device.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The explicit permissions to provide to the container for the device. By default, the
            container has permissions for <code>read</code>, <code>write</code>, and <code>mknod</code>
            for the device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Host">
            <summary>
            Determine whether your data volume persists on the host container instance and where
            it is stored. If this parameter is empty, then the Docker daemon assigns a host path
            for your data volume, but the data is not guaranteed to persist after the containers
            associated with it stop running.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Host.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            The path on the host container instance that is presented to the container. If this
            parameter is empty, then the Docker daemon has assigned a host path for you. If this
            parameter contains a file location, then the data volume persists at the specified
            location on the host container instance until you delete it manually. If the source
            path location does not exist on the host container instance, the Docker daemon creates
            it. If the location does exist, the contents of the source path folder are exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ArrayPropertiesDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ArrayPropertiesDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller">
            <summary>
            ArrayProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller.Marshall(Amazon.Batch.Model.ArrayProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ArrayPropertiesSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ArrayPropertiesSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ArrayPropertiesSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller">
            <summary>
            Response Unmarshaller for AttemptDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#AttemptDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.AttemptDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller">
            <summary>
            CancelJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Marshall(Amazon.Batch.Model.CancelJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CancelJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeEnvironmentDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeEnvironmentDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller">
            <summary>
            ComputeEnvironmentOrder Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller.Marshall(Amazon.Batch.Model.ComputeEnvironmentOrder,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeEnvironmentOrder Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeEnvironmentOrder,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeEnvironmentOrderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller">
            <summary>
            ComputeResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller.Marshall(Amazon.Batch.Model.ComputeResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller">
            <summary>
            Response Unmarshaller for ComputeResource Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ComputeResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller">
            <summary>
            ComputeResourceUpdate Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller.Marshall(Amazon.Batch.Model.ComputeResourceUpdate,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ComputeResourceUpdateMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller">
            <summary>
            ContainerOverrides Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller.Marshall(Amazon.Batch.Model.ContainerOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller">
            <summary>
            ContainerProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller.Marshall(Amazon.Batch.Model.ContainerProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerPropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ContainerSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ContainerSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller">
            <summary>
            CreateComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.CreateComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller">
            <summary>
            CreateJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.CreateJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.CreateJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller">
            <summary>
            DeleteComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.DeleteComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller">
            <summary>
            DeleteJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.DeleteJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeleteJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller">
            <summary>
            DeregisterJobDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Marshall(Amazon.Batch.Model.DeregisterJobDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterJobDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeregisterJobDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller">
            <summary>
            DescribeComputeEnvironments Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeComputeEnvironments operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeComputeEnvironmentsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller">
            <summary>
            DescribeJobDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller">
            <summary>
            DescribeJobQueues Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobQueuesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobQueues operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobQueuesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller">
            <summary>
            DescribeJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Marshall(Amazon.Batch.Model.DescribeJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DescribeJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller">
            <summary>
            Device Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller.Marshall(Amazon.Batch.Model.Device,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller">
            <summary>
            Response Unmarshaller for Device Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Device,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller">
            <summary>
            Host Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller.Marshall(Amazon.Batch.Model.Host,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.HostMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller">
            <summary>
            Response Unmarshaller for Host Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Host,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.HostUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for JobDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller">
            <summary>
            JobDependency Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller.Marshall(Amazon.Batch.Model.JobDependency,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller">
            <summary>
            Response Unmarshaller for JobDependency Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDependency,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDependencyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller">
            <summary>
            Response Unmarshaller for JobDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller">
            <summary>
            Response Unmarshaller for JobQueueDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobQueueDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobQueueDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for JobSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller">
            <summary>
            JobTimeout Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller.Marshall(Amazon.Batch.Model.JobTimeout,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller">
            <summary>
            Response Unmarshaller for JobTimeout Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#JobTimeout,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.JobTimeoutUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller">
            <summary>
            KeyValuePair Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Marshall(Amazon.Batch.Model.KeyValuePair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyValuePair Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#KeyValuePair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller">
            <summary>
            LaunchTemplateSpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Marshall(Amazon.Batch.Model.LaunchTemplateSpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchTemplateSpecification Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LaunchTemplateSpecification,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LaunchTemplateSpecificationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller">
            <summary>
            LinuxParameters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Marshall(Amazon.Batch.Model.LinuxParameters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller">
            <summary>
            Response Unmarshaller for LinuxParameters Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#LinuxParameters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.LinuxParametersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller">
            <summary>
            ListJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Batch.Model.ListJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller">
            <summary>
            MountPoint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller.Marshall(Amazon.Batch.Model.MountPoint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller">
            <summary>
            Response Unmarshaller for MountPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#MountPoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NetworkInterface,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for NodeDetails Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeDetails,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodeDetailsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller">
            <summary>
            NodeOverrides Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller.Marshall(Amazon.Batch.Model.NodeOverrides,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodeOverridesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller">
            <summary>
            NodeProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller.Marshall(Amazon.Batch.Model.NodeProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for NodePropertiesSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodePropertiesSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for NodeProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller">
            <summary>
            NodePropertyOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller.Marshall(Amazon.Batch.Model.NodePropertyOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodePropertyOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller">
            <summary>
            NodeRangeProperty Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller.Marshall(Amazon.Batch.Model.NodeRangeProperty,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller">
            <summary>
            Response Unmarshaller for NodeRangeProperty Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#NodeRangeProperty,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.NodeRangePropertyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller">
            <summary>
            RegisterJobDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Marshall(Amazon.Batch.Model.RegisterJobDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterJobDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RegisterJobDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller">
            <summary>
            ResourceRequirement Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Marshall(Amazon.Batch.Model.ResourceRequirement,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceRequirement Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#ResourceRequirement,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.ResourceRequirementUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller">
            <summary>
            RetryStrategy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller.Marshall(Amazon.Batch.Model.RetryStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for RetryStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#RetryStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.RetryStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller">
            <summary>
            SubmitJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Marshall(Amazon.Batch.Model.SubmitJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SubmitJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.SubmitJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller">
            <summary>
            TerminateJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Marshall(Amazon.Batch.Model.TerminateJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateJob operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.TerminateJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller">
            <summary>
            Ulimit Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller.Marshall(Amazon.Batch.Model.Ulimit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller">
            <summary>
            Response Unmarshaller for Ulimit Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Ulimit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller">
            <summary>
            UpdateComputeEnvironment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Marshall(Amazon.Batch.Model.UpdateComputeEnvironmentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateComputeEnvironment operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateComputeEnvironmentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller">
            <summary>
            UpdateJobQueue Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Marshall(Amazon.Batch.Model.UpdateJobQueueRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateJobQueue operation
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.UpdateJobQueueResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller">
            <summary>
            Volume Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller.Marshall(Amazon.Batch.Model.Volume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Batch#Model#Volume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Batch.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Batch.Model.JobDefinition">
            <summary>
            An object representing an AWS Batch job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.ContainerProperties">
            <summary>
            Gets and sets the property ContainerProperties. 
            <para>
            An object with various properties specific to container-based jobs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.JobDefinitionArn">
            <summary>
            Gets and sets the property JobDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) for the job definition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object with various properties specific to multi-node parallel jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Default parameters or parameter substitution placeholders that are set in the job
            definition. Parameters are specified as a key-value pair mapping. Parameters in a
            <code>SubmitJob</code> request override any corresponding parameter defaults from
            the job definition. For more information about specifying parameters, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_definition_parameters.html">Job
            Definition Parameters</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs that are submitted with this job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for jobs that are submitted with this job definition. You
            can specify a timeout duration after which AWS Batch terminates your jobs if they
            have not finished.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDefinition.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobDependency">
            <summary>
            An object representing an AWS Batch job dependency.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDependency.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job ID of the AWS Batch job associated with this dependency.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDependency.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the job dependency.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobDetail">
            <summary>
            An object representing an AWS Batch job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties of the job, if it is an array job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Attempts">
            <summary>
            Gets and sets the property Attempts. 
            <para>
            A list of job attempts associated with this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            An object representing the details of the container that is associated with the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp (in seconds and milliseconds) for when the job was created. For
            non-array jobs and parent array jobs, this is when the job entered the <code>SUBMITTED</code>
            state (at the time <a>SubmitJob</a> was called). For array child jobs, this is when
            the child job was spawned by its parent and entered the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of job names or IDs on which this job depends.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The job definition that is used by this job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The Amazon Resource Name (ARN) of the job queue with which the job is associated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.NodeDetails">
            <summary>
            Gets and sets the property NodeDetails. 
            <para>
            An object representing the details of a node that is associated with a multi-node
            parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object representing the node properties of a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Additional parameters passed to the job that replace parameter substitution placeholders
            or override any corresponding parameter defaults from the job definition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for this job if an attempt fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp (in seconds and milliseconds) for when the job was started (when
            the job transitioned from the <code>STARTING</code> state to the <code>RUNNING</code>
            state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status for the job. 
            </para>
             <note> 
            <para>
            If your jobs do not progress to <code>STARTING</code>, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#job_stuck_in_runnable">Jobs
            Stuck in RUNNABLE Status</a> in the troubleshooting section of the <i>AWS Batch User
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details about the current status
            of the job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp (in seconds and milliseconds) for when the job was stopped (when
            the job transitioned from the <code>RUNNING</code> state to a terminal state, such
            as <code>SUCCEEDED</code> or <code>FAILED</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobDetail.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for the job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobQueueDetail">
            <summary>
            An object representing the details of an AWS Batch job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            The compute environments that are attached to the job queue and the order in which
            job placement is preferred. Compute environments are selected for job placement in
            ascending order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Describes the ability of the queue to accept new jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the job queue (for example, <code>CREATING</code> or <code>VALID</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobQueueDetail.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details about the current status
            of the job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobSummary">
            <summary>
            An object representing summary details of a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties of the job, if it is an array job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            An object representing the details of the container that is associated with the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the job was created. For non-array jobs and parent array
            jobs, this is when the job entered the <code>SUBMITTED</code> state (at the time <a>SubmitJob</a>
            was called). For array child jobs, this is when the child job was spawned by its parent
            and entered the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The ID of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            The node properties for a single node in a job summary list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp for when the job was started (when the job transitioned from the
            <code>STARTING</code> state to the <code>RUNNING</code> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StatusReason">
            <summary>
            Gets and sets the property StatusReason. 
            <para>
            A short, human-readable string to provide additional details about the current status
            of the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobSummary.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp for when the job was stopped (when the job transitioned from the
            <code>RUNNING</code> state to a terminal state, such as <code>SUCCEEDED</code> or
            <code>FAILED</code>).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.JobTimeout">
            <summary>
            An object representing a job timeout configuration.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.JobTimeout.AttemptDurationSeconds">
            <summary>
            Gets and sets the property AttemptDurationSeconds. 
            <para>
            The time duration in seconds (measured from the job attempt's <code>startedAt</code>
            timestamp) after which AWS Batch terminates your jobs if they have not finished.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.KeyValuePair">
            <summary>
            A key-value pair object.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuePair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the key-value pair. For environment variables, this is the name of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.KeyValuePair.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the key-value pair. For environment variables, this is the value of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LaunchTemplateSpecification">
            <summary>
            An object representing a launch template associated with a compute resource. You must
            specify either the launch template ID or launch template name in the request, but
            not both.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.LaunchTemplateId">
            <summary>
            Gets and sets the property LaunchTemplateId. 
            <para>
            The ID of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.LaunchTemplateName">
            <summary>
            Gets and sets the property LaunchTemplateName. 
            <para>
            The name of the launch template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LaunchTemplateSpecification.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version number of the launch template.
            </para>
             
            <para>
            Default: The default version of the launch template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.LinuxParameters">
            <summary>
            Linux-specific modifications that are applied to the container, such as details for
            device mappings.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.LinuxParameters.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            Any host devices to expose to the container. This parameter maps to <code>Devices</code>
            in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker
            Remote API</a> and the <code>--device</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListJobsRequest">
            <summary>
            Container for the parameters to the ListJobs operation.
            Returns a list of AWS Batch jobs.
            
             
            <para>
            You must specify only one of the following:
            </para>
             <ul> <li> 
            <para>
            a job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            a multi-node parallel job ID to return a list of that job's nodes
            </para>
             </li> <li> 
            <para>
            an array job ID to return a list of that job's children
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <code>jobStatus</code> parameter.
            If you do not specify a status, only <code>RUNNING</code> jobs are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.ArrayJobId">
            <summary>
            Gets and sets the property ArrayJobId. 
            <para>
            The job ID for an array job. Specifying an array job ID with this parameter lists
            all child jobs from within the specified array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The name or full Amazon Resource Name (ARN) of the job queue with which to list jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The job status with which to filter jobs in the specified queue. If you do not specify
            a status, only <code>RUNNING</code> jobs are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results returned by <code>ListJobs</code> in paginated output.
            When this parameter is used, <code>ListJobs</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListJobs</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListJobs</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.MultiNodeJobId">
            <summary>
            Gets and sets the property MultiNodeJobId. 
            <para>
            The job ID for a multi-node parallel job. Specifying a multi-node parallel job ID
            with this parameter lists all nodes that are associated with the specified job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListJobs</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ListJobsResponse">
            <summary>
            This is the response object from the ListJobs operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsResponse.JobSummaryList">
            <summary>
            Gets and sets the property JobSummaryList. 
            <para>
            A list of job summaries that match the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ListJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListJobs</code> request.
            When the results of a <code>ListJobs</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.MountPoint">
            <summary>
            Details on a Docker volume mount point that is used in a job's container properties.
            This parameter maps to <code>Volumes</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.19/#create-a-container">Create
            a container</a> section of the Docker Remote API and the <code>--volume</code> option
            to docker run.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path on the container at which to mount the host volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <code>true</code>, the container has read-only access to the volume;
            otherwise, the container can write to the volume. The default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.MountPoint.SourceVolume">
            <summary>
            Gets and sets the property SourceVolume. 
            <para>
            The name of the volume to mount.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NetworkInterface">
            <summary>
            An object representing the elastic network interface for a multi-node parallel job
            node.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The attachment ID for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.Ipv6Address">
            <summary>
            Gets and sets the property Ipv6Address. 
            <para>
            The private IPv6 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NetworkInterface.PrivateIpv4Address">
            <summary>
            Gets and sets the property PrivateIpv4Address. 
            <para>
            The private IPv4 address for the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeDetails">
            <summary>
            An object representing the details of a multi-node parallel job node.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeDetails.IsMainNode">
            <summary>
            Gets and sets the property IsMainNode. 
            <para>
            Specifies whether the current node is the main node for a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeDetails.NodeIndex">
            <summary>
            Gets and sets the property NodeIndex. 
            <para>
            The node index for the node. Node index numbering begins at zero. This index is also
            available on the node with the <code>AWS_BATCH_JOB_NODE_INDEX</code> environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeOverrides">
            <summary>
            Object representing any node overrides to a job definition that is used in a <a>SubmitJob</a>
            API operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeOverrides.NodePropertyOverrides">
            <summary>
            Gets and sets the property NodePropertyOverrides. 
            <para>
            The node property overrides for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeOverrides.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes to use with a multi-node parallel job. This value overrides the
            number of nodes that are specified in the job definition. To use this override:
            </para>
             <ul> <li> 
            <para>
            There must be at least one node range in your job definition that has an open upper
            boundary (such as <code>:</code> or <code>n:</code>).
            </para>
             </li> <li> 
            <para>
            The lower boundary of the node range specified in the job definition must be fewer
            than the number of nodes specified in the override.
            </para>
             </li> <li> 
            <para>
            The main node index specified in the job definition must be fewer than the number
            of nodes specified in the override.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeProperties">
            <summary>
            An object representing the node properties of a multi-node parallel job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.MainNode">
            <summary>
            Gets and sets the property MainNode. 
            <para>
            Specifies the node index for the main node of a multi-node parallel job. This node
            index value must be fewer than the number of nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.NodeRangeProperties">
            <summary>
            Gets and sets the property NodeRangeProperties. 
            <para>
            A list of node ranges and their properties associated with a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeProperties.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes associated with a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodePropertiesSummary">
            <summary>
            An object representing the properties of a node that is associated with a multi-node
            parallel job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.IsMainNode">
            <summary>
            Gets and sets the property IsMainNode. 
            <para>
            Specifies whether the current node is the main node for a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.NodeIndex">
            <summary>
            Gets and sets the property NodeIndex. 
            <para>
            The node index for the node. Node index numbering begins at zero. This index is also
            available on the node with the <code>AWS_BATCH_JOB_NODE_INDEX</code> environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertiesSummary.NumNodes">
            <summary>
            Gets and sets the property NumNodes. 
            <para>
            The number of nodes associated with a multi-node parallel job.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodePropertyOverride">
            <summary>
            Object representing any node overrides to a job definition that is used in a <a>SubmitJob</a>
            API operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            The overrides that should be sent to a node range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodePropertyOverride.TargetNodes">
            <summary>
            Gets and sets the property TargetNodes. 
            <para>
            The range of nodes, using node index values, with which to override. A range of <code>0:3</code>
            indicates nodes with index values of <code>0</code> through <code>3</code>. If the
            starting range value is omitted (<code>:n</code>), then <code>0</code> is used to
            start the range. If the ending range value is omitted (<code>n:</code>), then the
            highest possible node index is used to end the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.NodeRangeProperty">
            <summary>
            An object representing the properties of the node range for a multi-node parallel
            job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The container details for the node range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.NodeRangeProperty.TargetNodes">
            <summary>
            Gets and sets the property TargetNodes. 
            <para>
            The range of nodes, using node index values. A range of <code>0:3</code> indicates
            nodes with index values of <code>0</code> through <code>3</code>. If the starting
            range value is omitted (<code>:n</code>), then <code>0</code> is used to start the
            range. If the ending range value is omitted (<code>n:</code>), then the highest possible
            node index is used to end the range. Your accumulative node ranges must account for
            all nodes (0:n). You may nest node ranges, for example 0:10 and 4:5, in which case
            the 4:5 range properties override the 0:10 properties. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RegisterJobDefinitionRequest">
            <summary>
            Container for the parameters to the RegisterJobDefinition operation.
            Registers an AWS Batch job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.ContainerProperties">
            <summary>
            Gets and sets the property ContainerProperties. 
            <para>
            An object with various properties specific to single-node container-based jobs. If
            the job definition's <code>type</code> parameter is <code>container</code>, then you
            must specify either <code>containerProperties</code> or <code>nodeProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition to register. Up to 128 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.NodeProperties">
            <summary>
            Gets and sets the property NodeProperties. 
            <para>
            An object with various properties specific to multi-node parallel jobs. If you specify
            node properties for a job, it becomes a multi-node parallel job. For more information,
            see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-parallel-jobs.html">Multi-node
            Parallel Jobs</a> in the <i>AWS Batch User Guide</i>. If the job definition's <code>type</code>
            parameter is <code>container</code>, then you must specify either <code>containerProperties</code>
            or <code>nodeProperties</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Default parameter substitution placeholders to set in the job definition. Parameters
            are specified as a key-value pair mapping. Parameters in a <code>SubmitJob</code>
            request override any corresponding parameter defaults from the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs that are submitted with this job definition.
            Any retry strategy that is specified during a <a>SubmitJob</a> operation overrides
            the retry strategy defined here. If a job is terminated due to a timeout, it is not
            retried. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for jobs that are submitted with this job definition, after
            which AWS Batch terminates your jobs if they have not finished. If a job is terminated
            due to a timeout, it is not retried. The minimum value for the timeout is 60 seconds.
            Any timeout configuration that is specified during a <a>SubmitJob</a> operation overrides
            the timeout configuration defined here. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html">Job
            Timeouts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RegisterJobDefinitionResponse">
            <summary>
            This is the response object from the RegisterJobDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.JobDefinitionArn">
            <summary>
            Gets and sets the property JobDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the job definition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.JobDefinitionName">
            <summary>
            Gets and sets the property JobDefinitionName. 
            <para>
            The name of the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RegisterJobDefinitionResponse.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the job definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ResourceRequirement">
            <summary>
            The type and amount of a resource to assign to a container. Currently, the only supported
            resource type is <code>GPU</code>.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ResourceRequirement.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of resource to assign to a container. Currently, the only supported resource
            type is <code>GPU</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.ResourceRequirement.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The number of physical GPUs to reserve for the container. The number of GPUs reserved
            for all containers in a job should not exceed the number of available GPUs on the
            compute resource that the job is launched on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.RetryStrategy">
            <summary>
            The retry strategy associated with a job.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.RetryStrategy.Attempts">
            <summary>
            Gets and sets the property Attempts. 
            <para>
            The number of times to move a job to the <code>RUNNABLE</code> status. You may specify
            between 1 and 10 attempts. If the value of <code>attempts</code> is greater than one,
            the job is retried on failure the same number of attempts as the value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.ServerException">
            <summary>
             Batch exception
             </summary>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Batch.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Batch.Model.SubmitJobRequest">
            <summary>
            Container for the parameters to the SubmitJob operation.
            Submits an AWS Batch job from a job definition. Parameters specified during <a>SubmitJob</a>
            override parameters defined in the job definition.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.ArrayProperties">
            <summary>
            Gets and sets the property ArrayProperties. 
            <para>
            The array properties for the submitted job, such as the size of the array. The array
            size can be between 2 and 10,000. If you specify array properties for a job, it becomes
            an array job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html">Array
            Jobs</a> in the <i>AWS Batch User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified job definition and the overrides it should receive. You can override
            the default command for a container (that is specified in the job definition or the
            Docker image) with a <code>command</code> override. You can also override existing
            environment variables (that are specified in the job definition or Docker image) on
            a container or add new environment variables to it with an <code>environment</code>
            override.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.DependsOn">
            <summary>
            Gets and sets the property DependsOn. 
            <para>
            A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You
            can specify a <code>SEQUENTIAL</code> type dependency without specifying a job ID
            for array jobs so that each child array job completes sequentially, starting at index
            0. You can also specify an <code>N_TO_N</code> type dependency with a job ID for array
            jobs. In that case, each index child of this job must wait for the corresponding index
            child of each dependency to complete before it can begin.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobDefinition">
            <summary>
            Gets and sets the property JobDefinition. 
            <para>
            The job definition used by this job. This value can be either a <code>name:revision</code>
            or the Amazon Resource Name (ARN) for the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job. The first character must be alphanumeric, and up to 128 letters
            (uppercase and lowercase), numbers, hyphens, and underscores are allowed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The job queue into which the job is submitted. You can specify either the name or
            the Amazon Resource Name (ARN) of the queue. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.NodeOverrides">
            <summary>
            Gets and sets the property NodeOverrides. 
            <para>
            A list of node overrides in JSON format that specify the node range to target and
            the container overrides for that node range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Additional parameters passed to the job that replace parameter substitution placeholders
            that are set in the job definition. Parameters are specified as a key and value pair
            mapping. Parameters in a <code>SubmitJob</code> request override any corresponding
            parameter defaults from the job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.RetryStrategy">
            <summary>
            Gets and sets the property RetryStrategy. 
            <para>
            The retry strategy to use for failed jobs from this <a>SubmitJob</a> operation. When
            a retry strategy is specified here, it overrides the retry strategy defined in the
            job definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobRequest.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            The timeout configuration for this <a>SubmitJob</a> operation. You can specify a timeout
            duration after which AWS Batch terminates your jobs if they have not finished. If
            a job is terminated due to a timeout, it is not retried. The minimum value for the
            timeout is 60 seconds. This configuration overrides any timeout configuration specified
            in the job definition. For array jobs, child jobs have the same timeout configuration
            as the parent job. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html">Job
            Timeouts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.SubmitJobResponse">
            <summary>
            This is the response object from the SubmitJob operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The unique identifier for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.SubmitJobResponse.JobName">
            <summary>
            Gets and sets the property JobName. 
            <para>
            The name of the job. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TerminateJobRequest">
            <summary>
            Container for the parameters to the TerminateJob operation.
            Terminates a job in a job queue. Jobs that are in the <code>STARTING</code> or <code>RUNNING</code>
            state are terminated, which causes them to transition to <code>FAILED</code>. Jobs
            that have not progressed to the <code>STARTING</code> state are cancelled.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TerminateJobRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The AWS Batch job ID of the job to terminate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.TerminateJobRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A message to attach to the job that explains the reason for canceling it. This message
            is returned by future <a>DescribeJobs</a> operations on the job. This message is also
            recorded in the AWS Batch activity logs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.TerminateJobResponse">
            <summary>
            This is the response object from the TerminateJob operation.
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Ulimit">
            <summary>
            The <code>ulimit</code> settings to pass to the container.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.HardLimit">
            <summary>
            Gets and sets the property HardLimit. 
            <para>
            The hard limit for the <code>ulimit</code> type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The <code>type</code> of the <code>ulimit</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Ulimit.SoftLimit">
            <summary>
            Gets and sets the property SoftLimit. 
            <para>
            The soft limit for the <code>ulimit</code> type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateComputeEnvironmentRequest">
            <summary>
            Container for the parameters to the UpdateComputeEnvironment operation.
            Updates an AWS Batch compute environment.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ComputeEnvironment">
            <summary>
            Gets and sets the property ComputeEnvironment. 
            <para>
            The name or full Amazon Resource Name (ARN) of the compute environment to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ComputeResources">
            <summary>
            Gets and sets the property ComputeResources. 
            <para>
            Details of the compute resources managed by the compute environment. Required for
            a managed compute environment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make
            calls to other AWS services on your behalf.
            </para>
             
            <para>
            If your specified role has a path other than <code>/</code>, then you must either
            specify the full role ARN (this is recommended) or prefix the role name with the path.
            </para>
             <note> 
            <para>
            Depending on how you created your AWS Batch service role, its ARN may contain the
            <code>service-role</code> path prefix. When you only specify the name of the service
            role, AWS Batch assumes that your ARN does not use the <code>service-role</code> path
            prefix. Because of this, we recommend that you specify the full ARN of your service
            role when you create compute environments.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the compute environment. Compute environments in the <code>ENABLED</code>
            state can accept jobs from a queue and scale in or out automatically based on the
            workload demand of its associated queues.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateComputeEnvironmentResponse">
            <summary>
            This is the response object from the UpdateComputeEnvironment operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentResponse.ComputeEnvironmentArn">
            <summary>
            Gets and sets the property ComputeEnvironmentArn. 
            <para>
            The Amazon Resource Name (ARN) of the compute environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateComputeEnvironmentResponse.ComputeEnvironmentName">
            <summary>
            Gets and sets the property ComputeEnvironmentName. 
            <para>
            The name of the compute environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateJobQueueRequest">
            <summary>
            Container for the parameters to the UpdateJobQueue operation.
            Updates a job queue.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.ComputeEnvironmentOrder">
            <summary>
            Gets and sets the property ComputeEnvironmentOrder. 
            <para>
            Details the set of compute environments mapped to a job queue and their order relative
            to each other. This is one of the parameters used by the job scheduler to determine
            which compute environment should execute a given job. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.JobQueue">
            <summary>
            Gets and sets the property JobQueue. 
            <para>
            The name or the Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.Priority">
            <summary>
            Gets and sets the property Priority. 
            <para>
            The priority of the job queue. Job queues with a higher priority (or a higher integer
            value for the <code>priority</code> parameter) are evaluated first when associated
            with the same compute environment. Priority is determined in descending order, for
            example, a job queue with a priority value of <code>10</code> is given scheduling
            preference over a job queue with a priority value of <code>1</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Describes the queue's ability to accept new jobs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.UpdateJobQueueResponse">
            <summary>
            This is the response object from the UpdateJobQueue operation.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueResponse.JobQueueArn">
            <summary>
            Gets and sets the property JobQueueArn. 
            <para>
            The Amazon Resource Name (ARN) of the job queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.UpdateJobQueueResponse.JobQueueName">
            <summary>
            Gets and sets the property JobQueueName. 
            <para>
            The name of the job queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.Model.Volume">
            <summary>
            A data volume used in a job's container properties.
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Volume.Host">
            <summary>
            Gets and sets the property Host. 
            <para>
            The contents of the <code>host</code> parameter determine whether your data volume
            persists on the host container instance and where it is stored. If the host parameter
            is empty, then the Docker daemon assigns a host path for your data volume. However,
            the data is not guaranteed to persist after the containers associated with it stop
            running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Batch.Model.Volume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
            and underscores are allowed. This name is referenced in the <code>sourceVolume</code>
            parameter of container definition <code>mountPoints</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Batch.ArrayJobDependency">
            <summary>
            Constants used for properties of type ArrayJobDependency.
            </summary>
        </member>
        <member name="F:Amazon.Batch.ArrayJobDependency.N_TO_N">
            <summary>
            Constant N_TO_N for ArrayJobDependency
            </summary>
        </member>
        <member name="F:Amazon.Batch.ArrayJobDependency.SEQUENTIAL">
            <summary>
            Constant SEQUENTIAL for ArrayJobDependency
            </summary>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.ArrayJobDependency.op_Implicit(System.String)~Amazon.Batch.ArrayJobDependency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEState">
            <summary>
            Constants used for properties of type CEState.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEState.DISABLED">
            <summary>
            Constant DISABLED for CEState
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEState.ENABLED">
            <summary>
            Constant ENABLED for CEState
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEState.op_Implicit(System.String)~Amazon.Batch.CEState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEStatus">
            <summary>
            Constants used for properties of type CEStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.CREATING">
            <summary>
            Constant CREATING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.DELETED">
            <summary>
            Constant DELETED for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.DELETING">
            <summary>
            Constant DELETING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.INVALID">
            <summary>
            Constant INVALID for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.UPDATING">
            <summary>
            Constant UPDATING for CEStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEStatus.VALID">
            <summary>
            Constant VALID for CEStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEStatus.op_Implicit(System.String)~Amazon.Batch.CEStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CEType">
            <summary>
            Constants used for properties of type CEType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEType.MANAGED">
            <summary>
            Constant MANAGED for CEType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CEType.UNMANAGED">
            <summary>
            Constant UNMANAGED for CEType
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CEType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CEType.op_Implicit(System.String)~Amazon.Batch.CEType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.CRType">
            <summary>
            Constants used for properties of type CRType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.EC2">
            <summary>
            Constant EC2 for CRType
            </summary>
        </member>
        <member name="F:Amazon.Batch.CRType.SPOT">
            <summary>
            Constant SPOT for CRType
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.CRType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.CRType.op_Implicit(System.String)~Amazon.Batch.CRType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.DeviceCgroupPermission">
            <summary>
            Constants used for properties of type DeviceCgroupPermission.
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.MKNOD">
            <summary>
            Constant MKNOD for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.READ">
            <summary>
            Constant READ for DeviceCgroupPermission
            </summary>
        </member>
        <member name="F:Amazon.Batch.DeviceCgroupPermission.WRITE">
            <summary>
            Constant WRITE for DeviceCgroupPermission
            </summary>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.DeviceCgroupPermission.op_Implicit(System.String)~Amazon.Batch.DeviceCgroupPermission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobDefinitionType">
            <summary>
            Constants used for properties of type JobDefinitionType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobDefinitionType.Container">
            <summary>
            Constant Container for JobDefinitionType
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobDefinitionType.Multinode">
            <summary>
            Constant Multinode for JobDefinitionType
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobDefinitionType.op_Implicit(System.String)~Amazon.Batch.JobDefinitionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JobStatus">
            <summary>
            Constants used for properties of type JobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.FAILED">
            <summary>
            Constant FAILED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.PENDING">
            <summary>
            Constant PENDING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.RUNNABLE">
            <summary>
            Constant RUNNABLE for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.RUNNING">
            <summary>
            Constant RUNNING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.STARTING">
            <summary>
            Constant STARTING for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.SUBMITTED">
            <summary>
            Constant SUBMITTED for JobStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for JobStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JobStatus.op_Implicit(System.String)~Amazon.Batch.JobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JQState">
            <summary>
            Constants used for properties of type JQState.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQState.DISABLED">
            <summary>
            Constant DISABLED for JQState
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQState.ENABLED">
            <summary>
            Constant ENABLED for JQState
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JQState.op_Implicit(System.String)~Amazon.Batch.JQState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.JQStatus">
            <summary>
            Constants used for properties of type JQStatus.
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.CREATING">
            <summary>
            Constant CREATING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.DELETED">
            <summary>
            Constant DELETED for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.DELETING">
            <summary>
            Constant DELETING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.INVALID">
            <summary>
            Constant INVALID for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.UPDATING">
            <summary>
            Constant UPDATING for JQStatus
            </summary>
        </member>
        <member name="F:Amazon.Batch.JQStatus.VALID">
            <summary>
            Constant VALID for JQStatus
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.JQStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.JQStatus.op_Implicit(System.String)~Amazon.Batch.JQStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.Batch.ResourceType.GPU">
            <summary>
            Constant GPU for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.Batch.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Batch.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Batch.ResourceType.op_Implicit(System.String)~Amazon.Batch.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Batch.AmazonBatchClient">
             <summary>
             Implementation for accessing Batch
            
             AWS Batch enables you to run batch computing workloads on the AWS Cloud. Batch computing
             is a common way for developers, scientists, and engineers to access large amounts
             of compute resources, and AWS Batch removes the undifferentiated heavy lifting of
             configuring and managing the required infrastructure. AWS Batch will be familiar to
             users of traditional batch computing software. This service can efficiently provision
             resources in response to jobs submitted in order to eliminate capacity constraints,
             reduce compute costs, and deliver results quickly.
             
              
             <para>
             As a fully managed service, AWS Batch enables developers, scientists, and engineers
             to run batch computing workloads of any scale. AWS Batch automatically provisions
             compute resources and optimizes the workload distribution based on the quantity and
             scale of the workloads. With AWS Batch, there is no need to install or manage batch
             computing software, which allows you to focus on analyzing results and solving problems.
             AWS Batch reduces operational complexities, saves time, and reduces costs, which makes
             it easy for developers, scientists, and engineers to run their batch jobs in the AWS
             Cloud.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Batch.AmazonBatchConfig)">
             <summary>
             Constructs AmazonBatchClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Credentials and an
            AmazonBatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonBatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.#ctor(System.String,System.String,System.String,Amazon.Batch.AmazonBatchConfig)">
            <summary>
            Constructs AmazonBatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonBatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonBatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.Batch.AmazonBatchClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CancelJobAsync(Amazon.Batch.Model.CancelJobRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a job in an AWS Batch job queue. Jobs that are in the <code>SUBMITTED</code>,
            <code>PENDING</code>, or <code>RUNNABLE</code> state are cancelled. Jobs that have
            progressed to <code>STARTING</code> or <code>RUNNING</code> are not cancelled (but
            the API operation still succeeds, even if no job is cancelled); these jobs must be
            terminated with the <a>TerminateJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CancelJob">REST API Reference for CancelJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateComputeEnvironmentAsync(Amazon.Batch.Model.CreateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an AWS Batch compute environment. You can create <code>MANAGED</code> or <code>UNMANAGED</code>
            compute environments.
            
             
            <para>
            In a managed compute environment, AWS Batch manages the capacity and instance types
            of the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. You can choose
            to use Amazon EC2 On-Demand Instances or Spot Instances in your managed compute environment.
            You can optionally set a maximum price so that Spot Instances only launch when the
            Spot Instance price is below a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs are not supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own compute resources. This
            provides more compute resource configuration options, such as using a custom AMI,
            but you must ensure that your AMI meets the Amazon ECS container instance AMI specification.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">Container
            Instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you have created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that is associated with it. Then, manually
            launch your container instances into that Amazon ECS cluster. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS Container Instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            AWS Batch does not upgrade the AMIs in a compute environment after it is created (for
            example, when a newer version of the Amazon ECS-optimized AMI is available). You are
            responsible for the management of the guest operating system (including updates and
            security patches) and any additional application software or utilities that you install
            on the compute resources. To use a new AMI for your AWS Batch jobs:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the old compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the old compute environment.
            </para>
             </li> </ol> </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateComputeEnvironment">REST API Reference for CreateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.CreateJobQueueAsync(Amazon.Batch.Model.CreateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an AWS Batch job queue. When you create a job queue, you associate one or
            more compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order in which the AWS
            Batch scheduler places jobs onto its associated compute environments. For example,
            if a compute environment is associated with more than one job queue, the job queue
            with a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateJobQueue">REST API Reference for CreateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeleteComputeEnvironmentAsync(Amazon.Batch.Model.DeleteComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an AWS Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <code>DISABLED</code>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteComputeEnvironment">REST API Reference for DeleteComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeleteJobQueueAsync(Amazon.Batch.Model.DeleteJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are terminated when you
            delete a job queue.
            
             
            <para>
            It is not necessary to disassociate compute environments from a queue before submitting
            a <code>DeleteJobQueue</code> request. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteJobQueue">REST API Reference for DeleteJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DeregisterJobDefinitionAsync(Amazon.Batch.Model.DeregisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an AWS Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeregisterJobDefinition">REST API Reference for DeregisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeComputeEnvironmentsAsync(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your compute environments.
            
             
            <para>
            If you are using an unmanaged compute environment, you can use the <code>DescribeComputeEnvironment</code>
            operation to determine the <code>ecsClusterArn</code> that you should launch your
            Amazon ECS container instances into.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComputeEnvironments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComputeEnvironments service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeComputeEnvironments">REST API Reference for DescribeComputeEnvironments Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobDefinitionsAsync(Amazon.Batch.Model.DescribeJobDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of job definitions. You can specify a <code>status</code> (such as
            <code>ACTIVE</code>) to only return job definitions that match that status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobDefinitions service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobDefinitions">REST API Reference for DescribeJobDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobQueuesAsync(Amazon.Batch.Model.DescribeJobQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your job queues.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobQueues service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobQueues service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobQueues">REST API Reference for DescribeJobQueues Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.DescribeJobsAsync(Amazon.Batch.Model.DescribeJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of AWS Batch jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobs">REST API Reference for DescribeJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.ListJobsAsync(Amazon.Batch.Model.ListJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of AWS Batch jobs.
            
             
            <para>
            You must specify only one of the following:
            </para>
             <ul> <li> 
            <para>
            a job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            a multi-node parallel job ID to return a list of that job's nodes
            </para>
             </li> <li> 
            <para>
            an array job ID to return a list of that job's children
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <code>jobStatus</code> parameter.
            If you do not specify a status, only <code>RUNNING</code> jobs are returned.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListJobs">REST API Reference for ListJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.RegisterJobDefinitionAsync(Amazon.Batch.Model.RegisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an AWS Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/RegisterJobDefinition">REST API Reference for RegisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.SubmitJobAsync(Amazon.Batch.Model.SubmitJobRequest,System.Threading.CancellationToken)">
            <summary>
            Submits an AWS Batch job from a job definition. Parameters specified during <a>SubmitJob</a>
            override parameters defined in the job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/SubmitJob">REST API Reference for SubmitJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.TerminateJobAsync(Amazon.Batch.Model.TerminateJobRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a job in a job queue. Jobs that are in the <code>STARTING</code> or <code>RUNNING</code>
            state are terminated, which causes them to transition to <code>FAILED</code>. Jobs
            that have not progressed to the <code>STARTING</code> state are cancelled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TerminateJob">REST API Reference for TerminateJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UpdateComputeEnvironmentAsync(Amazon.Batch.Model.UpdateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an AWS Batch compute environment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateComputeEnvironment">REST API Reference for UpdateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.AmazonBatchClient.UpdateJobQueueAsync(Amazon.Batch.Model.UpdateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateJobQueue">REST API Reference for UpdateJobQueue Operation</seealso>
        </member>
        <member name="T:Amazon.Batch.IAmazonBatch">
             <summary>
             Interface for accessing Batch
            
             AWS Batch enables you to run batch computing workloads on the AWS Cloud. Batch computing
             is a common way for developers, scientists, and engineers to access large amounts
             of compute resources, and AWS Batch removes the undifferentiated heavy lifting of
             configuring and managing the required infrastructure. AWS Batch will be familiar to
             users of traditional batch computing software. This service can efficiently provision
             resources in response to jobs submitted in order to eliminate capacity constraints,
             reduce compute costs, and deliver results quickly.
             
              
             <para>
             As a fully managed service, AWS Batch enables developers, scientists, and engineers
             to run batch computing workloads of any scale. AWS Batch automatically provisions
             compute resources and optimizes the workload distribution based on the quantity and
             scale of the workloads. With AWS Batch, there is no need to install or manage batch
             computing software, which allows you to focus on analyzing results and solving problems.
             AWS Batch reduces operational complexities, saves time, and reduces costs, which makes
             it easy for developers, scientists, and engineers to run their batch jobs in the AWS
             Cloud.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CancelJobAsync(Amazon.Batch.Model.CancelJobRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels a job in an AWS Batch job queue. Jobs that are in the <code>SUBMITTED</code>,
            <code>PENDING</code>, or <code>RUNNABLE</code> state are cancelled. Jobs that have
            progressed to <code>STARTING</code> or <code>RUNNING</code> are not cancelled (but
            the API operation still succeeds, even if no job is cancelled); these jobs must be
            terminated with the <a>TerminateJob</a> operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CancelJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CancelJob">REST API Reference for CancelJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CreateComputeEnvironmentAsync(Amazon.Batch.Model.CreateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an AWS Batch compute environment. You can create <code>MANAGED</code> or <code>UNMANAGED</code>
            compute environments.
            
             
            <para>
            In a managed compute environment, AWS Batch manages the capacity and instance types
            of the compute resources within the environment. This is based on the compute resource
            specification that you define or the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">launch
            template</a> that you specify when you create the compute environment. You can choose
            to use Amazon EC2 On-Demand Instances or Spot Instances in your managed compute environment.
            You can optionally set a maximum price so that Spot Instances only launch when the
            Spot Instance price is below a specified percentage of the On-Demand price.
            </para>
             <note> 
            <para>
            Multi-node parallel jobs are not supported on Spot Instances.
            </para>
             </note> 
            <para>
            In an unmanaged compute environment, you can manage your own compute resources. This
            provides more compute resource configuration options, such as using a custom AMI,
            but you must ensure that your AMI meets the Amazon ECS container instance AMI specification.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">Container
            Instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
            After you have created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a>
            operation to find the Amazon ECS cluster that is associated with it. Then, manually
            launch your container instances into that Amazon ECS cluster. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching
            an Amazon ECS Container Instance</a> in the <i>Amazon Elastic Container Service Developer
            Guide</i>.
            </para>
             <note> 
            <para>
            AWS Batch does not upgrade the AMIs in a compute environment after it is created (for
            example, when a newer version of the Amazon ECS-optimized AMI is available). You are
            responsible for the management of the guest operating system (including updates and
            security patches) and any additional application software or utilities that you install
            on the compute resources. To use a new AMI for your AWS Batch jobs:
            </para>
             <ol> <li> 
            <para>
            Create a new compute environment with the new AMI.
            </para>
             </li> <li> 
            <para>
            Add the compute environment to an existing job queue.
            </para>
             </li> <li> 
            <para>
            Remove the old compute environment from your job queue.
            </para>
             </li> <li> 
            <para>
            Delete the old compute environment.
            </para>
             </li> </ol> </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateComputeEnvironment">REST API Reference for CreateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.CreateJobQueueAsync(Amazon.Batch.Model.CreateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an AWS Batch job queue. When you create a job queue, you associate one or
            more compute environments to the queue and assign an order of preference for the compute
            environments.
            
             
            <para>
            You also set a priority to the job queue that determines the order in which the AWS
            Batch scheduler places jobs onto its associated compute environments. For example,
            if a compute environment is associated with more than one job queue, the job queue
            with a higher priority is given preference for scheduling jobs to that compute environment.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/CreateJobQueue">REST API Reference for CreateJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeleteComputeEnvironmentAsync(Amazon.Batch.Model.DeleteComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an AWS Batch compute environment.
            
             
            <para>
            Before you can delete a compute environment, you must set its state to <code>DISABLED</code>
            with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any
            job queues with the <a>UpdateJobQueue</a> API operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteComputeEnvironment">REST API Reference for DeleteComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeleteJobQueueAsync(Amazon.Batch.Model.DeleteJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job queue. You must first disable submissions for a queue with
            the <a>UpdateJobQueue</a> operation. All jobs in the queue are terminated when you
            delete a job queue.
            
             
            <para>
            It is not necessary to disassociate compute environments from a queue before submitting
            a <code>DeleteJobQueue</code> request. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeleteJobQueue">REST API Reference for DeleteJobQueue Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DeregisterJobDefinitionAsync(Amazon.Batch.Model.DeregisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters an AWS Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DeregisterJobDefinition">REST API Reference for DeregisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeComputeEnvironmentsAsync(Amazon.Batch.Model.DescribeComputeEnvironmentsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your compute environments.
            
             
            <para>
            If you are using an unmanaged compute environment, you can use the <code>DescribeComputeEnvironment</code>
            operation to determine the <code>ecsClusterArn</code> that you should launch your
            Amazon ECS container instances into.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeComputeEnvironments service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeComputeEnvironments service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeComputeEnvironments">REST API Reference for DescribeComputeEnvironments Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobDefinitionsAsync(Amazon.Batch.Model.DescribeJobDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of job definitions. You can specify a <code>status</code> (such as
            <code>ACTIVE</code>) to only return job definitions that match that status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobDefinitions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobDefinitions service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobDefinitions">REST API Reference for DescribeJobDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobQueuesAsync(Amazon.Batch.Model.DescribeJobQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Describes one or more of your job queues.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobQueues service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobQueues service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobQueues">REST API Reference for DescribeJobQueues Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.DescribeJobsAsync(Amazon.Batch.Model.DescribeJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Describes a list of AWS Batch jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/DescribeJobs">REST API Reference for DescribeJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.ListJobsAsync(Amazon.Batch.Model.ListJobsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of AWS Batch jobs.
            
             
            <para>
            You must specify only one of the following:
            </para>
             <ul> <li> 
            <para>
            a job queue ID to return a list of jobs in that job queue
            </para>
             </li> <li> 
            <para>
            a multi-node parallel job ID to return a list of that job's nodes
            </para>
             </li> <li> 
            <para>
            an array job ID to return a list of that job's children
            </para>
             </li> </ul> 
            <para>
            You can filter the results by job status with the <code>jobStatus</code> parameter.
            If you do not specify a status, only <code>RUNNING</code> jobs are returned.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListJobs service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/ListJobs">REST API Reference for ListJobs Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.RegisterJobDefinitionAsync(Amazon.Batch.Model.RegisterJobDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Registers an AWS Batch job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterJobDefinition service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterJobDefinition service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/RegisterJobDefinition">REST API Reference for RegisterJobDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.SubmitJobAsync(Amazon.Batch.Model.SubmitJobRequest,System.Threading.CancellationToken)">
            <summary>
            Submits an AWS Batch job from a job definition. Parameters specified during <a>SubmitJob</a>
            override parameters defined in the job definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SubmitJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SubmitJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/SubmitJob">REST API Reference for SubmitJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.TerminateJobAsync(Amazon.Batch.Model.TerminateJobRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a job in a job queue. Jobs that are in the <code>STARTING</code> or <code>RUNNING</code>
            state are terminated, which causes them to transition to <code>FAILED</code>. Jobs
            that have not progressed to the <code>STARTING</code> state are cancelled.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateJob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateJob service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/TerminateJob">REST API Reference for TerminateJob Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UpdateComputeEnvironmentAsync(Amazon.Batch.Model.UpdateComputeEnvironmentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an AWS Batch compute environment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComputeEnvironment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComputeEnvironment service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateComputeEnvironment">REST API Reference for UpdateComputeEnvironment Operation</seealso>
        </member>
        <member name="M:Amazon.Batch.IAmazonBatch.UpdateJobQueueAsync(Amazon.Batch.Model.UpdateJobQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a job queue.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateJobQueue service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateJobQueue service method, as returned by Batch.</returns>
            <exception cref="T:Amazon.Batch.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permissions to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.Batch.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/UpdateJobQueue">REST API Reference for UpdateJobQueue Operation</seealso>
        </member>
    </members>
</doc>
