<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ElasticFileSystem</name>
    </assembly>
    <members>
        <member name="M:Amazon.ElasticFileSystem.Internal.IdempotencyHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Internal.IdempotencyHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemMetadata">
            <summary>
            Service metadata for  Amazon ElasticFileSystem service
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Internal.AmazonElasticFileSystemMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig">
            <summary>
            Configuration for accessing Amazon ElasticFileSystem service
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemException">
            <summary>
             Common exception for the ElasticFileSystem service.
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemRequest">
            <summary>
            Base class for ElasticFileSystem operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest">
            <summary>
            Container for the parameters to the CreateFileSystem operation.
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul> <li> 
            <para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para>
             </li> <li> 
            <para>
            Returns with the description of the created file system.
            </para>
             </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note> 
            <para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para>
             </note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para>
             <note> 
            <para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para>
             </note> 
            <para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para>
             
            <para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateFileSystemRequest with the parameterized properties
            </summary>
            <param name="creationToken">A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            A Boolean value that, if true, creates an encrypted file system. When creating an
            encrypted file system, you have the option of specifying <a>CreateFileSystemRequest$KmsKeyId</a>
            for an existing AWS Key Management Service (AWS KMS) customer master key (CMK). If
            you don't specify a CMK, then the default CMK for Amazon EFS, <code>/aws/elasticfilesystem</code>,
            is used to protect the encrypted file system. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of the AWS KMS CMK to be used to protect the encrypted file system. This parameter
            is only required if you want to use a nondefault CMK. If this parameter is not specified,
            the default CMK for Amazon EFS is used. This ID can be in one of the following formats:
            </para>
             <ul> <li> 
            <para>
            Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.
            </para>
             </li> <li> 
            <para>
            ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.
            </para>
             </li> <li> 
            <para>
            Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.
            </para>
             </li> <li> 
            <para>
            Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.
            </para>
             </li> </ul> 
            <para>
            If <code>KmsKeyId</code> is specified, the <a>CreateFileSystemRequest$Encrypted</a>
            parameter must be set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.PerformanceMode">
            <summary>
            Gets and sets the property PerformanceMode. 
            <para>
            The performance mode of the file system. We recommend <code>generalPurpose</code>
            performance mode for most file systems. File systems using the <code>maxIO</code>
            performance mode can scale to higher levels of aggregate throughput and operations
            per second with a tradeoff of slightly higher latencies for most file operations.
            The performance mode can't be changed after the file system has been created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.ProvisionedThroughputInMibps">
            <summary>
            Gets and sets the property ProvisionedThroughputInMibps. 
            <para>
            The throughput, measured in MiB/s, that you want to provision for a file system that
            you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code>
            is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s.
            You can get this limit increased by contacting AWS Support. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A value that specifies to create one or more tags associated with the file system.
            Each tag is a user-defined key-value pair. Name your file system on creation by including
            a <code>"Key":"Name","Value":"{value}"</code> key-value pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.ThroughputMode">
            <summary>
            Gets and sets the property ThroughputMode. 
            <para>
            The throughput mode for the file system to be created. There are two throughput modes
            to choose from for your file system: <code>bursting</code> and <code>provisioned</code>.
            If you set <code>ThroughputMode</code> to <code>provisioned</code>, you must also
            set a value for <code>ProvisionedThroughPutInMibps</code>. You can decrease your file
            system's throughput in Provisioned Throughput mode or change between the throughput
            modes as long as it’s been more than 24 hours since the last decrease or throughput
            mode change. For more, see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying
            Throughput with Provisioned Mode</a> in the <i>Amazon EFS User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse">
            <summary>
            A description of the file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            The opaque string specified in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            A Boolean value that, if true, indicates that the file system is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system, assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was
            used to protect the encrypted file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            The lifecycle phase of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            You can add tags to a file system, including a <code>Name</code> tag. For more information,
            see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon
            EFS returns the value in this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.NumberOfMountTargets">
            <summary>
            Gets and sets the property NumberOfMountTargets. 
            <para>
            The current number of mount targets that the file system has. For more information,
            see <a>CreateMountTarget</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account that created the file system. If the file system was created by an
            IAM user, the parent account to which the user belongs is the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.PerformanceMode">
            <summary>
            Gets and sets the property PerformanceMode. 
            <para>
            The performance mode of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.ProvisionedThroughputInMibps">
            <summary>
            Gets and sets the property ProvisionedThroughputInMibps. 
            <para>
            The throughput, measured in MiB/s, that you want to provision for a file system. Valid
            values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>.
            The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting
            AWS Support. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
            The latest known metered size (in bytes) of data stored in the file system, in its
            <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code>
            field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z.
            The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot
            of the file system, but it is eventually consistent when there are no writes to the
            file system. That is, <code>SizeInBytes</code> represents actual size only if the
            file system is not modified for a period longer than a couple of hours. Otherwise,
            the value is not the exact size that the file system was at any point in time. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with the file system, presented as an array of <code>Tag</code>
            objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.ThroughputMode">
            <summary>
            Gets and sets the property ThroughputMode. 
            <para>
            The throughput mode for a file system. There are two throughput modes to choose from
            for your file system: <code>bursting</code> and <code>provisioned</code>. If you set
            <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value
            for <code>ProvisionedThroughPutInMibps</code>. You can decrease your file system's
            throughput in Provisioned Throughput mode or change between the throughput modes as
            long as it’s been more than 24 hours since the last decrease or throughput mode change.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest">
            <summary>
            Container for the parameters to the CreateMountTarget operation.
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances by using the mount target.
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be <code>available</code>. For more
            information, see <a>DescribeFileSystems</a>.
            </para>
             
            <para>
            In the request, you also provide a subnet ID, which determines the following:
            </para>
             <ul> <li> 
            <para>
            VPC in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            Availability Zone in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            IP address range from which Amazon EFS selects the IP address of the mount target
            (if you don't specify an IP address in the request)
            </para>
             </li> </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system by using the mount
            target can resolve the mount target's DNS name to its IP address. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
            Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the subnet specified in the request
            to add another mount target must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            Must belong to the same VPC as the subnets of the existing mount targets
            </para>
             </li> <li> 
            <para>
            Must not be in the same Availability Zone as any of the subnets of the existing mount
            targets
            </para>
             </li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li> 
            <para>
            Creates a new mount target in the specified subnet.
            </para>
             </li> <li> 
            <para>
            Also creates a new network interface in the subnet as follows:
            </para>
             <ul> <li> 
            <para>
            If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address
            to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet
            (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does
            when a request does not specify a primary private IP address).
            </para>
             </li> <li> 
            <para>
            If the request provides <code>SecurityGroups</code>, this network interface is associated
            with those security groups. Otherwise, it belongs to the default security group for
            the subnet's VPC.
            </para>
             </li> <li> 
            <para>
            Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i>
            </code> where <code> <i>fsmt-id</i> </code> is the mount target ID, and <code> <i>fs-id</i>
            </code> is the <code>FileSystemId</code>.
            </para>
             </li> <li> 
            <para>
            Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>,
            and the <code>requesterId</code> value to <code>EFS</code>.
            </para>
             </li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note> 
            <para>
            The <code>CreateMountTarget</code> call returns only after creating the network interface,
            but while the mount target state is still <code>creating</code>, you can check the
            mount target creation status by calling the <a>DescribeMountTargets</a> operation,
            which among other things returns the mount target state.
            </para>
             </note> 
            <para>
            We recommend that you create a mount target in each of the Availability Zones. There
            are cost considerations for using a file system in an Availability Zone through a
            mount target created in another Availability Zone. For more information, see <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a>. In addition, by always using a mount target local to the instance's Availability
            Zone, you eliminate a partial failure scenario. If the Availability Zone in which
            your mount target is created goes down, then you can't access your file system through
            that mount target. 
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:CreateMountTarget</code> 
            </para>
             </li> </ul> 
            <para>
            This operation also requires permissions for the following Amazon EC2 actions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeSubnets</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaces</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which to create the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            Valid IPv4 address within the address range of the specified subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must
            be for the same VPC as subnet specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet to add the mount target in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse">
            <summary>
            Provides a description of a mount target.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which the mount target is intended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            Address at which the file system can be mounted by using the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            Lifecycle state of the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            System-assigned mount target ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface that Amazon EFS created when it created the mount
            target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            AWS account ID that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the mount target's subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateTagsRequest">
            <summary>
            Container for the parameters to the CreateTags operation.
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the <code>Name</code> tag to your file system, Amazon EFS returns it in the response
            to the <a>DescribeFileSystems</a> operation. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system whose tags you want to modify (String). This operation modifies
            the tags only, not the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value
            pair. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateTagsResponse">
            <summary>
            This is the response object from the CreateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest">
            <summary>
            Container for the parameters to the DeleteFileSystem operation.
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note> 
            <para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para>
             </note> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteFileSystemRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteFileSystemResponse">
            <summary>
            This is the response object from the DeleteFileSystem operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest">
            <summary>
            Container for the parameters to the DeleteMountTarget operation.
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DeleteMountTarget</code> 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para>
             </note> 
            <para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteMountTargetRequest with the parameterized properties
            </summary>
            <param name="mountTargetId">The ID of the mount target to delete (String).</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The ID of the mount target to delete (String).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteMountTargetResponse">
            <summary>
            This is the response object from the DeleteMountTarget operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an
            error. For more information about tags and related restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system whose tags you want to delete (String).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteTagsRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteTagsResponse">
            <summary>
            This is the response object from the DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new DependencyTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest">
            <summary>
            Container for the parameters to the DescribeFileSystems operation.
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise,
            it returns descriptions of all file systems owned by the caller's AWS account in the
            AWS Region of the endpoint that you're calling.
            
             
            <para>
            When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. Currently, this number
            is automatically set to 10. If more file system descriptions remain, Amazon EFS returns
            a <code>NextMarker</code>, an opaque token, in the response. In this case, you should
            send a subsequent request with the <code>Marker</code> request parameter set to the
            value of <code>NextMarker</code>. 
            </para>
             
            <para>
            To retrieve a list of your file system descriptions, this operation is used in an
            iterative process, where <code>DescribeFileSystems</code> is called first without
            the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call and the order of file systems returned across the responses of a multi-call iteration
            is unspecified. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            (Optional) Restricts the list to the file system with this creation token (String).
            You specify a creation token when you create an Amazon EFS file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            (Optional) ID of the file system whose description you want to retrieve (String).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            (Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code>
            operation (String). If present, specifies to continue the list from where the returning
            call had left off. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            (Optional) Specifies the maximum number of file systems to return in the response
            (integer). Currently, this number is automatically set to 10, and other values are
            ignored. The response is paginated at 10 per page if you have more than 10 file systems.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse">
            <summary>
            This is the response object from the DescribeFileSystems operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.FileSystems">
            <summary>
            Gets and sets the property FileSystems. 
            <para>
            An array of file system descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            Present if provided by caller in the request (String).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            Present if there are more file systems than returned in the response (String). You
            can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the DescribeLifecycleConfiguration operation.
            Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon
            EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code>
            object to identify which files to move to the EFS Infrequent Access (IA) storage class.
            For a file system without a <code>LifecycleConfiguration</code> object, the call returns
            an empty array in the response.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system whose <code>LifecycleConfiguration</code> object you want
            to retrieve (String).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse">
            <summary>
            This is the response object from the DescribeLifecycleConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse.LifecyclePolicies">
            <summary>
            Gets and sets the property LifecyclePolicies. 
            <para>
            An array of lifecycle management policies. Currently, EFS supports a maximum of one
            policy per file system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest">
            <summary>
            Container for the parameters to the DescribeMountTargetSecurityGroups operation.
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The ID of the mount target whose security groups you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse">
            <summary>
            This is the response object from the DescribeMountTargetSecurityGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            An array of security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest">
            <summary>
            Container for the parameters to the DescribeMountTargets operation.
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeMountTargetsRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">(Optional) ID of the file system whose mount targets you want to list (String). It must be included in your request if <code>MountTargetId</code> is not included.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            (Optional) ID of the file system whose mount targets you want to list (String). It
            must be included in your request if <code>MountTargetId</code> is not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            (Optional) Opaque pagination token returned from a previous <code>DescribeMountTargets</code>
            operation (String). If present, it specifies to continue the list from where the previous
            returning call left off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            (Optional) Maximum number of mount targets to return in the response. Currently, this
            number is automatically set to 10, and other values are ignored. The response is paginated
            at 10 per page if you have more than 10 mount targets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            (Optional) ID of the mount target that you want to have described (String). It must
            be included in your request if <code>FileSystemId</code> is not included.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            If the request included the <code>Marker</code>, the response returns that value in
            this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.MountTargets">
            <summary>
            Gets and sets the property MountTargets. 
            <para>
            Returns the file system's mount targets as an array of <code>MountTargetDescription</code>
            objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            If a value is present, there are more mount targets to return. In a subsequent request,
            you can provide <code>Marker</code> in your request with this value to retrieve the
            next set of mount targets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeTagsRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system whose tag set you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            (Optional) An opaque pagination token returned from a previous <code>DescribeTags</code>
            operation (String). If present, it specifies to continue the list from where the previous
            call left off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            (Optional) The maximum number of file system tags to return in the response. Currently,
            this number is automatically set to 10, and other values are ignored. The response
            is paginated at 10 per page if you have more than 10 tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeTagsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            If the request included a <code>Marker</code>, the response returns that value in
            this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            If a value is present, there are more tags to return. In a subsequent request, you
            can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code>
            parameter in your next request to retrieve the next set of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Returns tags associated with the file system as an array of <code>Tag</code> objects.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemDescription">
            <summary>
            A description of the file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            The opaque string specified in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            A Boolean value that, if true, indicates that the file system is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system, assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was
            used to protect the encrypted file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            The lifecycle phase of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            You can add tags to a file system, including a <code>Name</code> tag. For more information,
            see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon
            EFS returns the value in this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.NumberOfMountTargets">
            <summary>
            Gets and sets the property NumberOfMountTargets. 
            <para>
            The current number of mount targets that the file system has. For more information,
            see <a>CreateMountTarget</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account that created the file system. If the file system was created by an
            IAM user, the parent account to which the user belongs is the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.PerformanceMode">
            <summary>
            Gets and sets the property PerformanceMode. 
            <para>
            The performance mode of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.ProvisionedThroughputInMibps">
            <summary>
            Gets and sets the property ProvisionedThroughputInMibps. 
            <para>
            The throughput, measured in MiB/s, that you want to provision for a file system. Valid
            values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>.
            The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting
            AWS Support. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
            The latest known metered size (in bytes) of data stored in the file system, in its
            <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code>
            field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z.
            The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot
            of the file system, but it is eventually consistent when there are no writes to the
            file system. That is, <code>SizeInBytes</code> represents actual size only if the
            file system is not modified for a period longer than a couple of hours. Otherwise,
            the value is not the exact size that the file system was at any point in time. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with the file system, presented as an array of <code>Tag</code>
            objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.ThroughputMode">
            <summary>
            Gets and sets the property ThroughputMode. 
            <para>
            The throughput mode for a file system. There are two throughput modes to choose from
            for your file system: <code>bursting</code> and <code>provisioned</code>. If you set
            <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value
            for <code>ProvisionedThroughPutInMibps</code>. You can decrease your file system's
            throughput in Provisioned Throughput mode or change between the throughput modes as
            long as it’s been more than 24 hours since the last decrease or throughput mode change.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemSize">
            <summary>
            The latest known metered size (in bytes) of data stored in the file system, in its
            <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code>
            field. The value doesn't represent the size of a consistent snapshot of the file system,
            but it is eventually consistent when there are no writes to the file system. That
            is, the value represents the actual size only if the file system is not modified for
            a period longer than a couple of hours. Otherwise, the value is not necessarily the
            exact size the file system was at any instant in time.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time at which the size of data, returned in the <code>Value</code> field, was
            determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The latest known metered size (in bytes) of data stored in the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.ValueInIA">
            <summary>
            Gets and sets the property ValueInIA. 
            <para>
            The latest known metered size (in bytes) of data stored in the Infrequent Access storage
            class.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.ValueInStandard">
            <summary>
            Gets and sets the property ValueInStandard. 
            <para>
            The latest known metered size (in bytes) of data stored in the Standard storage class.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String)">
            <summary>
            Constructs a new IncorrectFileSystemLifeCycleStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String)">
            <summary>
            Constructs a new IncorrectMountTargetStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientThroughputCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientThroughputCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientThroughputCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientThroughputCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientThroughputCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller">
            <summary>
            CreateFileSystem Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateFileSystem operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller">
            <summary>
            CreateMountTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMountTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller">
            <summary>
            CreateTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller">
            <summary>
            DeleteFileSystem Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFileSystem operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller">
            <summary>
            DeleteMountTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMountTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller">
            <summary>
            DescribeFileSystems Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeFileSystems operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationRequestMarshaller">
            <summary>
            DescribeLifecycleConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLifecycleConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeLifecycleConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller">
            <summary>
            DescribeMountTargetSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMountTargetSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller">
            <summary>
            DescribeMountTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMountTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileSystemDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#FileSystemDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller">
            <summary>
            Response Unmarshaller for FileSystemSize Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#FileSystemSize,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyMarshaller">
            <summary>
            LifecyclePolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyMarshaller.Marshall(Amazon.ElasticFileSystem.Model.LifecyclePolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for LifecyclePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#LifecyclePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.LifecyclePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller">
            <summary>
            ModifyMountTargetSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyMountTargetSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for MountTargetDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#MountTargetDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller">
            <summary>
            PutLifecycleConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLifecycleConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ElasticFileSystem.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemRequestMarshaller">
            <summary>
            UpdateFileSystem Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateFileSystem operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.UpdateFileSystemResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String)">
            <summary>
            Constructs a new IpAddressInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.LifecyclePolicy">
            <summary>
            Describes a policy used by EFS lifecycle management to transition files to the Infrequent
            Access (IA) storage class.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.LifecyclePolicy.TransitionToIA">
            <summary>
            Gets and sets the property TransitionToIA. 
            <para>
             A value that describes the period of time that a file is not accessed, after which
            it transitions to the IA storage class. Metadata operations such as listing the contents
            of a directory don't count as file access events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest">
            <summary>
            Container for the parameters to the ModifyMountTargetSecurityGroups operation.
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface. For
            more information, see <a>CreateMountTarget</a>. This operation replaces the security
            groups in effect for the network interface associated with a mount target, with the
            <code>SecurityGroups</code> provided in the request. This operation requires that
            the network interface of the mount target has been created and the lifecycle state
            of the mount target is not <code>deleted</code>. 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The ID of the mount target whose security groups you want to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            An array of up to five VPC security group IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsResponse">
            <summary>
            This is the response object from the ModifyMountTargetSecurityGroups operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String)">
            <summary>
            Constructs a new MountTargetConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetDescription">
            <summary>
            Provides a description of a mount target.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which the mount target is intended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            Address at which the file system can be mounted by using the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            Lifecycle state of the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            System-assigned mount target ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface that Amazon EFS created when it created the mount
            target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            AWS account ID that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the mount target's subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new MountTargetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NetworkInterfaceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new NoFreeAddressesInSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the PutLifecycleConfiguration operation.
            Enables lifecycle management by creating a new <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object defines when files in an Amazon
            EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access
            (IA) storage class. A <code>LifecycleConfiguration</code> applies to all files in
            a file system.
            
             
            <para>
            Each Amazon EFS file system supports one lifecycle configuration, which applies to
            all files in the file system. If a <code>LifecycleConfiguration</code> object already
            exists for the specified file system, a <code>PutLifecycleConfiguration</code> call
            modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call
            with an empty <code>LifecyclePolicies</code> array in the request body deletes any
            existing <code>LifecycleConfiguration</code> and disables lifecycle management.
            </para>
             
            <para>
            In the request, specify the following: 
            </para>
             <ul> <li> 
            <para>
            The ID for the file system for which you are enabling, disabling, or modifying lifecycle
            management.
            </para>
             </li> <li> 
            <para>
            A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that
            define when files are moved to the IA storage class. The array can contain only one
            <code>LifecyclePolicy</code> item.
            </para>
             </li> </ul> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>
            operation.
            </para>
             
            <para>
            To apply a <code>LifecycleConfiguration</code> object to an encrypted file system,
            you need the same AWS Key Management Service (AWS KMS) permissions as when you created
            the encrypted file system. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which you are creating the <code>LifecycleConfiguration</code>
            object (String).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest.LifecyclePolicies">
            <summary>
            Gets and sets the property LifecyclePolicies. 
            <para>
            An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object tells lifecycle management when
            to transition files from the Standard storage class to the Infrequent Access storage
            class.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse">
            <summary>
            This is the response object from the PutLifecycleConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse.LifecyclePolicies">
            <summary>
            Gets and sets the property LifecyclePolicies. 
            <para>
            An array of lifecycle management policies. Currently, EFS supports a maximum of one
            policy per file system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SecurityGroupLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SecurityGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Tag">
            <summary>
            A tag is a key-value pair. Allowed characters are letters, white space, and numbers
            that can be represented in UTF-8, and the following characters:<code> + - = . _ :
            /</code>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The tag key (String). The key can't start with <code>aws:</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ThroughputLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThroughputLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThroughputLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThroughputLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThroughputLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.TooManyRequestsException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.TooManyRequestsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.TooManyRequestsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.TooManyRequestsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.TooManyRequestsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyRequestsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedAvailabilityZoneException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest">
            <summary>
            Container for the parameters to the UpdateFileSystem operation.
            Updates the throughput mode or the amount of provisioned throughput of an existing
            file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system that you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest.ProvisionedThroughputInMibps">
            <summary>
            Gets and sets the property ProvisionedThroughputInMibps. 
            <para>
            (Optional) The amount of throughput, in MiB/s, that you want to provision for your
            file system. Valid values are 1-1024. Required if <code>ThroughputMode</code> is changed
            to <code>provisioned</code> on update. If you're not updating the amount of provisioned
            throughput for your file system, you don't need to provide this value in your request.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest.ThroughputMode">
            <summary>
            Gets and sets the property ThroughputMode. 
            <para>
            (Optional) The throughput mode that you want your file system to use. If you're not
            updating your throughput mode, you don't need to provide this value in your request.
            If you are changing the <code>ThroughputMode</code> to <code>provisioned</code>, you
            must also set a value for <code>ProvisionedThroughputInMibps</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse">
            <summary>
            A description of the file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            The opaque string specified in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            A Boolean value that, if true, indicates that the file system is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system, assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was
            used to protect the encrypted file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            The lifecycle phase of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            You can add tags to a file system, including a <code>Name</code> tag. For more information,
            see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon
            EFS returns the value in this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.NumberOfMountTargets">
            <summary>
            Gets and sets the property NumberOfMountTargets. 
            <para>
            The current number of mount targets that the file system has. For more information,
            see <a>CreateMountTarget</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account that created the file system. If the file system was created by an
            IAM user, the parent account to which the user belongs is the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.PerformanceMode">
            <summary>
            Gets and sets the property PerformanceMode. 
            <para>
            The performance mode of the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.ProvisionedThroughputInMibps">
            <summary>
            Gets and sets the property ProvisionedThroughputInMibps. 
            <para>
            The throughput, measured in MiB/s, that you want to provision for a file system. Valid
            values are 1-1024. Required if <code>ThroughputMode</code> is set to <code>provisioned</code>.
            The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting
            AWS Support. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
            The latest known metered size (in bytes) of data stored in the file system, in its
            <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code>
            field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z.
            The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot
            of the file system, but it is eventually consistent when there are no writes to the
            file system. That is, <code>SizeInBytes</code> represents actual size only if the
            file system is not modified for a period longer than a couple of hours. Otherwise,
            the value is not the exact size that the file system was at any point in time. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with the file system, presented as an array of <code>Tag</code>
            objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse.ThroughputMode">
            <summary>
            Gets and sets the property ThroughputMode. 
            <para>
            The throughput mode for a file system. There are two throughput modes to choose from
            for your file system: <code>bursting</code> and <code>provisioned</code>. If you set
            <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value
            for <code>ProvisionedThroughPutInMibps</code>. You can decrease your file system's
            throughput in Provisioned Throughput mode or change between the throughput modes as
            long as it’s been more than 24 hours since the last decrease or throughput mode change.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.LifeCycleState">
            <summary>
            Constants used for properties of type LifeCycleState.
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Available">
            <summary>
            Constant Available for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Creating">
            <summary>
            Constant Creating for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Deleted">
            <summary>
            Constant Deleted for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Deleting">
            <summary>
            Constant Deleting for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Updating">
            <summary>
            Constant Updating for LifeCycleState
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.op_Implicit(System.String)~Amazon.ElasticFileSystem.LifeCycleState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.PerformanceMode">
            <summary>
            Constants used for properties of type PerformanceMode.
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.PerformanceMode.GeneralPurpose">
            <summary>
            Constant GeneralPurpose for PerformanceMode
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.PerformanceMode.MaxIO">
            <summary>
            Constant MaxIO for PerformanceMode
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.PerformanceMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.PerformanceMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.PerformanceMode.op_Implicit(System.String)~Amazon.ElasticFileSystem.PerformanceMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.ThroughputMode">
            <summary>
            Constants used for properties of type ThroughputMode.
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.ThroughputMode.Bursting">
            <summary>
            Constant Bursting for ThroughputMode
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.ThroughputMode.Provisioned">
            <summary>
            Constant Provisioned for ThroughputMode
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.ThroughputMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.ThroughputMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.ThroughputMode.op_Implicit(System.String)~Amazon.ElasticFileSystem.ThroughputMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.TransitionToIARules">
            <summary>
            Constants used for properties of type TransitionToIARules.
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.TransitionToIARules.AFTER_14_DAYS">
            <summary>
            Constant AFTER_14_DAYS for TransitionToIARules
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.TransitionToIARules.AFTER_30_DAYS">
            <summary>
            Constant AFTER_30_DAYS for TransitionToIARules
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.TransitionToIARules.AFTER_60_DAYS">
            <summary>
            Constant AFTER_60_DAYS for TransitionToIARules
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.TransitionToIARules.AFTER_90_DAYS">
            <summary>
            Constant AFTER_90_DAYS for TransitionToIARules
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.TransitionToIARules.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.TransitionToIARules.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.TransitionToIARules.op_Implicit(System.String)~Amazon.ElasticFileSystem.TransitionToIARules">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient">
             <summary>
             Implementation for accessing ElasticFileSystem
            
             Amazon Elastic File System 
             <para>
             Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for
             use with Amazon EC2 instances in the AWS Cloud. With Amazon EFS, storage capacity
             is elastic, growing and shrinking automatically as you add and remove files, so your
             applications have the storage they need, when they need it. For more information,
             see the <a href="https://docs.aws.amazon.com/efs/latest/ug/api-reference.html">User
             Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials and an
            AmazonElasticFileSystemClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticFileSystemClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticFileSystemClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customizes the runtime pipeline.
            </summary>
            <param name="pipeline">Runtime pipeline for the current client.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateFileSystemAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul> <li> 
            <para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para>
             </li> <li> 
            <para>
            Returns with the description of the created file system.
            </para>
             </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note> 
            <para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para>
             </note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para>
             <note> 
            <para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para>
             </note> 
            <para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para>
             
            <para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="creationToken">A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created the maximum number of file systems
            allowed per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem">REST API Reference for CreateFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateFileSystemAsync(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul> <li> 
            <para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para>
             </li> <li> 
            <para>
            Returns with the description of the created file system.
            </para>
             </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note> 
            <para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para>
             </note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para>
             <note> 
            <para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para>
             </note> 
            <para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para>
             
            <para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created the maximum number of file systems
            allowed per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem">REST API Reference for CreateFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateMountTargetAsync(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances by using the mount target.
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be <code>available</code>. For more
            information, see <a>DescribeFileSystems</a>.
            </para>
             
            <para>
            In the request, you also provide a subnet ID, which determines the following:
            </para>
             <ul> <li> 
            <para>
            VPC in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            Availability Zone in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            IP address range from which Amazon EFS selects the IP address of the mount target
            (if you don't specify an IP address in the request)
            </para>
             </li> </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system by using the mount
            target can resolve the mount target's DNS name to its IP address. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
            Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the subnet specified in the request
            to add another mount target must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            Must belong to the same VPC as the subnets of the existing mount targets
            </para>
             </li> <li> 
            <para>
            Must not be in the same Availability Zone as any of the subnets of the existing mount
            targets
            </para>
             </li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li> 
            <para>
            Creates a new mount target in the specified subnet.
            </para>
             </li> <li> 
            <para>
            Also creates a new network interface in the subnet as follows:
            </para>
             <ul> <li> 
            <para>
            If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address
            to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet
            (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does
            when a request does not specify a primary private IP address).
            </para>
             </li> <li> 
            <para>
            If the request provides <code>SecurityGroups</code>, this network interface is associated
            with those security groups. Otherwise, it belongs to the default security group for
            the subnet's VPC.
            </para>
             </li> <li> 
            <para>
            Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i>
            </code> where <code> <i>fsmt-id</i> </code> is the mount target ID, and <code> <i>fs-id</i>
            </code> is the <code>FileSystemId</code>.
            </para>
             </li> <li> 
            <para>
            Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>,
            and the <code>requesterId</code> value to <code>EFS</code>.
            </para>
             </li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note> 
            <para>
            The <code>CreateMountTarget</code> call returns only after creating the network interface,
            but while the mount target state is still <code>creating</code>, you can check the
            mount target creation status by calling the <a>DescribeMountTargets</a> operation,
            which among other things returns the mount target state.
            </para>
             </note> 
            <para>
            We recommend that you create a mount target in each of the Availability Zones. There
            are cost considerations for using a file system in an Availability Zone through a
            mount target created in another Availability Zone. For more information, see <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a>. In addition, by always using a mount target local to the instance's Availability
            Zone, you eliminate a partial failure scenario. If the Availability Zone in which
            your mount target is created goes down, then you can't access your file system through
            that mount target. 
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:CreateMountTarget</code> 
            </para>
             </li> </ul> 
            <para>
            This operation also requires permissions for the following Amazon EC2 actions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeSubnets</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaces</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            Returned if the request specified an <code>IpAddress</code> that is already in use
            in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            Returned if the mount target would violate one of the specified restrictions based
            on the file system's existing mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            The calling account has reached the limit for elastic network interfaces for the specific
            AWS Region. The client should try to delete some elastic network interfaces or get
            the account limit raised. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon
            VPC Limits</a> in the <i>Amazon VPC User Guide </i> (see the Network interfaces per
            VPC entry in the table).
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            Returned if <code>IpAddress</code> was not specified in the request and there are
            no free IP addresses in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups doesn't exist in the subnet's VPC.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateMountTarget">REST API Reference for CreateMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateTagsAsync(Amazon.ElasticFileSystem.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the <code>Name</code> tag to your file system, Amazon EFS returns it in the response
            to the <a>DescribeFileSystems</a> operation. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateTags">REST API Reference for CreateTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteFileSystemAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note> 
            <para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para>
             </note> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteFileSystem">REST API Reference for DeleteFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteFileSystemAsync(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note> 
            <para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para>
             </note> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteFileSystem">REST API Reference for DeleteFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteMountTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DeleteMountTarget</code> 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para>
             </note> 
            <para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target to delete (String).</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteMountTarget">REST API Reference for DeleteMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteMountTargetAsync(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DeleteMountTarget</code> 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para>
             </note> 
            <para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteMountTarget">REST API Reference for DeleteMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteTagsAsync(Amazon.ElasticFileSystem.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an
            error. For more information about tags and related restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteTags">REST API Reference for DeleteTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeFileSystemsAsync(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise,
            it returns descriptions of all file systems owned by the caller's AWS account in the
            AWS Region of the endpoint that you're calling.
            
             
            <para>
            When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. Currently, this number
            is automatically set to 10. If more file system descriptions remain, Amazon EFS returns
            a <code>NextMarker</code>, an opaque token, in the response. In this case, you should
            send a subsequent request with the <code>Marker</code> request parameter set to the
            value of <code>NextMarker</code>. 
            </para>
             
            <para>
            To retrieve a list of your file system descriptions, this operation is used in an
            iterative process, where <code>DescribeFileSystems</code> is called first without
            the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call and the order of file systems returned across the responses of a multi-call iteration
            is unspecified. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeFileSystems service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeFileSystems">REST API Reference for DescribeFileSystems Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeLifecycleConfigurationAsync(Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon
            EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code>
            object to identify which files to move to the EFS Infrequent Access (IA) storage class.
            For a file system without a <code>LifecycleConfiguration</code> object, the call returns
            an empty array in the response.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLifecycleConfiguration service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeLifecycleConfiguration">REST API Reference for DescribeLifecycleConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="fileSystemId">(Optional) ID of the file system whose mount targets you want to list (String). It must be included in your request if <code>MountTargetId</code> is not included.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargets">REST API Reference for DescribeMountTargets Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetsAsync(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargets">REST API Reference for DescribeMountTargets Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetSecurityGroupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target whose security groups you want to retrieve.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargetSecurityGroups">REST API Reference for DescribeMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetSecurityGroupsAsync(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargetSecurityGroups">REST API Reference for DescribeMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeTagsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeTags">REST API Reference for DescribeTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeTagsAsync(Amazon.ElasticFileSystem.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeTags">REST API Reference for DescribeTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.ModifyMountTargetSecurityGroupsAsync(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface. For
            more information, see <a>CreateMountTarget</a>. This operation replaces the security
            groups in effect for the network interface associated with a mount target, with the
            <code>SecurityGroups</code> provided in the request. This operation requires that
            the network interface of the mount target has been created and the lifecycle state
            of the mount target is not <code>deleted</code>. 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups doesn't exist in the subnet's VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/ModifyMountTargetSecurityGroups">REST API Reference for ModifyMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.PutLifecycleConfigurationAsync(Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Enables lifecycle management by creating a new <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object defines when files in an Amazon
            EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access
            (IA) storage class. A <code>LifecycleConfiguration</code> applies to all files in
            a file system.
            
             
            <para>
            Each Amazon EFS file system supports one lifecycle configuration, which applies to
            all files in the file system. If a <code>LifecycleConfiguration</code> object already
            exists for the specified file system, a <code>PutLifecycleConfiguration</code> call
            modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call
            with an empty <code>LifecyclePolicies</code> array in the request body deletes any
            existing <code>LifecycleConfiguration</code> and disables lifecycle management.
            </para>
             
            <para>
            In the request, specify the following: 
            </para>
             <ul> <li> 
            <para>
            The ID for the file system for which you are enabling, disabling, or modifying lifecycle
            management.
            </para>
             </li> <li> 
            <para>
            A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that
            define when files are moved to the IA storage class. The array can contain only one
            <code>LifecyclePolicy</code> item.
            </para>
             </li> </ul> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>
            operation.
            </para>
             
            <para>
            To apply a <code>LifecycleConfiguration</code> object to an encrypted file system,
            you need the same AWS Key Management Service (AWS KMS) permissions as when you created
            the encrypted file system. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecycleConfiguration service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/PutLifecycleConfiguration">REST API Reference for PutLifecycleConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.UpdateFileSystemAsync(Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the throughput mode or the amount of provisioned throughput of an existing
            file system.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.TooManyRequestsException">
            Returned if you don’t wait at least 24 hours before changing the throughput mode,
            or decreasing the Provisioned Throughput value.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/UpdateFileSystem">REST API Reference for UpdateFileSystem Operation</seealso>
        </member>
        <member name="T:Amazon.ElasticFileSystem.IAmazonElasticFileSystem">
             <summary>
             Interface for accessing ElasticFileSystem
            
             Amazon Elastic File System 
             <para>
             Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for
             use with Amazon EC2 instances in the AWS Cloud. With Amazon EFS, storage capacity
             is elastic, growing and shrinking automatically as you add and remove files, so your
             applications have the storage they need, when they need it. For more information,
             see the <a href="https://docs.aws.amazon.com/efs/latest/ug/api-reference.html">User
             Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateFileSystemAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul> <li> 
            <para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para>
             </li> <li> 
            <para>
            Returns with the description of the created file system.
            </para>
             </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note> 
            <para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para>
             </note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para>
             <note> 
            <para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para>
             </note> 
            <para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para>
             
            <para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="creationToken">A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created the maximum number of file systems
            allowed per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem">REST API Reference for CreateFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateFileSystemAsync(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's AWS account with the specified creation token, this operation does
            the following:
            
             <ul> <li> 
            <para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para>
             </li> <li> 
            <para>
            Returns with the description of the created file system.
            </para>
             </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note> 
            <para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para>
             </note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para>
             <note> 
            <para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para>
             </note> 
            <para>
            This operation also takes an optional <code>PerformanceMode</code> parameter that
            you choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS: Performance Modes</a>.
            </para>
             
            <para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created the maximum number of file systems
            allowed per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem">REST API Reference for CreateFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateMountTargetAsync(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances by using the mount target.
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be <code>available</code>. For more
            information, see <a>DescribeFileSystems</a>.
            </para>
             
            <para>
            In the request, you also provide a subnet ID, which determines the following:
            </para>
             <ul> <li> 
            <para>
            VPC in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            Availability Zone in which Amazon EFS creates the mount target
            </para>
             </li> <li> 
            <para>
            IP address range from which Amazon EFS selects the IP address of the mount target
            (if you don't specify an IP address in the request)
            </para>
             </li> </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system by using the mount
            target can resolve the mount target's DNS name to its IP address. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
            Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the subnet specified in the request
            to add another mount target must meet the following requirements:
            </para>
             <ul> <li> 
            <para>
            Must belong to the same VPC as the subnets of the existing mount targets
            </para>
             </li> <li> 
            <para>
            Must not be in the same Availability Zone as any of the subnets of the existing mount
            targets
            </para>
             </li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li> 
            <para>
            Creates a new mount target in the specified subnet.
            </para>
             </li> <li> 
            <para>
            Also creates a new network interface in the subnet as follows:
            </para>
             <ul> <li> 
            <para>
            If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address
            to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet
            (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does
            when a request does not specify a primary private IP address).
            </para>
             </li> <li> 
            <para>
            If the request provides <code>SecurityGroups</code>, this network interface is associated
            with those security groups. Otherwise, it belongs to the default security group for
            the subnet's VPC.
            </para>
             </li> <li> 
            <para>
            Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i>
            </code> where <code> <i>fsmt-id</i> </code> is the mount target ID, and <code> <i>fs-id</i>
            </code> is the <code>FileSystemId</code>.
            </para>
             </li> <li> 
            <para>
            Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>,
            and the <code>requesterId</code> value to <code>EFS</code>.
            </para>
             </li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note> 
            <para>
            The <code>CreateMountTarget</code> call returns only after creating the network interface,
            but while the mount target state is still <code>creating</code>, you can check the
            mount target creation status by calling the <a>DescribeMountTargets</a> operation,
            which among other things returns the mount target state.
            </para>
             </note> 
            <para>
            We recommend that you create a mount target in each of the Availability Zones. There
            are cost considerations for using a file system in an Availability Zone through a
            mount target created in another Availability Zone. For more information, see <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a>. In addition, by always using a mount target local to the instance's Availability
            Zone, you eliminate a partial failure scenario. If the Availability Zone in which
            your mount target is created goes down, then you can't access your file system through
            that mount target. 
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:CreateMountTarget</code> 
            </para>
             </li> </ul> 
            <para>
            This operation also requires permissions for the following Amazon EC2 actions:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DescribeSubnets</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaces</code> 
            </para>
             </li> <li> 
            <para>
             <code>ec2:CreateNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            Returned if the request specified an <code>IpAddress</code> that is already in use
            in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            Returned if the mount target would violate one of the specified restrictions based
            on the file system's existing mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            The calling account has reached the limit for elastic network interfaces for the specific
            AWS Region. The client should try to delete some elastic network interfaces or get
            the account limit raised. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon
            VPC Limits</a> in the <i>Amazon VPC User Guide </i> (see the Network interfaces per
            VPC entry in the table).
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            Returned if <code>IpAddress</code> was not specified in the request and there are
            no free IP addresses in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups doesn't exist in the subnet's VPC.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateMountTarget">REST API Reference for CreateMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateTagsAsync(Amazon.ElasticFileSystem.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the <code>Name</code> tag to your file system, Amazon EFS returns it in the response
            to the <a>DescribeFileSystems</a> operation. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateTags">REST API Reference for CreateTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteFileSystemAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note> 
            <para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para>
             </note> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteFileSystem">REST API Reference for DeleteFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteFileSystemAsync(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note> 
            <para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para>
             </note> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteFileSystem">REST API Reference for DeleteFileSystem Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteMountTargetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DeleteMountTarget</code> 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para>
             </note> 
            <para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target to delete (String).</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteMountTarget">REST API Reference for DeleteMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteMountTargetAsync(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para>
             
            <para>
            This operation requires permissions for the following action on the file system:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DeleteMountTarget</code> 
            </para>
             </li> </ul> <note> 
            <para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para>
             </note> 
            <para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> 
            <para>
             <code>ec2:DeleteNetworkInterface</code> 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteMountTarget">REST API Reference for DeleteMountTarget Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteTagsAsync(Amazon.ElasticFileSystem.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an
            error. For more information about tags and related restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DeleteTags">REST API Reference for DeleteTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeFileSystemsAsync(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise,
            it returns descriptions of all file systems owned by the caller's AWS account in the
            AWS Region of the endpoint that you're calling.
            
             
            <para>
            When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. Currently, this number
            is automatically set to 10. If more file system descriptions remain, Amazon EFS returns
            a <code>NextMarker</code>, an opaque token, in the response. In this case, you should
            send a subsequent request with the <code>Marker</code> request parameter set to the
            value of <code>NextMarker</code>. 
            </para>
             
            <para>
            To retrieve a list of your file system descriptions, this operation is used in an
            iterative process, where <code>DescribeFileSystems</code> is called first without
            the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call and the order of file systems returned across the responses of a multi-call iteration
            is unspecified. 
            </para>
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeFileSystems service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeFileSystems">REST API Reference for DescribeFileSystems Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeLifecycleConfigurationAsync(Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon
            EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code>
            object to identify which files to move to the EFS Infrequent Access (IA) storage class.
            For a file system without a <code>LifecycleConfiguration</code> object, the call returns
            an empty array in the response.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
            operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLifecycleConfiguration service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeLifecycleConfiguration">REST API Reference for DescribeLifecycleConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="fileSystemId">(Optional) ID of the file system whose mount targets you want to list (String). It must be included in your request if <code>MountTargetId</code> is not included.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargets">REST API Reference for DescribeMountTargets Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetsAsync(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargets">REST API Reference for DescribeMountTargets Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetSecurityGroupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target whose security groups you want to retrieve.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargetSecurityGroups">REST API Reference for DescribeMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetSecurityGroupsAsync(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeMountTargetSecurityGroups">REST API Reference for DescribeMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeTagsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeTags">REST API Reference for DescribeTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeTagsAsync(Amazon.ElasticFileSystem.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            
             
            <para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/DescribeTags">REST API Reference for DescribeTags Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.ModifyMountTargetSecurityGroupsAsync(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface. For
            more information, see <a>CreateMountTarget</a>. This operation replaces the security
            groups in effect for the network interface associated with a mount target, with the
            <code>SecurityGroups</code> provided in the request. This operation requires that
            the network interface of the mount target has been created and the lifecycle state
            of the mount target is not <code>deleted</code>. 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> 
            <para>
             <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para>
             </li> <li> 
            <para>
             <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups doesn't exist in the subnet's VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/ModifyMountTargetSecurityGroups">REST API Reference for ModifyMountTargetSecurityGroups Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.PutLifecycleConfigurationAsync(Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Enables lifecycle management by creating a new <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object defines when files in an Amazon
            EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access
            (IA) storage class. A <code>LifecycleConfiguration</code> applies to all files in
            a file system.
            
             
            <para>
            Each Amazon EFS file system supports one lifecycle configuration, which applies to
            all files in the file system. If a <code>LifecycleConfiguration</code> object already
            exists for the specified file system, a <code>PutLifecycleConfiguration</code> call
            modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call
            with an empty <code>LifecyclePolicies</code> array in the request body deletes any
            existing <code>LifecycleConfiguration</code> and disables lifecycle management.
            </para>
             
            <para>
            In the request, specify the following: 
            </para>
             <ul> <li> 
            <para>
            The ID for the file system for which you are enabling, disabling, or modifying lifecycle
            management.
            </para>
             </li> <li> 
            <para>
            A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that
            define when files are moved to the IA storage class. The array can contain only one
            <code>LifecyclePolicy</code> item.
            </para>
             </li> </ul> 
            <para>
            This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>
            operation.
            </para>
             
            <para>
            To apply a <code>LifecycleConfiguration</code> object to an encrypted file system,
            you need the same AWS Key Management Service (AWS KMS) permissions as when you created
            the encrypted file system. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecycleConfiguration service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/PutLifecycleConfiguration">REST API Reference for PutLifecycleConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.UpdateFileSystemAsync(Amazon.ElasticFileSystem.Model.UpdateFileSystemRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the throughput mode or the amount of provisioned throughput of an existing
            file system.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateFileSystem service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> value doesn't exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's lifecycle state is not "available".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InsufficientThroughputCapacityException">
            Returned if there's not enough capacity to provision additional throughput. This value
            might be returned when you try to create a file system in provisioned throughput mode,
            when you attempt to increase the provisioned throughput of an existing file system,
            or when you attempt to change an existing file system from bursting to provisioned
            throughput mode.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.ThroughputLimitExceededException">
            Returned if the throughput mode or amount of provisioned throughput can't be changed
            because the throughput limit of 1024 MiB/s has been reached.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.TooManyRequestsException">
            Returned if you don’t wait at least 24 hours before changing the throughput mode,
            or decreasing the Provisioned Throughput value.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/UpdateFileSystem">REST API Reference for UpdateFileSystem Operation</seealso>
        </member>
    </members>
</doc>
