<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ACMPCA</name>
    </assembly>
    <members>
        <member name="T:Amazon.ACMPCA.AmazonACMPCAConfig">
            <summary>
            Configuration for accessing Amazon ACMPCA service
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.AmazonACMPCAConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.AmazonACMPCAConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.AmazonACMPCAConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.AmazonACMPCAException">
            <summary>
             Common exception for the ACMPCA service.
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonACMPCAException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonACMPCAException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonACMPCAException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonACMPCAException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonACMPCAException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Internal.AmazonACMPCAMetadata">
            <summary>
            Service metadata for  Amazon ACMPCA service
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Internal.AmazonACMPCAMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Internal.AmazonACMPCAMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.AmazonACMPCARequest">
            <summary>
            Base class for ACMPCA operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ASN1Subject">
            <summary>
            Contains information about the certificate subject. The certificate can be one issued
            by your private certificate authority (CA) or it can be your private CA certificate.
            The <b>Subject</b> field in the certificate identifies the entity that owns or controls
            the public key in the certificate. The entity can be a user, computer, device, or
            service. The <b>Subject</b> must contain an X.500 distinguished name (DN). A DN is
            a sequence of relative distinguished names (RDNs). The RDNs are separated by commas
            in the certificate. The DN must be unique for each entity, but your private CA can
            issue more than one certificate with the same DN to the same entity.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.CommonName">
            <summary>
            Gets and sets the property CommonName. 
            <para>
            Fully qualified domain name (FQDN) associated with the certificate subject.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Country">
            <summary>
            Gets and sets the property Country. 
            <para>
            Two-digit code that specifies the country in which the certificate subject located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.DistinguishedNameQualifier">
            <summary>
            Gets and sets the property DistinguishedNameQualifier. 
            <para>
            Disambiguating information for the certificate subject.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.GenerationQualifier">
            <summary>
            Gets and sets the property GenerationQualifier. 
            <para>
            Typically a qualifier appended to the name of an individual. Examples include Jr.
            for junior, Sr. for senior, and III for third.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.GivenName">
            <summary>
            Gets and sets the property GivenName. 
            <para>
            First name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Initials">
            <summary>
            Gets and sets the property Initials. 
            <para>
            Concatenation that typically contains the first letter of the <b>GivenName</b>, the
            first letter of the middle name if one exists, and the first letter of the <b>SurName</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Locality">
            <summary>
            Gets and sets the property Locality. 
            <para>
            The locality (such as a city or town) in which the certificate subject is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Organization">
            <summary>
            Gets and sets the property Organization. 
            <para>
            Legal name of the organization with which the certificate subject is affiliated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.OrganizationalUnit">
            <summary>
            Gets and sets the property OrganizationalUnit. 
            <para>
            A subdivision or unit of the organization (such as sales or finance) with which the
            certificate subject is affiliated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Pseudonym">
            <summary>
            Gets and sets the property Pseudonym. 
            <para>
            Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan
            is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.SerialNumber">
            <summary>
            Gets and sets the property SerialNumber. 
            <para>
            The certificate serial number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.State">
            <summary>
            Gets and sets the property State. 
            <para>
            State in which the subject of the certificate is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Surname">
            <summary>
            Gets and sets the property Surname. 
            <para>
            Family name. In the US and the UK, for example, the surname of an individual is ordered
            last. In Asian cultures the surname is typically ordered first.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ASN1Subject.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the
            certificate subject.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CertificateAuthority">
            <summary>
            Contains information about your private certificate authority (CA). Your private CA
            can issue and revoke X.509 digital certificates. Digital certificates verify that
            the entity named in the certificate <b>Subject</b> field owns or controls the public
            key contained in the <b>Subject Public Key Info</b> field. Call the <a>CreateCertificateAuthority</a>
            action to create your private CA. You must then call the <a>GetCertificateAuthorityCertificate</a>
            action to retrieve a private CA certificate signing request (CSR). Sign the CSR with
            your ACM Private CA-hosted or on-premises root or subordinate CA certificate. Call
            the <a>ImportCertificateAuthorityCertificate</a> action to import the signed certificate
            into AWS Certificate Manager (ACM).
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Amazon Resource Name (ARN) for your private certificate authority (CA). The format
            is <code> <i>12345678-1234-1234-1234-123456789012</i> </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.CertificateAuthorityConfiguration">
            <summary>
            Gets and sets the property CertificateAuthorityConfiguration. 
            <para>
            Your private CA configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            Date and time at which your private CA was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            Reason the request to create your private CA failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.LastStateChangeAt">
            <summary>
            Gets and sets the property LastStateChangeAt. 
            <para>
            Date and time at which your private CA was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            Date and time after which your private CA certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            Date and time before which your private CA certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.RestorableUntil">
            <summary>
            Gets and sets the property RestorableUntil. 
            <para>
            The period during which a deleted CA can be restored. For more information, see the
            <code>PermanentDeletionTimeInDays</code> parameter of the <a>DeleteCertificateAuthorityRequest</a>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.RevocationConfiguration">
            <summary>
            Gets and sets the property RevocationConfiguration. 
            <para>
            Information about the certificate revocation list (CRL) created and maintained by
            your private CA. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.Serial">
            <summary>
            Gets and sets the property Serial. 
            <para>
            Serial number of your private CA.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of your private CA.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthority.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of your private CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CertificateAuthorityConfiguration">
            <summary>
            Contains configuration information for your private certificate authority (CA). This
            includes information about the class of public key algorithm and the key pair that
            your private CA creates when it issues a certificate. It also includes the signature
            algorithm that it uses when issuing certificates, and its X.500 distinguished name.
            You must specify this information when you call the <a>CreateCertificateAuthority</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthorityConfiguration.KeyAlgorithm">
            <summary>
            Gets and sets the property KeyAlgorithm. 
            <para>
            Type of the public key algorithm and size, in bits, of the key pair that your CA creates
            when it issues a certificate. When you create a subordinate CA, you must use a key
            algorithm supported by the parent CA.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthorityConfiguration.SigningAlgorithm">
            <summary>
            Gets and sets the property SigningAlgorithm. 
            <para>
            Name of the algorithm your private CA uses to sign certificate requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CertificateAuthorityConfiguration.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            Structure that contains X.500 distinguished name information for your private CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CertificateMismatchException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.CertificateMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new CertificateMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.CertificateMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CertificateMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.CertificateMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of CertificateMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.CertificateMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.CertificateMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest">
            <summary>
            Container for the parameters to the CreateCertificateAuthorityAuditReport operation.
            Creates an audit report that lists every time that your CA private key is used. The
            report is saved in the Amazon S3 bucket that you specify on input. The <a>IssueCertificate</a>
            and <a>RevokeCertificate</a> actions use the private key.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest.AuditReportResponseFormat">
            <summary>
            Gets and sets the property AuditReportResponseFormat. 
            <para>
            The format in which to create the report. This can be either <b>JSON</b> or <b>CSV</b>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of the CA to be audited. This is of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            The name of the S3 bucket that will contain the audit report.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportResponse">
            <summary>
            This is the response object from the CreateCertificateAuthorityAuditReport operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportResponse.AuditReportId">
            <summary>
            Gets and sets the property AuditReportId. 
            <para>
            An alphanumeric string that contains a report identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportResponse.S3Key">
            <summary>
            Gets and sets the property S3Key. 
            <para>
            The <b>key</b> that uniquely identifies the report file in your S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the CreateCertificateAuthority operation.
            Creates a root or subordinate private certificate authority (CA). You must specify
            the CA configuration, the certificate revocation list (CRL) configuration, the CA
            type, and an optional idempotency token to avoid accidental creation of multiple CAs.
            The CA configuration specifies the name of the algorithm and key size to be used to
            create the CA private key, the type of signing algorithm that the CA uses, and X.500
            subject information. The CRL configuration specifies the CRL expiration period in
            days (the validity period of the CRL), the Amazon S3 bucket that will contain the
            CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by
            the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest.CertificateAuthorityConfiguration">
            <summary>
            Gets and sets the property CertificateAuthorityConfiguration. 
            <para>
            Name and bit size of the private key algorithm, the name of the signing algorithm,
            and X.500 certificate subject information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest.CertificateAuthorityType">
            <summary>
            Gets and sets the property CertificateAuthorityType. 
            <para>
            The type of the certificate authority.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest.IdempotencyToken">
            <summary>
            Gets and sets the property IdempotencyToken. 
            <para>
            Alphanumeric string that can be used to distinguish between calls to <b>CreateCertificateAuthority</b>.
            Idempotency tokens time out after five minutes. Therefore, if you call <b>CreateCertificateAuthority</b>
            multiple times with the same idempotency token within a five minute period, ACM Private
            CA recognizes that you are requesting only one certificate. As a result, ACM Private
            CA issues only one. If you change the idempotency token for each call, however, ACM
            Private CA recognizes that you are requesting multiple certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest.RevocationConfiguration">
            <summary>
            Gets and sets the property RevocationConfiguration. 
            <para>
            Contains a Boolean value that you can use to enable a certification revocation list
            (CRL) for the CA, the name of the S3 bucket to which ACM Private CA will write the
            CRL, and an optional CNAME alias that you can use to hide the name of your bucket
            in the <b>CRL Distribution Points</b> extension of your CA certificate. For more information,
            see the <a>CrlConfiguration</a> structure. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Key-value pairs that will be attached to the new private CA. You can associate up
            to 50 tags with a private CA. For information using tags with 
            </para>
             
            <para>
            IAM to manage permissions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling
            Access Using IAM Tags</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreateCertificateAuthorityResponse">
            <summary>
            This is the response object from the CreateCertificateAuthority operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreateCertificateAuthorityResponse.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            If successful, the Amazon Resource Name (ARN) of the certificate authority (CA). This
            is of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreatePermissionRequest">
            <summary>
            Container for the parameters to the CreatePermission operation.
            Assigns permissions from a private CA to a designated AWS service. Services are specified
            by their service principals and can be given permission to create and retrieve certificates
            on a private CA. Services can also be given permission to list the active permissions
            that the private CA has granted. For ACM to automatically renew your private CA's
            certificates, you must assign all possible permissions from the CA to the ACM service
            principal.
            
             
            <para>
            At this time, you can only assign permissions to ACM (<code>acm.amazonaws.com</code>).
            Permissions can be revoked with the <a>DeletePermission</a> action and listed with
            the <a>ListPermissions</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreatePermissionRequest.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The actions that the specified AWS service principal can use. These include <code>IssueCertificate</code>,
            <code>GetCertificate</code>, and <code>ListPermissions</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreatePermissionRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of the CA that grants the permissions. You can find
            the ARN by calling the <a>ListCertificateAuthorities</a> action. This must have the
            following form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreatePermissionRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS service or identity that receives the permission. At this time, the only valid
            principal is <code>acm.amazonaws.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CreatePermissionRequest.SourceAccount">
            <summary>
            Gets and sets the property SourceAccount. 
            <para>
            The ID of the calling account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CreatePermissionResponse">
            <summary>
            This is the response object from the CreatePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.CrlConfiguration">
            <summary>
            Contains configuration information for a certificate revocation list (CRL). Your private
            certificate authority (CA) creates base CRLs. Delta CRLs are not supported. You can
            enable CRLs for your new or an existing private CA by setting the <b>Enabled</b> parameter
            to <code>true</code>. Your private CA writes CRLs to an S3 bucket that you specify
            in the <b>S3BucketName</b> parameter. You can hide the name of your bucket by specifying
            a value for the <b>CustomCname</b> parameter. Your private CA copies the CNAME or
            the S3 bucket name to the <b>CRL Distribution Points</b> extension of each certificate
            it issues. Your S3 bucket policy must give write permission to ACM Private CA. 
            
             
            <para>
            Your private CA uses the value in the <b>ExpirationInDays</b> parameter to calculate
            the <b>nextUpdate</b> field in the CRL. The CRL is refreshed at 1/2 the age of next
            update or when a certificate is revoked. When a certificate is revoked, it is recorded
            in the next CRL that is generated and in the next audit report. Only time valid certificates
            are listed in the CRL. Expired certificates are not included. 
            </para>
             
            <para>
            CRLs contain the following fields:
            </para>
             <ul> <li> 
            <para>
             <b>Version</b>: The current version number defined in RFC 5280 is V2. The integer
            value is 0x1. 
            </para>
             </li> <li> 
            <para>
             <b>Signature Algorithm</b>: The name of the algorithm used to sign the CRL.
            </para>
             </li> <li> 
            <para>
             <b>Issuer</b>: The X.500 distinguished name of your private CA that issued the CRL.
            </para>
             </li> <li> 
            <para>
             <b>Last Update</b>: The issue date and time of this CRL.
            </para>
             </li> <li> 
            <para>
             <b>Next Update</b>: The day and time by which the next CRL will be issued.
            </para>
             </li> <li> 
            <para>
             <b>Revoked Certificates</b>: List of revoked certificates. Each list item contains
            the following information.
            </para>
             <ul> <li> 
            <para>
             <b>Serial Number</b>: The serial number, in hexadecimal format, of the revoked certificate.
            </para>
             </li> <li> 
            <para>
             <b>Revocation Date</b>: Date and time the certificate was revoked.
            </para>
             </li> <li> 
            <para>
             <b>CRL Entry Extensions</b>: Optional extensions for the CRL entry.
            </para>
             <ul> <li> 
            <para>
             <b>X509v3 CRL Reason Code</b>: Reason the certificate was revoked.
            </para>
             </li> </ul> </li> </ul> </li> <li> 
            <para>
             <b>CRL Extensions</b>: Optional extensions for the CRL.
            </para>
             <ul> <li> 
            <para>
             <b>X509v3 Authority Key Identifier</b>: Identifies the public key associated with
            the private key used to sign the certificate.
            </para>
             </li> <li> 
            <para>
             <b>X509v3 CRL Number:</b>: Decimal sequence number for the CRL.
            </para>
             </li> </ul> </li> <li> 
            <para>
             <b>Signature Algorithm</b>: Algorithm used by your private CA to sign the CRL.
            </para>
             </li> <li> 
            <para>
             <b>Signature Value</b>: Signature computed over the CRL.
            </para>
             </li> </ul> 
            <para>
            Certificate revocation lists created by ACM Private CA are DER-encoded. You can use
            the following OpenSSL command to list a CRL.
            </para>
             
            <para>
             <code>openssl crl -inform DER -text -in <i>crl_path</i> -noout</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CrlConfiguration.CustomCname">
            <summary>
            Gets and sets the property CustomCname. 
            <para>
            Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables
            the use of an alias for the CRL distribution point. Use this value if you don't want
            the name of your S3 bucket to be public.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CrlConfiguration.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.
            You can use this value to enable certificate revocation for a new CA when you call
            the <a>CreateCertificateAuthority</a> action or for an existing CA when you call the
            <a>UpdateCertificateAuthority</a> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CrlConfiguration.ExpirationInDays">
            <summary>
            Gets and sets the property ExpirationInDays. 
            <para>
            Number of days until a certificate expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.CrlConfiguration.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            Name of the S3 bucket that contains the CRL. If you do not provide a value for the
            <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL
            Distribution Points</b> extension of the issued certificate. You can change the name
            of your bucket by calling the <a>UpdateCertificateAuthority</a> action. You must specify
            a bucket policy that allows ACM Private CA to write the CRL to your bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the DeleteCertificateAuthority operation.
            Deletes a private certificate authority (CA). You must provide the Amazon Resource
            Name (ARN) of the private CA that you want to delete. You can find the ARN by calling
            the <a>ListCertificateAuthorities</a> action. 
            
             <note> 
            <para>
            Deleting a CA will invalidate other CAs and certificates below it in your CA hierarchy.
            </para>
             </note> 
            <para>
            Before you can delete a CA that you have created and activated, you must disable it.
            To do this, call the <a>UpdateCertificateAuthority</a> action and set the <b>CertificateAuthorityStatus</b>
            parameter to <code>DISABLED</code>. 
            </para>
             
            <para>
            Additionally, you can delete a CA if you are waiting for it to be created (that is,
            the status of the CA is <code>CREATING</code>). You can also delete it if the CA has
            been created but you haven't yet imported the signed certificate into ACM Private
            CA (that is, the status of the CA is <code>PENDING_CERTIFICATE</code>). 
            </para>
             
            <para>
            When you successfully call <a>DeleteCertificateAuthority</a>, the CA's status changes
            to <code>DELETED</code>. However, the CA won't be permanently deleted until the restoration
            period has passed. By default, if you do not set the <code>PermanentDeletionTimeInDays</code>
            parameter, the CA remains restorable for 30 days. You can set the parameter from 7
            to 30 days. The <a>DescribeCertificateAuthority</a> action returns the time remaining
            in the restoration window of a private CA in the <code>DELETED</code> state. To restore
            an eligible CA, call the <a>RestoreCertificateAuthority</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must have the following form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest.PermanentDeletionTimeInDays">
            <summary>
            Gets and sets the property PermanentDeletionTimeInDays. 
            <para>
            The number of days to make a CA restorable after it has been deleted. This can be
            anywhere from 7 to 30 days, with 30 being the default.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DeleteCertificateAuthorityResponse">
            <summary>
            This is the response object from the DeleteCertificateAuthority operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DeletePermissionRequest">
            <summary>
            Container for the parameters to the DeletePermission operation.
            Revokes permissions that a private CA assigned to a designated AWS service. Permissions
            can be created with the <a>CreatePermission</a> action and listed with the <a>ListPermissions</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DeletePermissionRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Number (ARN) of the private CA that issued the permissions. You
            can find the CA's ARN by calling the <a>ListCertificateAuthorities</a> action. This
            must have the following form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DeletePermissionRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS service or identity that will have its CA permissions revoked. At this time,
            the only valid service principal is <code>acm.amazonaws.com</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DeletePermissionRequest.SourceAccount">
            <summary>
            Gets and sets the property SourceAccount. 
            <para>
            The AWS account that calls this action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DeletePermissionResponse">
            <summary>
            This is the response object from the DeletePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest">
            <summary>
            Container for the parameters to the DescribeCertificateAuthorityAuditReport operation.
            Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a>
            action. Audit information is created every time the certificate authority (CA) private
            key is used. The private key is used when you call the <a>IssueCertificate</a> action
            or the <a>RevokeCertificate</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest.AuditReportId">
            <summary>
            Gets and sets the property AuditReportId. 
            <para>
            The report ID returned by calling the <a>CreateCertificateAuthorityAuditReport</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of the private CA. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse">
            <summary>
            This is the response object from the DescribeCertificateAuthorityAuditReport operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse.AuditReportStatus">
            <summary>
            Gets and sets the property AuditReportStatus. 
            <para>
            Specifies whether report creation is in progress, has succeeded, or has failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time at which the report was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            Name of the S3 bucket that contains the report.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse.S3Key">
            <summary>
            Gets and sets the property S3Key. 
            <para>
            S3 <b>key</b> that uniquely identifies the report file in your S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DescribeCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the DescribeCertificateAuthority operation.
            Lists information about your private certificate authority (CA). You specify the private
            CA on input by its ARN (Amazon Resource Name). The output contains the status of your
            CA. This can be any of the following: 
            
             <ul> <li> 
            <para>
             <code>CREATING</code> - ACM Private CA is creating your private certificate authority.
            </para>
             </li> <li> 
            <para>
             <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your
            ACM Private CA-hosted or on-premises root or subordinate CA to sign your private CA
            CSR and then import it into PCA. 
            </para>
             </li> <li> 
            <para>
             <code>ACTIVE</code> - Your private CA is active.
            </para>
             </li> <li> 
            <para>
             <code>DISABLED</code> - Your private CA has been disabled.
            </para>
             </li> <li> 
            <para>
             <code>EXPIRED</code> - Your private CA certificate has expired.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems
            such a network outage or backend AWS failure or other errors. A failed CA can never
            return to the pending state. You must create a new CA. 
            </para>
             </li> <li> 
            <para>
             <code>DELETED</code> - Your private CA is within the restoration period, after which
            it is permanently deleted. The length of time remaining in the CA's restoration period
            is also included in this action's output.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.DescribeCertificateAuthorityResponse">
            <summary>
            This is the response object from the DescribeCertificateAuthority operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.DescribeCertificateAuthorityResponse.CertificateAuthority">
            <summary>
            Gets and sets the property CertificateAuthority. 
            <para>
            A <a>CertificateAuthority</a> structure that contains information about your private
            CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateRequest">
            <summary>
            Container for the parameters to the GetCertificateAuthorityCertificate operation.
            Retrieves the certificate and certificate chain for your private certificate authority
            (CA). Both the certificate and the chain are base64 PEM-encoded. The chain does not
            include the CA certificate. Each certificate in the chain signs the one before it.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of your private CA. This is of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateResponse">
            <summary>
            This is the response object from the GetCertificateAuthorityCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            Base64-encoded certificate authority (CA) certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateResponse.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            Base64-encoded certificate chain that includes any intermediate certificates and chains
            up to root on-premises certificate that you used to sign your private CA certificate.
            The chain does not include your private CA certificate. If this is a root CA, the
            value will be null.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateAuthorityCsrRequest">
            <summary>
            Container for the parameters to the GetCertificateAuthorityCsr operation.
            Retrieves the certificate signing request (CSR) for your private certificate authority
            (CA). The CSR is created when you call the <a>CreateCertificateAuthority</a> action.
            Sign the CSR with your ACM Private CA-hosted or on-premises root or subordinate CA.
            Then import the signed certificate back into ACM Private CA by calling the <a>ImportCertificateAuthorityCertificate</a>
            action. The CSR is returned as a base64 PEM-encoded string.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateAuthorityCsrRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a>
            action. This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateAuthorityCsrResponse">
            <summary>
            This is the response object from the GetCertificateAuthorityCsr operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateAuthorityCsrResponse.Csr">
            <summary>
            Gets and sets the property Csr. 
            <para>
            The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateRequest">
            <summary>
            Container for the parameters to the GetCertificate operation.
            Retrieves a certificate from your private CA. The ARN of the certificate is returned
            when you call the <a>IssueCertificate</a> action. You must specify both the ARN of
            your private CA and the ARN of the issued certificate when calling the <b>GetCertificate</b>
            action. You can retrieve the certificate if it is in the <b>ISSUED</b> state. You
            can call the <a>CreateCertificateAuthorityAuditReport</a> action to create a report
            that contains information about all of the certificates issued and revoked by your
            private CA.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The ARN of the issued certificate. The ARN contains the certificate serial number
            and must be in the following form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.GetCertificateResponse">
            <summary>
            This is the response object from the GetCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The base64 PEM-encoded certificate specified by the <code>CertificateArn</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.GetCertificateResponse.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The base64 PEM-encoded certificate chain that chains up to the on-premises root CA
            certificate that you used to sign your private CA certificate. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest">
            <summary>
            Container for the parameters to the ImportCertificateAuthorityCertificate operation.
            Imports a signed private CA certificate into ACM Private CA. This action is used when
            you are using a chain of trust whose root is located outside ACM Private CA. Before
            you can call this action, the following preparations must in place:
            
             <ol> <li> 
            <para>
            In ACM Private CA, call the <a>CreateCertificateAuthority</a> action to create the
            private CA that that you plan to back with the imported certificate.
            </para>
             </li> <li> 
            <para>
            Call the <a>GetCertificateAuthorityCsr</a> action to generate a certificate signing
            request (CSR).
            </para>
             </li> <li> 
            <para>
            Sign the CSR using a root or intermediate CA hosted either by an on-premises PKI hierarchy
            or a commercial CA..
            </para>
             </li> <li> 
            <para>
            Create a certificate chain and copy the signed certificate and the certificate chain
            to your working directory.
            </para>
             </li> </ol> 
            <para>
            The following requirements apply when you import a CA certificate.
            </para>
             <ul> <li> 
            <para>
            You cannot import a non-self-signed certificate for use as a root CA.
            </para>
             </li> <li> 
            <para>
            You cannot import a self-signed certificate for use as a subordinate CA.
            </para>
             </li> <li> 
            <para>
            Your certificate chain must not include the private CA certificate that you are importing.
            </para>
             </li> <li> 
            <para>
            Your ACM Private CA-hosted or on-premises CA certificate must be the last certificate
            in your chain. The subordinate certificate, if any, that your root CA signed must
            be next to last. The subordinate certificate signed by the preceding subordinate CA
            must come next, and so on until your chain is built. 
            </para>
             </li> <li> 
            <para>
            The chain must be PEM-encoded.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The PEM-encoded certificate for a private CA. This may be a self-signed certificate
            in the case of a root CA, or it may be signed by another CA that you control.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            A PEM-encoded file that contains all of your certificates, other than the certificate
            you're importing, chaining up to your root CA. Your ACM Private CA-hosted or on-premises
            root certificate is the last in the chain, and each certificate in the chain signs
            the one preceding. 
            </para>
             
            <para>
            This parameter must be supplied when you import a subordinate CA. When you import
            a root CA, there is no chain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateResponse">
            <summary>
            This is the response object from the ImportCertificateAuthorityCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectMarshaller">
            <summary>
            ASN1Subject Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectMarshaller.Marshall(Amazon.ACMPCA.Model.ASN1Subject,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectUnmarshaller">
            <summary>
            Response Unmarshaller for ASN1Subject Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#ASN1Subject,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ASN1SubjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationMarshaller">
            <summary>
            CertificateAuthorityConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationMarshaller.Marshall(Amazon.ACMPCA.Model.CertificateAuthorityConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateAuthorityConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#CertificateAuthorityConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateAuthority Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#CertificateAuthority,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CertificateAuthorityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportRequestMarshaller">
            <summary>
            CreateCertificateAuthorityAuditReport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportRequestMarshaller.Marshall(Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCertificateAuthorityAuditReport operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityAuditReportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityRequestMarshaller">
            <summary>
            CreateCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreateCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionRequestMarshaller">
            <summary>
            CreatePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionRequestMarshaller.Marshall(Amazon.ACMPCA.Model.CreatePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CreatePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationMarshaller">
            <summary>
            CrlConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationMarshaller.Marshall(Amazon.ACMPCA.Model.CrlConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for CrlConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#CrlConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.CrlConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityRequestMarshaller">
            <summary>
            DeleteCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeleteCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionRequestMarshaller">
            <summary>
            DeletePermission Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionRequestMarshaller.Marshall(Amazon.ACMPCA.Model.DeletePermissionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePermission operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DeletePermissionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportRequestMarshaller">
            <summary>
            DescribeCertificateAuthorityAuditReport Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportRequestMarshaller.Marshall(Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificateAuthorityAuditReport operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityAuditReportResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityRequestMarshaller">
            <summary>
            DescribeCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.DescribeCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.DescribeCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateRequestMarshaller">
            <summary>
            GetCertificateAuthorityCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateRequestMarshaller.Marshall(Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCertificateAuthorityCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrRequestMarshaller">
            <summary>
            GetCertificateAuthorityCsr Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrRequestMarshaller.Marshall(Amazon.ACMPCA.Model.GetCertificateAuthorityCsrRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCertificateAuthorityCsr operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateAuthorityCsrResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller">
            <summary>
            GetCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.ACMPCA.Model.GetCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateRequestMarshaller">
            <summary>
            ImportCertificateAuthorityCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateRequestMarshaller.Marshall(Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportCertificateAuthorityCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ImportCertificateAuthorityCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateRequestMarshaller">
            <summary>
            IssueCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateRequestMarshaller.Marshall(Amazon.ACMPCA.Model.IssueCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IssueCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.IssueCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesRequestMarshaller">
            <summary>
            ListCertificateAuthorities Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesRequestMarshaller.Marshall(Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCertificateAuthorities operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListCertificateAuthoritiesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller">
            <summary>
            ListPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.ACMPCA.Model.ListPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller">
            <summary>
            ListTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.ACMPCA.Model.ListTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.PermissionUnmarshaller">
            <summary>
            Response Unmarshaller for Permission Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#Permission,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.PermissionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityRequestMarshaller">
            <summary>
            RestoreCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.RestoreCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RestoreCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationMarshaller">
            <summary>
            RevocationConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationMarshaller.Marshall(Amazon.ACMPCA.Model.RevocationConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for RevocationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#RevocationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevocationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateRequestMarshaller">
            <summary>
            RevokeCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateRequestMarshaller.Marshall(Amazon.ACMPCA.Model.RevokeCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.RevokeCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityRequestMarshaller">
            <summary>
            TagCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.TagCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ACMPCA.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ACMPCA#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityRequestMarshaller">
            <summary>
            UntagCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UntagCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityRequestMarshaller">
            <summary>
            UpdateCertificateAuthority Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityRequestMarshaller.Marshall(Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCertificateAuthority operation
            </summary>  
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Internal.MarshallTransformations.UpdateCertificateAuthorityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ValidityMarshaller">
            <summary>
            Validity Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ValidityMarshaller.Marshall(Amazon.ACMPCA.Model.Validity,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ACMPCA.Model.Internal.MarshallTransformations.ValidityMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidArgsException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArgsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArgsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArgsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArgsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArgsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidArnException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidNextTokenException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidPolicyException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidRequestException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidStateException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.InvalidTagException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidTagException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidTagException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidTagException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidTagException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.InvalidTagException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.IssueCertificateRequest">
            <summary>
            Container for the parameters to the IssueCertificate operation.
            Uses your private certificate authority (CA) to issue a client certificate. This action
            returns the Amazon Resource Name (ARN) of the certificate. You can retrieve the certificate
            by calling the <a>GetCertificate</a> action and specifying the ARN. 
            
             <note> 
            <para>
            You cannot use the ACM <b>ListCertificateAuthorities</b> action to retrieve the ARNs
            of the certificates that you issue by using ACM Private CA.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.Csr">
            <summary>
            Gets and sets the property Csr. 
            <para>
            The certificate signing request (CSR) for the certificate you want to issue. You can
            use the following OpenSSL command to create the CSR and a 2048 bit RSA private key.
            
            </para>
             
            <para>
             <code>openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem
            -out csr/test_cert_.csr</code> 
            </para>
             
            <para>
            If you have a configuration file, you can use the following OpenSSL command. The <code>usr_cert</code>
            block in the configuration file contains your X509 version 3 extensions. 
            </para>
             
            <para>
             <code>openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048
            -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.IdempotencyToken">
            <summary>
            Gets and sets the property IdempotencyToken. 
            <para>
            Custom string that can be used to distinguish between calls to the <b>IssueCertificate</b>
            action. Idempotency tokens time out after one hour. Therefore, if you call <b>IssueCertificate</b>
            multiple times with the same idempotency token within 5 minutes, ACM Private CA recognizes
            that you are requesting only one certificate and will issue only one. If you change
            the idempotency token for each call, PCA recognizes that you are requesting multiple
            certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.SigningAlgorithm">
            <summary>
            Gets and sets the property SigningAlgorithm. 
            <para>
            The name of the algorithm that will be used to sign the certificate to be issued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.TemplateArn">
            <summary>
            Gets and sets the property TemplateArn. 
            <para>
            Specifies a custom configuration template to use when issuing a certificate. If this
            parameter is not provided, ACM Private CA defaults to the <code>EndEntityCertificate/V1</code>
            template.
            </para>
             
            <para>
            The following service-owned <code>TemplateArn</code> values are supported by ACM Private
            CA: 
            </para>
             <ul> <li> 
            <para>
            arn:aws:acm-pca:::template/EndEntityCertificate/V1
            </para>
             </li> <li> 
            <para>
            arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen0/V1
            </para>
             </li> <li> 
            <para>
            arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen1/V1
            </para>
             </li> <li> 
            <para>
            arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen2/V1
            </para>
             </li> <li> 
            <para>
            arn:aws:acm-pca:::template/SubordinateCACertificate_PathLen3/V1
            </para>
             </li> <li> 
            <para>
            arn:aws:acm-pca:::template/RootCACertificate/V1
            </para>
             </li> </ul> 
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html">Using
            Templates</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateRequest.Validity">
            <summary>
            Gets and sets the property Validity. 
            <para>
            The type of the validity period.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.IssueCertificateResponse">
            <summary>
            This is the response object from the IssueCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.IssueCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the issued certificate and the certificate serial
            number. This is of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.LimitExceededException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest">
            <summary>
            Container for the parameters to the ListCertificateAuthorities operation.
            Lists the private certificate authorities that you created by using the <a>CreateCertificateAuthority</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Use this parameter when paginating results to specify the maximum number of items
            to return in the response on each page. If additional items exist beyond the number
            you specify, the <code>NextToken</code> element is sent in the response. Use this
            <code>NextToken</code> value in a subsequent request to retrieve additional items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter when paginating results in a subsequent request after you receive
            a response with truncated results. Set it to the value of the <code>NextToken</code>
            parameter from the response you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListCertificateAuthoritiesResponse">
            <summary>
            This is the response object from the ListCertificateAuthorities operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListCertificateAuthoritiesResponse.CertificateAuthorities">
            <summary>
            Gets and sets the property CertificateAuthorities. 
            <para>
            Summary information about each certificate authority you have created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListCertificateAuthoritiesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When the list is truncated, this value is present and should be used for the <code>NextToken</code>
            parameter in a subsequent pagination request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListPermissionsRequest">
            <summary>
            Container for the parameters to the ListPermissions operation.
            Lists all the permissions, if any, that have been assigned by a private CA. Permissions
            can be granted with the <a>CreatePermission</a> action and revoked with the <a>DeletePermission</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListPermissionsRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Number (ARN) of the private CA to inspect. You can find the ARN
            by calling the <a>ListCertificateAuthorities</a> action. This must be of the form:
            <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code>
            You can get a private CA's ARN by running the <a>ListCertificateAuthorities</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListPermissionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            When paginating results, use this parameter to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value
            in a subsequent request to retrieve additional items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListPermissionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When paginating results, use this parameter in a subsequent request after you receive
            a response with truncated results. Set it to the value of <b>NextToken</b> from the
            response you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListPermissionsResponse">
            <summary>
            This is the response object from the ListPermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListPermissionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When the list is truncated, this value is present and should be used for the <b>NextToken</b>
            parameter in a subsequent pagination request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListPermissionsResponse.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            Summary information about each permission assigned by the specified private CA, including
            the action enabled, the policy provided, and the time of creation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListTagsRequest">
            <summary>
            Container for the parameters to the ListTags operation.
            Lists the tags, if any, that are associated with your private CA. Tags are labels
            that you can use to identify and organize your CAs. Each tag consists of a key and
            an optional value. Call the <a>TagCertificateAuthority</a> action to add one or more
            tags to your CA. Call the <a>UntagCertificateAuthority</a> action to remove tags.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListTagsRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a>
            action. This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Use this parameter when paginating results to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value
            in a subsequent request to retrieve additional items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter when paginating results in a subsequent request after you receive
            a response with truncated results. Set it to the value of <b>NextToken</b> from the
            response you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ListTagsResponse">
            <summary>
            This is the response object from the ListTags operation.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When the list is truncated, this value is present and should be used for the <b>NextToken</b>
            parameter in a subsequent pagination request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.ListTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags associated with your private CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.MalformedCertificateException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCertificateException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedCertificateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCertificateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedCertificateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCertificateException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedCertificateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCertificateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedCertificateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCertificateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedCertificateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.MalformedCSRException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCSRException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedCSRException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCSRException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedCSRException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCSRException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedCSRException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCSRException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedCSRException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.MalformedCSRException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedCSRException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.Permission">
            <summary>
            Permissions designate which private CA actions can be performed by an AWS service
            or entity. In order for ACM to automatically renew private certificates, you must
            give the ACM service principal all available permissions (<code>IssueCertificate</code>,
            <code>GetCertificate</code>, and <code>ListPermissions</code>). Permissions can be
            assigned with the <a>CreatePermission</a> action, removed with the <a>DeletePermission</a>
            action, and listed with the <a>ListPermissions</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The private CA actions that can be performed by the designated AWS service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Number (ARN) of the private CA from which the permission was issued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the permission was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The name of the policy that is associated with the permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The AWS service or entity that holds the permission. At this time, the only valid
            principal is <code>acm.amazonaws.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Permission.SourceAccount">
            <summary>
            Gets and sets the property SourceAccount. 
            <para>
            The ID of the account that assigned the permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.PermissionAlreadyExistsException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.PermissionAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new PermissionAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.PermissionAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PermissionAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.PermissionAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of PermissionAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.PermissionAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PermissionAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.PermissionAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PermissionAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RequestAlreadyProcessedException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestAlreadyProcessedException.#ctor(System.String)">
            <summary>
            Constructs a new RequestAlreadyProcessedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestAlreadyProcessedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestAlreadyProcessedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestAlreadyProcessedException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestAlreadyProcessedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestAlreadyProcessedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestAlreadyProcessedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestAlreadyProcessedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestAlreadyProcessedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RequestFailedException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestFailedException.#ctor(System.String)">
            <summary>
            Constructs a new RequestFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RequestInProgressException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new RequestInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.RequestInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RestoreCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the RestoreCertificateAuthority operation.
            Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You
            can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b>
            parameter of the <a>DeleteCertificateAuthority</a> action. Currently, you can specify
            7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by
            default you can restore the CA at any time in a 30 day period. You can check the time
            remaining in the restoration period of a private CA in the <code>DELETED</code> state
            by calling the <a>DescribeCertificateAuthority</a> or <a>ListCertificateAuthorities</a>
            actions. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b>
            action returns. To change its status to <code>ACTIVE</code>, call the <a>UpdateCertificateAuthority</a>
            action. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion,
            you must use the <a>ImportCertificateAuthorityCertificate</a> action to import a certificate
            authority into the private CA before it can be activated. You cannot restore a CA
            after the restoration period has ended.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.RestoreCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called the <a>CreateCertificateAuthority</a>
            action. This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RestoreCertificateAuthorityResponse">
            <summary>
            This is the response object from the RestoreCertificateAuthority operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RevocationConfiguration">
            <summary>
            Certificate revocation information used by the <a>CreateCertificateAuthority</a> and
            <a>UpdateCertificateAuthority</a> actions. Your private certificate authority (CA)
            can create and maintain a certificate revocation list (CRL). A CRL contains information
            about certificates revoked by your CA. For more information, see <a>RevokeCertificate</a>.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.RevocationConfiguration.CrlConfiguration">
            <summary>
            Gets and sets the property CrlConfiguration. 
            <para>
            Configuration of the certificate revocation list (CRL), if any, maintained by your
            private CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RevokeCertificateRequest">
            <summary>
            Container for the parameters to the RevokeCertificate operation.
            Revokes a certificate that was issued inside ACM Private CA. If you enable a certificate
            revocation list (CRL) when you create or update your private CA, information about
            the revoked certificates will be included in the CRL. ACM Private CA writes the CRL
            to an S3 bucket that you specify. For more information about revocation, see the <a>CrlConfiguration</a>
            structure. ACM Private CA also writes revocation information to the audit report.
            For more information, see <a>CreateCertificateAuthorityAuditReport</a>. 
            
             <note> 
            <para>
            You cannot revoke a root CA self-signed certificate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.RevokeCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked.
            This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.RevokeCertificateRequest.CertificateSerial">
            <summary>
            Gets and sets the property CertificateSerial. 
            <para>
            Serial number of the certificate to be revoked. This must be in hexadecimal format.
            You can retrieve the serial number by calling <a>GetCertificate</a> with the Amazon
            Resource Name (ARN) of the certificate you want and the ARN of your private CA. The
            <b>GetCertificate</b> action retrieves the certificate in the PEM format. You can
            use the following OpenSSL command to list the certificate in text format and copy
            the hexadecimal serial number. 
            </para>
             
            <para>
             <code>openssl x509 -in <i>file_path</i> -text -noout</code> 
            </para>
             
            <para>
            You can also copy the serial number from the console or use the <a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html">DescribeCertificate</a>
            action in the <i>AWS Certificate Manager API Reference</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.RevokeCertificateRequest.RevocationReason">
            <summary>
            Gets and sets the property RevocationReason. 
            <para>
            Specifies why you revoked the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.RevokeCertificateResponse">
            <summary>
            This is the response object from the RevokeCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.Tag">
            <summary>
            Tags are labels that you can use to identify and organize your private CAs. Each tag
            consists of a key and an optional value. You can associate up to 50 tags with a private
            CA. To add one or more tags to a private CA, call the <a>TagCertificateAuthority</a>
            action. To remove a tag, call the <a>UntagCertificateAuthority</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Key (name) of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.TagCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the TagCertificateAuthority operation.
            Adds one or more tags to your private CA. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            You specify the private CA on input by its Amazon Resource Name (ARN). You specify
            the tag by using a key-value pair. You can apply a tag to just one private CA if you
            want to identify a specific characteristic of that CA, or you can apply the same tag
            to multiple private CAs if you want to filter for a common relationship among those
            CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> action.
            Call the <a>ListTags</a> action to see what tags are associated with your CA.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.TagCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.TagCertificateAuthorityRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            List of tags to be associated with the CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.TagCertificateAuthorityResponse">
            <summary>
            This is the response object from the TagCertificateAuthority operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.TooManyTagsException">
            <summary>
             ACMPCA exception
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ACMPCA.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the UntagCertificateAuthority operation.
            Remove one or more tags from your private CA. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this action, the tag
            will be removed regardless of value. If you specify a value, the tag is removed only
            if it is associated with the specified value. To add tags to a private CA, use the
            <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> action to see what tags are
            associated with your CA.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) that was returned when you called <a>CreateCertificateAuthority</a>.
            This must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            List of tags to be removed from the CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.UntagCertificateAuthorityResponse">
            <summary>
            This is the response object from the UntagCertificateAuthority operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest">
            <summary>
            Container for the parameters to the UpdateCertificateAuthority operation.
            Updates the status or configuration of a private certificate authority (CA). Your
            private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before
            you can update it. You can disable a private CA that is in the <code>ACTIVE</code>
            state or make a CA that is in the <code>DISABLED</code> state active again.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked.
            This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest.RevocationConfiguration">
            <summary>
            Gets and sets the property RevocationConfiguration. 
            <para>
            Revocation information for your private CA.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of your private CA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.UpdateCertificateAuthorityResponse">
            <summary>
            This is the response object from the UpdateCertificateAuthority operation.
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.Model.Validity">
            <summary>
            Length of time for which the certificate issued by your private certificate authority
            (CA), or by the private CA itself, is valid in days, months, or years. You can issue
            a certificate by calling the <a>IssueCertificate</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Validity.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Specifies whether the <code>Value</code> parameter represents days, months, or years.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.Model.Validity.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Time period.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ACMPCA.ActionType">
            <summary>
            Constants used for properties of type ActionType.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ActionType.GetCertificate">
            <summary>
            Constant GetCertificate for ActionType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ActionType.IssueCertificate">
            <summary>
            Constant IssueCertificate for ActionType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ActionType.ListPermissions">
            <summary>
            Constant ListPermissions for ActionType
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.ActionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.ActionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.ActionType.op_Implicit(System.String)~Amazon.ACMPCA.ActionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.AuditReportResponseFormat">
            <summary>
            Constants used for properties of type AuditReportResponseFormat.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.AuditReportResponseFormat.CSV">
            <summary>
            Constant CSV for AuditReportResponseFormat
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.AuditReportResponseFormat.JSON">
            <summary>
            Constant JSON for AuditReportResponseFormat
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportResponseFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportResponseFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportResponseFormat.op_Implicit(System.String)~Amazon.ACMPCA.AuditReportResponseFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.AuditReportStatus">
            <summary>
            Constants used for properties of type AuditReportStatus.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.AuditReportStatus.CREATING">
            <summary>
            Constant CREATING for AuditReportStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.AuditReportStatus.FAILED">
            <summary>
            Constant FAILED for AuditReportStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.AuditReportStatus.SUCCESS">
            <summary>
            Constant SUCCESS for AuditReportStatus
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.AuditReportStatus.op_Implicit(System.String)~Amazon.ACMPCA.AuditReportStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.CertificateAuthorityStatus">
            <summary>
            Constants used for properties of type CertificateAuthorityStatus.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.ACTIVE">
            <summary>
            Constant ACTIVE for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.CREATING">
            <summary>
            Constant CREATING for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.DELETED">
            <summary>
            Constant DELETED for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.DISABLED">
            <summary>
            Constant DISABLED for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.EXPIRED">
            <summary>
            Constant EXPIRED for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.FAILED">
            <summary>
            Constant FAILED for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityStatus.PENDING_CERTIFICATE">
            <summary>
            Constant PENDING_CERTIFICATE for CertificateAuthorityStatus
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityStatus.op_Implicit(System.String)~Amazon.ACMPCA.CertificateAuthorityStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.CertificateAuthorityType">
            <summary>
            Constants used for properties of type CertificateAuthorityType.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityType.ROOT">
            <summary>
            Constant ROOT for CertificateAuthorityType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.CertificateAuthorityType.SUBORDINATE">
            <summary>
            Constant SUBORDINATE for CertificateAuthorityType
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.CertificateAuthorityType.op_Implicit(System.String)~Amazon.ACMPCA.CertificateAuthorityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.FailureReason">
            <summary>
            Constants used for properties of type FailureReason.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.FailureReason.OTHER">
            <summary>
            Constant OTHER for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.FailureReason.REQUEST_TIMED_OUT">
            <summary>
            Constant REQUEST_TIMED_OUT for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.FailureReason.UNSUPPORTED_ALGORITHM">
            <summary>
            Constant UNSUPPORTED_ALGORITHM for FailureReason
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.FailureReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.FailureReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.FailureReason.op_Implicit(System.String)~Amazon.ACMPCA.FailureReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.KeyAlgorithm">
            <summary>
            Constants used for properties of type KeyAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.KeyAlgorithm.EC_prime256v1">
            <summary>
            Constant EC_prime256v1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.KeyAlgorithm.EC_secp384r1">
            <summary>
            Constant EC_secp384r1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.KeyAlgorithm.RSA_2048">
            <summary>
            Constant RSA_2048 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.KeyAlgorithm.RSA_4096">
            <summary>
            Constant RSA_4096 for KeyAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.KeyAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.KeyAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.KeyAlgorithm.op_Implicit(System.String)~Amazon.ACMPCA.KeyAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.RevocationReason">
            <summary>
            Constants used for properties of type RevocationReason.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.A_A_COMPROMISE">
            <summary>
            Constant A_A_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.AFFILIATION_CHANGED">
            <summary>
            Constant AFFILIATION_CHANGED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.CERTIFICATE_AUTHORITY_COMPROMISE">
            <summary>
            Constant CERTIFICATE_AUTHORITY_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.CESSATION_OF_OPERATION">
            <summary>
            Constant CESSATION_OF_OPERATION for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.KEY_COMPROMISE">
            <summary>
            Constant KEY_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.PRIVILEGE_WITHDRAWN">
            <summary>
            Constant PRIVILEGE_WITHDRAWN for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.SUPERSEDED">
            <summary>
            Constant SUPERSEDED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.RevocationReason.UNSPECIFIED">
            <summary>
            Constant UNSPECIFIED for RevocationReason
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.RevocationReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.RevocationReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.RevocationReason.op_Implicit(System.String)~Amazon.ACMPCA.RevocationReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.SigningAlgorithm">
            <summary>
            Constants used for properties of type SigningAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA256WITHECDSA">
            <summary>
            Constant SHA256WITHECDSA for SigningAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA256WITHRSA">
            <summary>
            Constant SHA256WITHRSA for SigningAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA384WITHECDSA">
            <summary>
            Constant SHA384WITHECDSA for SigningAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA384WITHRSA">
            <summary>
            Constant SHA384WITHRSA for SigningAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA512WITHECDSA">
            <summary>
            Constant SHA512WITHECDSA for SigningAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.SigningAlgorithm.SHA512WITHRSA">
            <summary>
            Constant SHA512WITHRSA for SigningAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.SigningAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.SigningAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.SigningAlgorithm.op_Implicit(System.String)~Amazon.ACMPCA.SigningAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.ValidityPeriodType">
            <summary>
            Constants used for properties of type ValidityPeriodType.
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ValidityPeriodType.ABSOLUTE">
            <summary>
            Constant ABSOLUTE for ValidityPeriodType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ValidityPeriodType.DAYS">
            <summary>
            Constant DAYS for ValidityPeriodType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ValidityPeriodType.END_DATE">
            <summary>
            Constant END_DATE for ValidityPeriodType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ValidityPeriodType.MONTHS">
            <summary>
            Constant MONTHS for ValidityPeriodType
            </summary>
        </member>
        <member name="F:Amazon.ACMPCA.ValidityPeriodType.YEARS">
            <summary>
            Constant YEARS for ValidityPeriodType
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.ValidityPeriodType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.ValidityPeriodType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ACMPCA.ValidityPeriodType.op_Implicit(System.String)~Amazon.ACMPCA.ValidityPeriodType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ACMPCA.AmazonACMPCAClient">
             <summary>
             Implementation for accessing ACMPCA
            
             This is the <i>ACM Private CA API Reference</i>. It provides descriptions, syntax,
             and usage examples for each of the actions and data types involved in creating and
             managing private certificate authorities (CA) for your organization.
             
              
             <para>
             The documentation for each action shows the Query API request parameters and the XML
             response. Alternatively, you can use one of the AWS SDKs to access an API that's tailored
             to the programming language or platform that you're using. For more information, see
             <a href="https://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.
             </para>
              <note> 
             <para>
             Each ACM Private CA API action has a throttling limit which determines the number
             of times the action can be called per second. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaLimits.html#PcaLimits-api">API
             Rate Limits in ACM Private CA</a> in the ACM Private CA user guide.
             </para>
              </note>
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor">
             <summary>
             Constructs AmazonACMPCAClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonACMPCAClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(Amazon.ACMPCA.AmazonACMPCAConfig)">
             <summary>
             Constructs AmazonACMPCAClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonACMPCAClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ACMPCA.AmazonACMPCAConfig)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Credentials and an
            AmazonACMPCAClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonACMPCAClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String,Amazon.ACMPCA.AmazonACMPCAConfig)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID, AWS Secret Key and an
            AmazonACMPCAClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonACMPCAClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.#ctor(System.String,System.String,System.String,Amazon.ACMPCA.AmazonACMPCAConfig)">
            <summary>
            Constructs AmazonACMPCAClient with AWS Access Key ID, AWS Secret Key and an
            AmazonACMPCAClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonACMPCAClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.ACMPCA.AmazonACMPCAClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.CreateCertificateAuthorityAsync(Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a root or subordinate private certificate authority (CA). You must specify
            the CA configuration, the certificate revocation list (CRL) configuration, the CA
            type, and an optional idempotency token to avoid accidental creation of multiple CAs.
            The CA configuration specifies the name of the algorithm and key size to be used to
            create the CA private key, the type of signing algorithm that the CA uses, and X.500
            subject information. The CRL configuration specifies the CRL expiration period in
            days (the validity period of the CRL), the Amazon S3 bucket that will contain the
            CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by
            the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidPolicyException">
            The S3 bucket policy is not valid. The policy must give ACM Private CA rights to read
            from and write to the bucket and find the bucket location.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreateCertificateAuthority">REST API Reference for CreateCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.CreateCertificateAuthorityAuditReportAsync(Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an audit report that lists every time that your CA private key is used. The
            report is saved in the Amazon S3 bucket that you specify on input. The <a>IssueCertificate</a>
            and <a>RevokeCertificate</a> actions use the private key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateAuthorityAuditReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCertificateAuthorityAuditReport service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreateCertificateAuthorityAuditReport">REST API Reference for CreateCertificateAuthorityAuditReport Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.CreatePermissionAsync(Amazon.ACMPCA.Model.CreatePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns permissions from a private CA to a designated AWS service. Services are specified
            by their service principals and can be given permission to create and retrieve certificates
            on a private CA. Services can also be given permission to list the active permissions
            that the private CA has granted. For ACM to automatically renew your private CA's
            certificates, you must assign all possible permissions from the CA to the ACM service
            principal.
            
             
            <para>
            At this time, you can only assign permissions to ACM (<code>acm.amazonaws.com</code>).
            Permissions can be revoked with the <a>DeletePermission</a> action and listed with
            the <a>ListPermissions</a> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePermission service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.PermissionAlreadyExistsException">
            The designated permission has already been given to the user.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreatePermission">REST API Reference for CreatePermission Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.DeleteCertificateAuthorityAsync(Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a private certificate authority (CA). You must provide the Amazon Resource
            Name (ARN) of the private CA that you want to delete. You can find the ARN by calling
            the <a>ListCertificateAuthorities</a> action. 
            
             <note> 
            <para>
            Deleting a CA will invalidate other CAs and certificates below it in your CA hierarchy.
            </para>
             </note> 
            <para>
            Before you can delete a CA that you have created and activated, you must disable it.
            To do this, call the <a>UpdateCertificateAuthority</a> action and set the <b>CertificateAuthorityStatus</b>
            parameter to <code>DISABLED</code>. 
            </para>
             
            <para>
            Additionally, you can delete a CA if you are waiting for it to be created (that is,
            the status of the CA is <code>CREATING</code>). You can also delete it if the CA has
            been created but you haven't yet imported the signed certificate into ACM Private
            CA (that is, the status of the CA is <code>PENDING_CERTIFICATE</code>). 
            </para>
             
            <para>
            When you successfully call <a>DeleteCertificateAuthority</a>, the CA's status changes
            to <code>DELETED</code>. However, the CA won't be permanently deleted until the restoration
            period has passed. By default, if you do not set the <code>PermanentDeletionTimeInDays</code>
            parameter, the CA remains restorable for 30 days. You can set the parameter from 7
            to 30 days. The <a>DescribeCertificateAuthority</a> action returns the time remaining
            in the restoration window of a private CA in the <code>DELETED</code> state. To restore
            an eligible CA, call the <a>RestoreCertificateAuthority</a> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DeleteCertificateAuthority">REST API Reference for DeleteCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.DeletePermissionAsync(Amazon.ACMPCA.Model.DeletePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions that a private CA assigned to a designated AWS service. Permissions
            can be created with the <a>CreatePermission</a> action and listed with the <a>ListPermissions</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePermission service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DeletePermission">REST API Reference for DeletePermission Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.DescribeCertificateAuthorityAsync(Amazon.ACMPCA.Model.DescribeCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about your private certificate authority (CA). You specify the private
            CA on input by its ARN (Amazon Resource Name). The output contains the status of your
            CA. This can be any of the following: 
            
             <ul> <li> 
            <para>
             <code>CREATING</code> - ACM Private CA is creating your private certificate authority.
            </para>
             </li> <li> 
            <para>
             <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your
            ACM Private CA-hosted or on-premises root or subordinate CA to sign your private CA
            CSR and then import it into PCA. 
            </para>
             </li> <li> 
            <para>
             <code>ACTIVE</code> - Your private CA is active.
            </para>
             </li> <li> 
            <para>
             <code>DISABLED</code> - Your private CA has been disabled.
            </para>
             </li> <li> 
            <para>
             <code>EXPIRED</code> - Your private CA certificate has expired.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems
            such a network outage or backend AWS failure or other errors. A failed CA can never
            return to the pending state. You must create a new CA. 
            </para>
             </li> <li> 
            <para>
             <code>DELETED</code> - Your private CA is within the restoration period, after which
            it is permanently deleted. The length of time remaining in the CA's restoration period
            is also included in this action's output.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DescribeCertificateAuthority">REST API Reference for DescribeCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.DescribeCertificateAuthorityAuditReportAsync(Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a>
            action. Audit information is created every time the certificate authority (CA) private
            key is used. The private key is used when you call the <a>IssueCertificate</a> action
            or the <a>RevokeCertificate</a> action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificateAuthorityAuditReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificateAuthorityAuditReport service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DescribeCertificateAuthorityAuditReport">REST API Reference for DescribeCertificateAuthorityAuditReport Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.GetCertificateAsync(Amazon.ACMPCA.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a certificate from your private CA. The ARN of the certificate is returned
            when you call the <a>IssueCertificate</a> action. You must specify both the ARN of
            your private CA and the ARN of the issued certificate when calling the <b>GetCertificate</b>
            action. You can retrieve the certificate if it is in the <b>ISSUED</b> state. You
            can call the <a>CreateCertificateAuthorityAuditReport</a> action to create a report
            that contains information about all of the certificates issued and revoked by your
            private CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.GetCertificateAuthorityCertificateAsync(Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the certificate and certificate chain for your private certificate authority
            (CA). Both the certificate and the chain are base64 PEM-encoded. The chain does not
            include the CA certificate. Each certificate in the chain signs the one before it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificateAuthorityCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificateAuthorityCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificateAuthorityCertificate">REST API Reference for GetCertificateAuthorityCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.GetCertificateAuthorityCsrAsync(Amazon.ACMPCA.Model.GetCertificateAuthorityCsrRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the certificate signing request (CSR) for your private certificate authority
            (CA). The CSR is created when you call the <a>CreateCertificateAuthority</a> action.
            Sign the CSR with your ACM Private CA-hosted or on-premises root or subordinate CA.
            Then import the signed certificate back into ACM Private CA by calling the <a>ImportCertificateAuthorityCertificate</a>
            action. The CSR is returned as a base64 PEM-encoded string.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificateAuthorityCsr service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificateAuthorityCsr service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificateAuthorityCsr">REST API Reference for GetCertificateAuthorityCsr Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.ImportCertificateAuthorityCertificateAsync(Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a signed private CA certificate into ACM Private CA. This action is used when
            you are using a chain of trust whose root is located outside ACM Private CA. Before
            you can call this action, the following preparations must in place:
            
             <ol> <li> 
            <para>
            In ACM Private CA, call the <a>CreateCertificateAuthority</a> action to create the
            private CA that that you plan to back with the imported certificate.
            </para>
             </li> <li> 
            <para>
            Call the <a>GetCertificateAuthorityCsr</a> action to generate a certificate signing
            request (CSR).
            </para>
             </li> <li> 
            <para>
            Sign the CSR using a root or intermediate CA hosted either by an on-premises PKI hierarchy
            or a commercial CA..
            </para>
             </li> <li> 
            <para>
            Create a certificate chain and copy the signed certificate and the certificate chain
            to your working directory.
            </para>
             </li> </ol> 
            <para>
            The following requirements apply when you import a CA certificate.
            </para>
             <ul> <li> 
            <para>
            You cannot import a non-self-signed certificate for use as a root CA.
            </para>
             </li> <li> 
            <para>
            You cannot import a self-signed certificate for use as a subordinate CA.
            </para>
             </li> <li> 
            <para>
            Your certificate chain must not include the private CA certificate that you are importing.
            </para>
             </li> <li> 
            <para>
            Your ACM Private CA-hosted or on-premises CA certificate must be the last certificate
            in your chain. The subordinate certificate, if any, that your root CA signed must
            be next to last. The subordinate certificate signed by the preceding subordinate CA
            must come next, and so on until your chain is built. 
            </para>
             </li> <li> 
            <para>
            The chain must be PEM-encoded.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificateAuthorityCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificateAuthorityCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.CertificateMismatchException">
            The certificate authority certificate you are importing does not comply with conditions
            specified in the certificate that signed it.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidRequestException">
            The request action cannot be performed or is prohibited.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.MalformedCertificateException">
            One or more fields in the certificate are invalid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ImportCertificateAuthorityCertificate">REST API Reference for ImportCertificateAuthorityCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.IssueCertificateAsync(Amazon.ACMPCA.Model.IssueCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Uses your private certificate authority (CA) to issue a client certificate. This action
            returns the Amazon Resource Name (ARN) of the certificate. You can retrieve the certificate
            by calling the <a>GetCertificate</a> action and specifying the ARN. 
            
             <note> 
            <para>
            You cannot use the ACM <b>ListCertificateAuthorities</b> action to retrieve the ARNs
            of the certificates that you issue by using ACM Private CA.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IssueCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IssueCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.MalformedCSRException">
            The certificate signing request is invalid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/IssueCertificate">REST API Reference for IssueCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.ListCertificateAuthoritiesAsync(Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the private certificate authorities that you created by using the <a>CreateCertificateAuthority</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificateAuthorities service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificateAuthorities service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidNextTokenException">
            The token specified in the <code>NextToken</code> argument is not valid. Use the token
            returned from your previous call to <a>ListCertificateAuthorities</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListCertificateAuthorities">REST API Reference for ListCertificateAuthorities Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.ListPermissionsAsync(Amazon.ACMPCA.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the permissions, if any, that have been assigned by a private CA. Permissions
            can be granted with the <a>CreatePermission</a> action and revoked with the <a>DeletePermission</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidNextTokenException">
            The token specified in the <code>NextToken</code> argument is not valid. Use the token
            returned from your previous call to <a>ListCertificateAuthorities</a>.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.ListTagsAsync(Amazon.ACMPCA.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags, if any, that are associated with your private CA. Tags are labels
            that you can use to identify and organize your CAs. Each tag consists of a key and
            an optional value. Call the <a>TagCertificateAuthority</a> action to add one or more
            tags to your CA. Call the <a>UntagCertificateAuthority</a> action to remove tags.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.RestoreCertificateAuthorityAsync(Amazon.ACMPCA.Model.RestoreCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You
            can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b>
            parameter of the <a>DeleteCertificateAuthority</a> action. Currently, you can specify
            7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by
            default you can restore the CA at any time in a 30 day period. You can check the time
            remaining in the restoration period of a private CA in the <code>DELETED</code> state
            by calling the <a>DescribeCertificateAuthority</a> or <a>ListCertificateAuthorities</a>
            actions. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b>
            action returns. To change its status to <code>ACTIVE</code>, call the <a>UpdateCertificateAuthority</a>
            action. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion,
            you must use the <a>ImportCertificateAuthorityCertificate</a> action to import a certificate
            authority into the private CA before it can be activated. You cannot restore a CA
            after the restoration period has ended.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/RestoreCertificateAuthority">REST API Reference for RestoreCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.RevokeCertificateAsync(Amazon.ACMPCA.Model.RevokeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes a certificate that was issued inside ACM Private CA. If you enable a certificate
            revocation list (CRL) when you create or update your private CA, information about
            the revoked certificates will be included in the CRL. ACM Private CA writes the CRL
            to an S3 bucket that you specify. For more information about revocation, see the <a>CrlConfiguration</a>
            structure. ACM Private CA also writes revocation information to the audit report.
            For more information, see <a>CreateCertificateAuthorityAuditReport</a>. 
            
             <note> 
            <para>
            You cannot revoke a root CA self-signed certificate.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidRequestException">
            The request action cannot be performed or is prohibited.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestAlreadyProcessedException">
            Your request has already been completed.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/RevokeCertificate">REST API Reference for RevokeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.TagCertificateAuthorityAsync(Amazon.ACMPCA.Model.TagCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to your private CA. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            You specify the private CA on input by its Amazon Resource Name (ARN). You specify
            the tag by using a key-value pair. You can apply a tag to just one private CA if you
            want to identify a specific characteristic of that CA, or you can apply the same tag
            to multiple private CAs if you want to filter for a common relationship among those
            CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> action.
            Call the <a>ListTags</a> action to see what tags are associated with your CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.TooManyTagsException">
            You can associate up to 50 tags with a private CA. Exception information is contained
            in the exception message field.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/TagCertificateAuthority">REST API Reference for TagCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.UntagCertificateAuthorityAsync(Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Remove one or more tags from your private CA. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this action, the tag
            will be removed regardless of value. If you specify a value, the tag is removed only
            if it is associated with the specified value. To add tags to a private CA, use the
            <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> action to see what tags are
            associated with your CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/UntagCertificateAuthority">REST API Reference for UntagCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.AmazonACMPCAClient.UpdateCertificateAuthorityAsync(Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the status or configuration of a private certificate authority (CA). Your
            private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before
            you can update it. You can disable a private CA that is in the <code>ACTIVE</code>
            state or make a CA that is in the <code>DISABLED</code> state active again.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidPolicyException">
            The S3 bucket policy is not valid. The policy must give ACM Private CA rights to read
            from and write to the bucket and find the bucket location.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/UpdateCertificateAuthority">REST API Reference for UpdateCertificateAuthority Operation</seealso>
        </member>
        <member name="T:Amazon.ACMPCA.IAmazonACMPCA">
             <summary>
             Interface for accessing ACMPCA
            
             This is the <i>ACM Private CA API Reference</i>. It provides descriptions, syntax,
             and usage examples for each of the actions and data types involved in creating and
             managing private certificate authorities (CA) for your organization.
             
              
             <para>
             The documentation for each action shows the Query API request parameters and the XML
             response. Alternatively, you can use one of the AWS SDKs to access an API that's tailored
             to the programming language or platform that you're using. For more information, see
             <a href="https://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.
             </para>
              <note> 
             <para>
             Each ACM Private CA API action has a throttling limit which determines the number
             of times the action can be called per second. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaLimits.html#PcaLimits-api">API
             Rate Limits in ACM Private CA</a> in the ACM Private CA user guide.
             </para>
              </note>
             </summary>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.CreateCertificateAuthorityAsync(Amazon.ACMPCA.Model.CreateCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a root or subordinate private certificate authority (CA). You must specify
            the CA configuration, the certificate revocation list (CRL) configuration, the CA
            type, and an optional idempotency token to avoid accidental creation of multiple CAs.
            The CA configuration specifies the name of the algorithm and key size to be used to
            create the CA private key, the type of signing algorithm that the CA uses, and X.500
            subject information. The CRL configuration specifies the CRL expiration period in
            days (the validity period of the CRL), the Amazon S3 bucket that will contain the
            CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by
            the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidPolicyException">
            The S3 bucket policy is not valid. The policy must give ACM Private CA rights to read
            from and write to the bucket and find the bucket location.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreateCertificateAuthority">REST API Reference for CreateCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.CreateCertificateAuthorityAuditReportAsync(Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an audit report that lists every time that your CA private key is used. The
            report is saved in the Amazon S3 bucket that you specify on input. The <a>IssueCertificate</a>
            and <a>RevokeCertificate</a> actions use the private key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateAuthorityAuditReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCertificateAuthorityAuditReport service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreateCertificateAuthorityAuditReport">REST API Reference for CreateCertificateAuthorityAuditReport Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.CreatePermissionAsync(Amazon.ACMPCA.Model.CreatePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns permissions from a private CA to a designated AWS service. Services are specified
            by their service principals and can be given permission to create and retrieve certificates
            on a private CA. Services can also be given permission to list the active permissions
            that the private CA has granted. For ACM to automatically renew your private CA's
            certificates, you must assign all possible permissions from the CA to the ACM service
            principal.
            
             
            <para>
            At this time, you can only assign permissions to ACM (<code>acm.amazonaws.com</code>).
            Permissions can be revoked with the <a>DeletePermission</a> action and listed with
            the <a>ListPermissions</a> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePermission service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.PermissionAlreadyExistsException">
            The designated permission has already been given to the user.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/CreatePermission">REST API Reference for CreatePermission Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.DeleteCertificateAuthorityAsync(Amazon.ACMPCA.Model.DeleteCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a private certificate authority (CA). You must provide the Amazon Resource
            Name (ARN) of the private CA that you want to delete. You can find the ARN by calling
            the <a>ListCertificateAuthorities</a> action. 
            
             <note> 
            <para>
            Deleting a CA will invalidate other CAs and certificates below it in your CA hierarchy.
            </para>
             </note> 
            <para>
            Before you can delete a CA that you have created and activated, you must disable it.
            To do this, call the <a>UpdateCertificateAuthority</a> action and set the <b>CertificateAuthorityStatus</b>
            parameter to <code>DISABLED</code>. 
            </para>
             
            <para>
            Additionally, you can delete a CA if you are waiting for it to be created (that is,
            the status of the CA is <code>CREATING</code>). You can also delete it if the CA has
            been created but you haven't yet imported the signed certificate into ACM Private
            CA (that is, the status of the CA is <code>PENDING_CERTIFICATE</code>). 
            </para>
             
            <para>
            When you successfully call <a>DeleteCertificateAuthority</a>, the CA's status changes
            to <code>DELETED</code>. However, the CA won't be permanently deleted until the restoration
            period has passed. By default, if you do not set the <code>PermanentDeletionTimeInDays</code>
            parameter, the CA remains restorable for 30 days. You can set the parameter from 7
            to 30 days. The <a>DescribeCertificateAuthority</a> action returns the time remaining
            in the restoration window of a private CA in the <code>DELETED</code> state. To restore
            an eligible CA, call the <a>RestoreCertificateAuthority</a> action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DeleteCertificateAuthority">REST API Reference for DeleteCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.DeletePermissionAsync(Amazon.ACMPCA.Model.DeletePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions that a private CA assigned to a designated AWS service. Permissions
            can be created with the <a>CreatePermission</a> action and listed with the <a>ListPermissions</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePermission service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePermission service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DeletePermission">REST API Reference for DeletePermission Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.DescribeCertificateAuthorityAsync(Amazon.ACMPCA.Model.DescribeCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about your private certificate authority (CA). You specify the private
            CA on input by its ARN (Amazon Resource Name). The output contains the status of your
            CA. This can be any of the following: 
            
             <ul> <li> 
            <para>
             <code>CREATING</code> - ACM Private CA is creating your private certificate authority.
            </para>
             </li> <li> 
            <para>
             <code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your
            ACM Private CA-hosted or on-premises root or subordinate CA to sign your private CA
            CSR and then import it into PCA. 
            </para>
             </li> <li> 
            <para>
             <code>ACTIVE</code> - Your private CA is active.
            </para>
             </li> <li> 
            <para>
             <code>DISABLED</code> - Your private CA has been disabled.
            </para>
             </li> <li> 
            <para>
             <code>EXPIRED</code> - Your private CA certificate has expired.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems
            such a network outage or backend AWS failure or other errors. A failed CA can never
            return to the pending state. You must create a new CA. 
            </para>
             </li> <li> 
            <para>
             <code>DELETED</code> - Your private CA is within the restoration period, after which
            it is permanently deleted. The length of time remaining in the CA's restoration period
            is also included in this action's output.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DescribeCertificateAuthority">REST API Reference for DescribeCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.DescribeCertificateAuthorityAuditReportAsync(Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportRequest,System.Threading.CancellationToken)">
            <summary>
            Lists information about a specific audit report created by calling the <a>CreateCertificateAuthorityAuditReport</a>
            action. Audit information is created every time the certificate authority (CA) private
            key is used. The private key is used when you call the <a>IssueCertificate</a> action
            or the <a>RevokeCertificate</a> action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificateAuthorityAuditReport service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificateAuthorityAuditReport service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/DescribeCertificateAuthorityAuditReport">REST API Reference for DescribeCertificateAuthorityAuditReport Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.GetCertificateAsync(Amazon.ACMPCA.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a certificate from your private CA. The ARN of the certificate is returned
            when you call the <a>IssueCertificate</a> action. You must specify both the ARN of
            your private CA and the ARN of the issued certificate when calling the <b>GetCertificate</b>
            action. You can retrieve the certificate if it is in the <b>ISSUED</b> state. You
            can call the <a>CreateCertificateAuthorityAuditReport</a> action to create a report
            that contains information about all of the certificates issued and revoked by your
            private CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.GetCertificateAuthorityCertificateAsync(Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the certificate and certificate chain for your private certificate authority
            (CA). Both the certificate and the chain are base64 PEM-encoded. The chain does not
            include the CA certificate. Each certificate in the chain signs the one before it.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificateAuthorityCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificateAuthorityCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificateAuthorityCertificate">REST API Reference for GetCertificateAuthorityCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.GetCertificateAuthorityCsrAsync(Amazon.ACMPCA.Model.GetCertificateAuthorityCsrRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the certificate signing request (CSR) for your private certificate authority
            (CA). The CSR is created when you call the <a>CreateCertificateAuthority</a> action.
            Sign the CSR with your ACM Private CA-hosted or on-premises root or subordinate CA.
            Then import the signed certificate back into ACM Private CA by calling the <a>ImportCertificateAuthorityCertificate</a>
            action. The CSR is returned as a base64 PEM-encoded string.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificateAuthorityCsr service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificateAuthorityCsr service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/GetCertificateAuthorityCsr">REST API Reference for GetCertificateAuthorityCsr Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.ImportCertificateAuthorityCertificateAsync(Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a signed private CA certificate into ACM Private CA. This action is used when
            you are using a chain of trust whose root is located outside ACM Private CA. Before
            you can call this action, the following preparations must in place:
            
             <ol> <li> 
            <para>
            In ACM Private CA, call the <a>CreateCertificateAuthority</a> action to create the
            private CA that that you plan to back with the imported certificate.
            </para>
             </li> <li> 
            <para>
            Call the <a>GetCertificateAuthorityCsr</a> action to generate a certificate signing
            request (CSR).
            </para>
             </li> <li> 
            <para>
            Sign the CSR using a root or intermediate CA hosted either by an on-premises PKI hierarchy
            or a commercial CA..
            </para>
             </li> <li> 
            <para>
            Create a certificate chain and copy the signed certificate and the certificate chain
            to your working directory.
            </para>
             </li> </ol> 
            <para>
            The following requirements apply when you import a CA certificate.
            </para>
             <ul> <li> 
            <para>
            You cannot import a non-self-signed certificate for use as a root CA.
            </para>
             </li> <li> 
            <para>
            You cannot import a self-signed certificate for use as a subordinate CA.
            </para>
             </li> <li> 
            <para>
            Your certificate chain must not include the private CA certificate that you are importing.
            </para>
             </li> <li> 
            <para>
            Your ACM Private CA-hosted or on-premises CA certificate must be the last certificate
            in your chain. The subordinate certificate, if any, that your root CA signed must
            be next to last. The subordinate certificate signed by the preceding subordinate CA
            must come next, and so on until your chain is built. 
            </para>
             </li> <li> 
            <para>
            The chain must be PEM-encoded.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificateAuthorityCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificateAuthorityCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.CertificateMismatchException">
            The certificate authority certificate you are importing does not comply with conditions
            specified in the certificate that signed it.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidRequestException">
            The request action cannot be performed or is prohibited.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.MalformedCertificateException">
            One or more fields in the certificate are invalid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ImportCertificateAuthorityCertificate">REST API Reference for ImportCertificateAuthorityCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.IssueCertificateAsync(Amazon.ACMPCA.Model.IssueCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Uses your private certificate authority (CA) to issue a client certificate. This action
            returns the Amazon Resource Name (ARN) of the certificate. You can retrieve the certificate
            by calling the <a>GetCertificate</a> action and specifying the ARN. 
            
             <note> 
            <para>
            You cannot use the ACM <b>ListCertificateAuthorities</b> action to retrieve the ARNs
            of the certificates that you issue by using ACM Private CA.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the IssueCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IssueCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.MalformedCSRException">
            The certificate signing request is invalid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/IssueCertificate">REST API Reference for IssueCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.ListCertificateAuthoritiesAsync(Amazon.ACMPCA.Model.ListCertificateAuthoritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the private certificate authorities that you created by using the <a>CreateCertificateAuthority</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificateAuthorities service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificateAuthorities service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidNextTokenException">
            The token specified in the <code>NextToken</code> argument is not valid. Use the token
            returned from your previous call to <a>ListCertificateAuthorities</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListCertificateAuthorities">REST API Reference for ListCertificateAuthorities Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.ListPermissionsAsync(Amazon.ACMPCA.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the permissions, if any, that have been assigned by a private CA. Permissions
            can be granted with the <a>CreatePermission</a> action and revoked with the <a>DeletePermission</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidNextTokenException">
            The token specified in the <code>NextToken</code> argument is not valid. Use the token
            returned from your previous call to <a>ListCertificateAuthorities</a>.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.ListTagsAsync(Amazon.ACMPCA.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags, if any, that are associated with your private CA. Tags are labels
            that you can use to identify and organize your CAs. Each tag consists of a key and
            an optional value. Call the <a>TagCertificateAuthority</a> action to add one or more
            tags to your CA. Call the <a>UntagCertificateAuthority</a> action to remove tags.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.RestoreCertificateAuthorityAsync(Amazon.ACMPCA.Model.RestoreCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You
            can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b>
            parameter of the <a>DeleteCertificateAuthority</a> action. Currently, you can specify
            7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b> value, by
            default you can restore the CA at any time in a 30 day period. You can check the time
            remaining in the restoration period of a private CA in the <code>DELETED</code> state
            by calling the <a>DescribeCertificateAuthority</a> or <a>ListCertificateAuthorities</a>
            actions. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b>
            action returns. To change its status to <code>ACTIVE</code>, call the <a>UpdateCertificateAuthority</a>
            action. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion,
            you must use the <a>ImportCertificateAuthorityCertificate</a> action to import a certificate
            authority into the private CA before it can be activated. You cannot restore a CA
            after the restoration period has ended.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/RestoreCertificateAuthority">REST API Reference for RestoreCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.RevokeCertificateAsync(Amazon.ACMPCA.Model.RevokeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes a certificate that was issued inside ACM Private CA. If you enable a certificate
            revocation list (CRL) when you create or update your private CA, information about
            the revoked certificates will be included in the CRL. ACM Private CA writes the CRL
            to an S3 bucket that you specify. For more information about revocation, see the <a>CrlConfiguration</a>
            structure. ACM Private CA also writes revocation information to the audit report.
            For more information, see <a>CreateCertificateAuthorityAuditReport</a>. 
            
             <note> 
            <para>
            You cannot revoke a root CA self-signed certificate.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokeCertificate service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidRequestException">
            The request action cannot be performed or is prohibited.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.LimitExceededException">
            An ACM Private CA limit has been exceeded. See the exception message returned to determine
            the limit that was exceeded.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestAlreadyProcessedException">
            Your request has already been completed.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestFailedException">
            The request has failed for an unspecified reason.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.RequestInProgressException">
            Your request is already in progress.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/RevokeCertificate">REST API Reference for RevokeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.TagCertificateAuthorityAsync(Amazon.ACMPCA.Model.TagCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to your private CA. Tags are labels that you can use to identify
            and organize your AWS resources. Each tag consists of a key and an optional value.
            You specify the private CA on input by its Amazon Resource Name (ARN). You specify
            the tag by using a key-value pair. You can apply a tag to just one private CA if you
            want to identify a specific characteristic of that CA, or you can apply the same tag
            to multiple private CAs if you want to filter for a common relationship among those
            CAs. To remove one or more tags, use the <a>UntagCertificateAuthority</a> action.
            Call the <a>ListTags</a> action to see what tags are associated with your CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.TooManyTagsException">
            You can associate up to 50 tags with a private CA. Exception information is contained
            in the exception message field.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/TagCertificateAuthority">REST API Reference for TagCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.UntagCertificateAuthorityAsync(Amazon.ACMPCA.Model.UntagCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Remove one or more tags from your private CA. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this action, the tag
            will be removed regardless of value. If you specify a value, the tag is removed only
            if it is associated with the specified value. To add tags to a private CA, use the
            <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> action to see what tags are
            associated with your CA.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidTagException">
            The tag associated with the CA is not valid. The invalid argument is contained in
            the message field.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/UntagCertificateAuthority">REST API Reference for UntagCertificateAuthority Operation</seealso>
        </member>
        <member name="M:Amazon.ACMPCA.IAmazonACMPCA.UpdateCertificateAuthorityAsync(Amazon.ACMPCA.Model.UpdateCertificateAuthorityRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the status or configuration of a private certificate authority (CA). Your
            private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before
            you can update it. You can disable a private CA that is in the <code>ACTIVE</code>
            state or make a CA that is in the <code>DISABLED</code> state active again.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateAuthority service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificateAuthority service method, as returned by ACMPCA.</returns>
            <exception cref="T:Amazon.ACMPCA.Model.ConcurrentModificationException">
            A previous update to your private CA is still ongoing.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArgsException">
            One or more of the specified arguments was not valid.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidPolicyException">
            The S3 bucket policy is not valid. The policy must give ACM Private CA rights to read
            from and write to the bucket and find the bucket location.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.InvalidStateException">
            The private CA is in a state during which a report or certificate cannot be generated.
            </exception>
            <exception cref="T:Amazon.ACMPCA.Model.ResourceNotFoundException">
            A resource such as a private CA, S3 bucket, certificate, or audit report cannot be
            found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-pca-2017-08-22/UpdateCertificateAuthority">REST API Reference for UpdateCertificateAuthority Operation</seealso>
        </member>
    </members>
</doc>
